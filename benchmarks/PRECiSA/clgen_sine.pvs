% This file is automatically generated by PRECiSA 
% 2017-03-25 17:04:20.598157 UTC

% maxDepth: 7 , prec: 10^-14 , displayPrec: 2

clgen_sine: THEORY
BEGIN

IMPORTING PRECiSA@bbiasp, PRECiSA@bbiadp, PRECiSA@precIOsa,  PRECiSA@strategies  

sine_r_X: real

sine_0_aeexpr : string = "aebounddp_sub(sine_r_X, ulp_dp(sine_r_X)/2, (((sine_r_X * (sine_r_X * sine_r_X)) / 6) + (((sine_r_X * (sine_r_X * (sine_r_X * (sine_r_X * sine_r_X)))) / 120) - ((sine_r_X * (sine_r_X * (sine_r_X * (sine_r_X * (sine_r_X * (sine_r_X * sine_r_X)))))) / 5040))), aebounddp_add(((sine_r_X * (sine_r_X * sine_r_X)) / 6), aebounddp_div((sine_r_X * (sine_r_X * sine_r_X)), aebounddp_mul(sine_r_X, ulp_dp(sine_r_X)/2, (sine_r_X * sine_r_X), aebounddp_mul(sine_r_X, ulp_dp(sine_r_X)/2, sine_r_X, ulp_dp(sine_r_X)/2)), 6, 0), (((sine_r_X * (sine_r_X * (sine_r_X * (sine_r_X * sine_r_X)))) / 120) - ((sine_r_X * (sine_r_X * (sine_r_X * (sine_r_X * (sine_r_X * (sine_r_X * sine_r_X)))))) / 5040)), aebounddp_sub(((sine_r_X * (sine_r_X * (sine_r_X * (sine_r_X * sine_r_X)))) / 120), aebounddp_div((sine_r_X * (sine_r_X * (sine_r_X * (sine_r_X * sine_r_X)))), aebounddp_mul(sine_r_X, ulp_dp(sine_r_X)/2, (sine_r_X * (sine_r_X * (sine_r_X * sine_r_X))), aebounddp_mul(sine_r_X, ulp_dp(sine_r_X)/2, (sine_r_X * (sine_r_X * sine_r_X)), aebounddp_mul(sine_r_X, ulp_dp(sine_r_X)/2, (sine_r_X * sine_r_X), aebounddp_mul(sine_r_X, ulp_dp(sine_r_X)/2, sine_r_X, ulp_dp(sine_r_X)/2)))), 120, 0), ((sine_r_X * (sine_r_X * (sine_r_X * (sine_r_X * (sine_r_X * (sine_r_X * sine_r_X)))))) / 5040), aebounddp_div((sine_r_X * (sine_r_X * (sine_r_X * (sine_r_X * (sine_r_X * (sine_r_X * sine_r_X)))))), aebounddp_mul(sine_r_X, ulp_dp(sine_r_X)/2, (sine_r_X * (sine_r_X * (sine_r_X * (sine_r_X * (sine_r_X * sine_r_X))))), aebounddp_mul(sine_r_X, ulp_dp(sine_r_X)/2, (sine_r_X * (sine_r_X * (sine_r_X * (sine_r_X * sine_r_X)))), aebounddp_mul(sine_r_X, ulp_dp(sine_r_X)/2, (sine_r_X * (sine_r_X * (sine_r_X * sine_r_X))), aebounddp_mul(sine_r_X, ulp_dp(sine_r_X)/2, (sine_r_X * (sine_r_X * sine_r_X)), aebounddp_mul(sine_r_X, ulp_dp(sine_r_X)/2, (sine_r_X * sine_r_X), aebounddp_mul(sine_r_X, ulp_dp(sine_r_X)/2, sine_r_X, ulp_dp(sine_r_X)/2)))))), 5040, 0))))"

sine_0_lemma_str : string = "sine_c_0 : LEMMA~%FORALL(sine_r_X: real, X: unb_double):~%abs(DtoR(X) - sine_r_X)<=ulp_dp(sine_r_X)/2~%AND (((DtoR(RtoD(6)) /= 0) AND (((6 + 0) < 0) OR ((6 - 0) > 0))) AND (((DtoR(RtoD(120)) /= 0) AND (((120 + 0) < 0) OR ((120 - 0) > 0))) AND ((DtoR(RtoD(5040)) /= 0) AND (((5040 + 0) < 0) OR ((5040 - 0) > 0)))))~%AND TRUE~%AND sine_r_X ## [|-1.57079632679,1.57079632679|]~%IMPLIES~%abs(DtoR(sine(X)) - (sine_r_X - (((sine_r_X * (sine_r_X * sine_r_X)) / 6) + (((sine_r_X * (sine_r_X * (sine_r_X * (sine_r_X * sine_r_X)))) / 120) - ((sine_r_X * (sine_r_X * (sine_r_X * (sine_r_X * (sine_r_X * (sine_r_X * sine_r_X)))))) / 5040)))))<= ~a~%"
                             
gen(sout: OStream, ranges:list[[string,ProperInterval]], maxdepth:nat, prec:posreal, displayprec:nat): void =
LET
max  :real = 0,
dummy:void = fprintf (sout, "% This file is automatically generated by PRECiSA ~%"),
dummy:void = fprintf (sout, "clemmas_sine: THEORY ~%"),
dummy:void = fprintf (sout, "BEGIN ~%"),
dummy:void = fprintf (sout, "IMPORTING cert_sine, PRECiSA@bbiasp, PRECiSA@bbiadp ~%"),
dummy:void = fprintf (sout, "~%%|- *_TCC* : PROOF"),
dummy:void = fprintf (sout, "~%%|- (precisa-gen-cert-tcc)"),
dummy:void = fprintf (sout, "~%%|- QED~%~%"),
dummy:void = printf ("Concrete bounds: ~%"),new  :real = fprint_concrete_lemma (sout)(sine_0_lemma_str, sine_0_aeexpr, ranges, maxdepth, prec) ,
max  :real = IF(new>max) THEN new ELSE max ENDIF,
dummy:void = fprint_proof (sout)("sine_0", "sine_c_0") ,
dummy:void = printf(" - lemma ~a: ~-20/pvs:d/~%",("sine_0",new)),
dummy:void = fprintf (sout, "END clemmas_sine ~%")IN
printf("Overall concrete bound: ~-20/pvs:d/~%",max)
main : void = 
LET sout = fopenout(create, "clemmas_sine.pvs"),
i1:ProperInterval = [|-1.57079632679,1.57079632679|] IN 
gen (sout, (: ("sine_r_X",i1) :), 7, 10^-14, 2) & fclose(sout) & printf("File succesfully generated.")

END clgen_sine