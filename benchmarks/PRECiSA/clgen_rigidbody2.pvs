% This file is automatically generated by PRECiSA 
% 2017-03-25 17:03:43.735884 UTC

% maxDepth: 7 , prec: 10^-14 , displayPrec: 2

clgen_rigidbody2: THEORY
BEGIN

IMPORTING PRECiSA@bbiasp, PRECiSA@bbiadp, PRECiSA@precIOsa,  PRECiSA@strategies  

rigidbody2_r_X1, rigidbody2_r_X2, rigidbody2_r_X3: real

rigidBody2_0_aeexpr : string = "aebounddp_sub(((((2 * (rigidbody2_r_X1 * (rigidbody2_r_X2 * rigidbody2_r_X3))) + (3 * (rigidbody2_r_X3 * rigidbody2_r_X3))) - (rigidbody2_r_X2 * (rigidbody2_r_X1 * (rigidbody2_r_X2 * rigidbody2_r_X3)))) + (3 * (rigidbody2_r_X3 * rigidbody2_r_X3))), aebounddp_add((((2 * (rigidbody2_r_X1 * (rigidbody2_r_X2 * rigidbody2_r_X3))) + (3 * (rigidbody2_r_X3 * rigidbody2_r_X3))) - (rigidbody2_r_X2 * (rigidbody2_r_X1 * (rigidbody2_r_X2 * rigidbody2_r_X3)))), aebounddp_sub(((2 * (rigidbody2_r_X1 * (rigidbody2_r_X2 * rigidbody2_r_X3))) + (3 * (rigidbody2_r_X3 * rigidbody2_r_X3))), aebounddp_add((2 * (rigidbody2_r_X1 * (rigidbody2_r_X2 * rigidbody2_r_X3))), aebounddp_mul_p2(1, aebounddp_mul(rigidbody2_r_X1, ulp_dp(rigidbody2_r_X1)/2, (rigidbody2_r_X2 * rigidbody2_r_X3), aebounddp_mul(rigidbody2_r_X2, ulp_dp(rigidbody2_r_X2)/2, rigidbody2_r_X3, ulp_dp(rigidbody2_r_X3)/2))), (3 * (rigidbody2_r_X3 * rigidbody2_r_X3)), aebounddp_mul(3, 0, (rigidbody2_r_X3 * rigidbody2_r_X3), aebounddp_mul(rigidbody2_r_X3, ulp_dp(rigidbody2_r_X3)/2, rigidbody2_r_X3, ulp_dp(rigidbody2_r_X3)/2))), (rigidbody2_r_X2 * (rigidbody2_r_X1 * (rigidbody2_r_X2 * rigidbody2_r_X3))), aebounddp_mul(rigidbody2_r_X2, ulp_dp(rigidbody2_r_X2)/2, (rigidbody2_r_X1 * (rigidbody2_r_X2 * rigidbody2_r_X3)), aebounddp_mul(rigidbody2_r_X1, ulp_dp(rigidbody2_r_X1)/2, (rigidbody2_r_X2 * rigidbody2_r_X3), aebounddp_mul(rigidbody2_r_X2, ulp_dp(rigidbody2_r_X2)/2, rigidbody2_r_X3, ulp_dp(rigidbody2_r_X3)/2)))), (3 * (rigidbody2_r_X3 * rigidbody2_r_X3)), aebounddp_mul(3, 0, (rigidbody2_r_X3 * rigidbody2_r_X3), aebounddp_mul(rigidbody2_r_X3, ulp_dp(rigidbody2_r_X3)/2, rigidbody2_r_X3, ulp_dp(rigidbody2_r_X3)/2))), rigidbody2_r_X2, ulp_dp(rigidbody2_r_X2)/2)"

rigidBody2_0_lemma_str : string = "rigidBody2_c_0 : LEMMA~%FORALL(rigidbody2_r_X1, rigidbody2_r_X2, rigidbody2_r_X3: real, X1, X2, X3: unb_double):~%abs(DtoR(X1) - rigidbody2_r_X1)<=ulp_dp(rigidbody2_r_X1)/2 AND abs(DtoR(X2) - rigidbody2_r_X2)<=ulp_dp(rigidbody2_r_X2)/2 AND abs(DtoR(X3) - rigidbody2_r_X3)<=ulp_dp(rigidbody2_r_X3)/2~%AND (1 < (ieee754dp_prec - Fexp(Dmul(X1, Dmul(X2, X3)))))~%AND TRUE~%AND rigidbody2_r_X1 ## [|-15,15|] AND  rigidbody2_r_X2 ## [|-15,15|] AND  rigidbody2_r_X3 ## [|-15,15|]~%IMPLIES~%abs(DtoR(rigidBody2(X1, X2, X3)) - (((((2 * (rigidbody2_r_X1 * (rigidbody2_r_X2 * rigidbody2_r_X3))) + (3 * (rigidbody2_r_X3 * rigidbody2_r_X3))) - (rigidbody2_r_X2 * (rigidbody2_r_X1 * (rigidbody2_r_X2 * rigidbody2_r_X3)))) + (3 * (rigidbody2_r_X3 * rigidbody2_r_X3))) - rigidbody2_r_X2))<= ~a~%"
                                   

rigidBody2_1_aeexpr : string = "aebounddp_sub(((((2 * (rigidbody2_r_X1 * (rigidbody2_r_X2 * rigidbody2_r_X3))) + (3 * (rigidbody2_r_X3 * rigidbody2_r_X3))) - (rigidbody2_r_X2 * (rigidbody2_r_X1 * (rigidbody2_r_X2 * rigidbody2_r_X3)))) + (3 * (rigidbody2_r_X3 * rigidbody2_r_X3))), aebounddp_add((((2 * (rigidbody2_r_X1 * (rigidbody2_r_X2 * rigidbody2_r_X3))) + (3 * (rigidbody2_r_X3 * rigidbody2_r_X3))) - (rigidbody2_r_X2 * (rigidbody2_r_X1 * (rigidbody2_r_X2 * rigidbody2_r_X3)))), aebounddp_sub(((2 * (rigidbody2_r_X1 * (rigidbody2_r_X2 * rigidbody2_r_X3))) + (3 * (rigidbody2_r_X3 * rigidbody2_r_X3))), aebounddp_add((2 * (rigidbody2_r_X1 * (rigidbody2_r_X2 * rigidbody2_r_X3))), aebounddp_mul(2, 0, (rigidbody2_r_X1 * (rigidbody2_r_X2 * rigidbody2_r_X3)), aebounddp_mul(rigidbody2_r_X1, ulp_dp(rigidbody2_r_X1)/2, (rigidbody2_r_X2 * rigidbody2_r_X3), aebounddp_mul(rigidbody2_r_X2, ulp_dp(rigidbody2_r_X2)/2, rigidbody2_r_X3, ulp_dp(rigidbody2_r_X3)/2))), (3 * (rigidbody2_r_X3 * rigidbody2_r_X3)), aebounddp_mul(3, 0, (rigidbody2_r_X3 * rigidbody2_r_X3), aebounddp_mul(rigidbody2_r_X3, ulp_dp(rigidbody2_r_X3)/2, rigidbody2_r_X3, ulp_dp(rigidbody2_r_X3)/2))), (rigidbody2_r_X2 * (rigidbody2_r_X1 * (rigidbody2_r_X2 * rigidbody2_r_X3))), aebounddp_mul(rigidbody2_r_X2, ulp_dp(rigidbody2_r_X2)/2, (rigidbody2_r_X1 * (rigidbody2_r_X2 * rigidbody2_r_X3)), aebounddp_mul(rigidbody2_r_X1, ulp_dp(rigidbody2_r_X1)/2, (rigidbody2_r_X2 * rigidbody2_r_X3), aebounddp_mul(rigidbody2_r_X2, ulp_dp(rigidbody2_r_X2)/2, rigidbody2_r_X3, ulp_dp(rigidbody2_r_X3)/2)))), (3 * (rigidbody2_r_X3 * rigidbody2_r_X3)), aebounddp_mul(3, 0, (rigidbody2_r_X3 * rigidbody2_r_X3), aebounddp_mul(rigidbody2_r_X3, ulp_dp(rigidbody2_r_X3)/2, rigidbody2_r_X3, ulp_dp(rigidbody2_r_X3)/2))), rigidbody2_r_X2, ulp_dp(rigidbody2_r_X2)/2)"

rigidBody2_1_lemma_str : string = "rigidBody2_c_1 : LEMMA~%FORALL(rigidbody2_r_X1, rigidbody2_r_X2, rigidbody2_r_X3: real, X1, X2, X3: unb_double):~%abs(DtoR(X1) - rigidbody2_r_X1)<=ulp_dp(rigidbody2_r_X1)/2 AND abs(DtoR(X2) - rigidbody2_r_X2)<=ulp_dp(rigidbody2_r_X2)/2 AND abs(DtoR(X3) - rigidbody2_r_X3)<=ulp_dp(rigidbody2_r_X3)/2~%AND (1 >= (ieee754dp_prec - Fexp(Dmul(X1, Dmul(X2, X3)))))~%AND TRUE~%AND rigidbody2_r_X1 ## [|-15,15|] AND  rigidbody2_r_X2 ## [|-15,15|] AND  rigidbody2_r_X3 ## [|-15,15|]~%IMPLIES~%abs(DtoR(rigidBody2(X1, X2, X3)) - (((((2 * (rigidbody2_r_X1 * (rigidbody2_r_X2 * rigidbody2_r_X3))) + (3 * (rigidbody2_r_X3 * rigidbody2_r_X3))) - (rigidbody2_r_X2 * (rigidbody2_r_X1 * (rigidbody2_r_X2 * rigidbody2_r_X3)))) + (3 * (rigidbody2_r_X3 * rigidbody2_r_X3))) - rigidbody2_r_X2))<= ~a~%"
                                   
gen(sout: OStream, ranges:list[[string,ProperInterval]], maxdepth:nat, prec:posreal, displayprec:nat): void =
LET
max  :real = 0,
dummy:void = fprintf (sout, "% This file is automatically generated by PRECiSA ~%"),
dummy:void = fprintf (sout, "clemmas_rigidbody2: THEORY ~%"),
dummy:void = fprintf (sout, "BEGIN ~%"),
dummy:void = fprintf (sout, "IMPORTING cert_rigidbody2, PRECiSA@bbiasp, PRECiSA@bbiadp ~%"),
dummy:void = fprintf (sout, "~%%|- *_TCC* : PROOF"),
dummy:void = fprintf (sout, "~%%|- (precisa-gen-cert-tcc)"),
dummy:void = fprintf (sout, "~%%|- QED~%~%"),
dummy:void = printf ("Concrete bounds: ~%"),new  :real = fprint_concrete_lemma (sout)(rigidBody2_0_lemma_str, rigidBody2_0_aeexpr, ranges, maxdepth, prec) ,
max  :real = IF(new>max) THEN new ELSE max ENDIF,
dummy:void = fprint_proof (sout)("rigidBody2_0", "rigidBody2_c_0") ,
dummy:void = printf(" - lemma ~a: ~-20/pvs:d/~%",("rigidBody2_0",new)),
new  :real = fprint_concrete_lemma (sout)(rigidBody2_1_lemma_str, rigidBody2_1_aeexpr, ranges, maxdepth, prec) ,
max  :real = IF(new>max) THEN new ELSE max ENDIF,
dummy:void = fprint_proof (sout)("rigidBody2_1", "rigidBody2_c_1") ,
dummy:void = printf(" - lemma ~a: ~-20/pvs:d/~%",("rigidBody2_1",new)),
dummy:void = fprintf (sout, "END clemmas_rigidbody2 ~%")IN
printf("Overall concrete bound: ~-20/pvs:d/~%",max)
main : void = 
LET sout = fopenout(create, "clemmas_rigidbody2.pvs"),
i1:ProperInterval = [|-15,15|],
i2:ProperInterval = [|-15,15|],
i3:ProperInterval = [|-15,15|] IN 
gen (sout, (: ("rigidbody2_r_X1",i1), ("rigidbody2_r_X2",i2), ("rigidbody2_r_X3",i3) :), 7, 10^-14, 2) & fclose(sout) & printf("File succesfully generated.")

END clgen_rigidbody2