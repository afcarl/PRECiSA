% This file is automatically generated by PRECiSA 
% 2017-03-25 17:03:38.639088 UTC

% maxDepth: 7 , prec: 10^-14 , displayPrec: 2

clgen_predPrey: THEORY
BEGIN

IMPORTING PRECiSA@bbiasp, PRECiSA@bbiadp, PRECiSA@precIOsa,  PRECiSA@strategies  

predPrey_r_X: real

predatorPrey_0_aeexpr : string = "aebounddp_div((4 * (predPrey_r_X * predPrey_r_X)), aebounddp_mul_p2(2, aebounddp_mul(predPrey_r_X, ulp_dp(predPrey_r_X)/2, predPrey_r_X, ulp_dp(predPrey_r_X)/2)), (1 + ((predPrey_r_X / (111 / 100)) * (predPrey_r_X / (111 / 100)))), aebounddp_add(1, 0, ((predPrey_r_X / (111 / 100)) * (predPrey_r_X / (111 / 100))), aebounddp_mul((predPrey_r_X / (111 / 100)), aebounddp_div(predPrey_r_X, ulp_dp(predPrey_r_X)/2, (111 / 100), (11 / 112589990684262400)), (predPrey_r_X / (111 / 100)), aebounddp_div(predPrey_r_X, ulp_dp(predPrey_r_X)/2, (111 / 100), (11 / 112589990684262400)))))"

predatorPrey_0_lemma_str : string = "predatorPrey_c_0 : LEMMA~%FORALL(predPrey_r_X: real, X: unb_double):~%abs(DtoR(X) - predPrey_r_X)<=ulp_dp(predPrey_r_X)/2~%AND (((((2 < (ieee754dp_prec - Fexp(Dmul(X, X)))) AND (((DtoR(RtoD((111 / 100))) /= 0) AND ((((111 / 100) + (11 / 112589990684262400)) < 0) OR (((111 / 100) - (11 / 112589990684262400)) > 0))) AND ((DtoR(RtoD((111 / 100))) /= 0) AND ((((111 / 100) + (11 / 112589990684262400)) < 0) OR (((111 / 100) - (11 / 112589990684262400)) > 0))))) AND ((1 + ((predPrey_r_X / (111 / 100)) * (predPrey_r_X / (111 / 100)))) /= 0)) AND (DtoR(Dadd(RtoD(1), Dmul(Ddiv(X, RtoD((111 / 100))), Ddiv(X, RtoD((111 / 100)))))) /= 0)) AND ((((1 + ((predPrey_r_X / (111 / 100)) * (predPrey_r_X / (111 / 100)))) + aebounddp_add(1, 0, ((predPrey_r_X / (111 / 100)) * (predPrey_r_X / (111 / 100))), aebounddp_mul((predPrey_r_X / (111 / 100)), aebounddp_div(predPrey_r_X, ulp_dp(predPrey_r_X)/2, (111 / 100), (11 / 112589990684262400)), (predPrey_r_X / (111 / 100)), aebounddp_div(predPrey_r_X, ulp_dp(predPrey_r_X)/2, (111 / 100), (11 / 112589990684262400))))) < 0) OR (((1 + ((predPrey_r_X / (111 / 100)) * (predPrey_r_X / (111 / 100)))) - aebounddp_add(1, 0, ((predPrey_r_X / (111 / 100)) * (predPrey_r_X / (111 / 100))), aebounddp_mul((predPrey_r_X / (111 / 100)), aebounddp_div(predPrey_r_X, ulp_dp(predPrey_r_X)/2, (111 / 100), (11 / 112589990684262400)), (predPrey_r_X / (111 / 100)), aebounddp_div(predPrey_r_X, ulp_dp(predPrey_r_X)/2, (111 / 100), (11 / 112589990684262400))))) > 0)))~%AND TRUE~%AND predPrey_r_X ## [|0.1,0.3|]~%IMPLIES~%abs(DtoR(predatorPrey(X)) - ((4 * (predPrey_r_X * predPrey_r_X)) / (1 + ((predPrey_r_X / (111 / 100)) * (predPrey_r_X / (111 / 100))))))<= ~a~%"
                                     

predatorPrey_1_aeexpr : string = "aebounddp_div((4 * (predPrey_r_X * predPrey_r_X)), aebounddp_mul(4, 0, (predPrey_r_X * predPrey_r_X), aebounddp_mul(predPrey_r_X, ulp_dp(predPrey_r_X)/2, predPrey_r_X, ulp_dp(predPrey_r_X)/2)), (1 + ((predPrey_r_X / (111 / 100)) * (predPrey_r_X / (111 / 100)))), aebounddp_add(1, 0, ((predPrey_r_X / (111 / 100)) * (predPrey_r_X / (111 / 100))), aebounddp_mul((predPrey_r_X / (111 / 100)), aebounddp_div(predPrey_r_X, ulp_dp(predPrey_r_X)/2, (111 / 100), (11 / 112589990684262400)), (predPrey_r_X / (111 / 100)), aebounddp_div(predPrey_r_X, ulp_dp(predPrey_r_X)/2, (111 / 100), (11 / 112589990684262400)))))"

predatorPrey_1_lemma_str : string = "predatorPrey_c_1 : LEMMA~%FORALL(predPrey_r_X: real, X: unb_double):~%abs(DtoR(X) - predPrey_r_X)<=ulp_dp(predPrey_r_X)/2~%AND (((((2 >= (ieee754dp_prec - Fexp(Dmul(X, X)))) AND (((DtoR(RtoD((111 / 100))) /= 0) AND ((((111 / 100) + (11 / 112589990684262400)) < 0) OR (((111 / 100) - (11 / 112589990684262400)) > 0))) AND ((DtoR(RtoD((111 / 100))) /= 0) AND ((((111 / 100) + (11 / 112589990684262400)) < 0) OR (((111 / 100) - (11 / 112589990684262400)) > 0))))) AND ((1 + ((predPrey_r_X / (111 / 100)) * (predPrey_r_X / (111 / 100)))) /= 0)) AND (DtoR(Dadd(RtoD(1), Dmul(Ddiv(X, RtoD((111 / 100))), Ddiv(X, RtoD((111 / 100)))))) /= 0)) AND ((((1 + ((predPrey_r_X / (111 / 100)) * (predPrey_r_X / (111 / 100)))) + aebounddp_add(1, 0, ((predPrey_r_X / (111 / 100)) * (predPrey_r_X / (111 / 100))), aebounddp_mul((predPrey_r_X / (111 / 100)), aebounddp_div(predPrey_r_X, ulp_dp(predPrey_r_X)/2, (111 / 100), (11 / 112589990684262400)), (predPrey_r_X / (111 / 100)), aebounddp_div(predPrey_r_X, ulp_dp(predPrey_r_X)/2, (111 / 100), (11 / 112589990684262400))))) < 0) OR (((1 + ((predPrey_r_X / (111 / 100)) * (predPrey_r_X / (111 / 100)))) - aebounddp_add(1, 0, ((predPrey_r_X / (111 / 100)) * (predPrey_r_X / (111 / 100))), aebounddp_mul((predPrey_r_X / (111 / 100)), aebounddp_div(predPrey_r_X, ulp_dp(predPrey_r_X)/2, (111 / 100), (11 / 112589990684262400)), (predPrey_r_X / (111 / 100)), aebounddp_div(predPrey_r_X, ulp_dp(predPrey_r_X)/2, (111 / 100), (11 / 112589990684262400))))) > 0)))~%AND TRUE~%AND predPrey_r_X ## [|0.1,0.3|]~%IMPLIES~%abs(DtoR(predatorPrey(X)) - ((4 * (predPrey_r_X * predPrey_r_X)) / (1 + ((predPrey_r_X / (111 / 100)) * (predPrey_r_X / (111 / 100))))))<= ~a~%"
                                     
gen(sout: OStream, ranges:list[[string,ProperInterval]], maxdepth:nat, prec:posreal, displayprec:nat): void =
LET
max  :real = 0,
dummy:void = fprintf (sout, "% This file is automatically generated by PRECiSA ~%"),
dummy:void = fprintf (sout, "clemmas_predPrey: THEORY ~%"),
dummy:void = fprintf (sout, "BEGIN ~%"),
dummy:void = fprintf (sout, "IMPORTING cert_predPrey, PRECiSA@bbiasp, PRECiSA@bbiadp ~%"),
dummy:void = fprintf (sout, "~%%|- *_TCC* : PROOF"),
dummy:void = fprintf (sout, "~%%|- (precisa-gen-cert-tcc)"),
dummy:void = fprintf (sout, "~%%|- QED~%~%"),
dummy:void = printf ("Concrete bounds: ~%"),new  :real = fprint_concrete_lemma (sout)(predatorPrey_0_lemma_str, predatorPrey_0_aeexpr, ranges, maxdepth, prec) ,
max  :real = IF(new>max) THEN new ELSE max ENDIF,
dummy:void = fprint_proof (sout)("predatorPrey_0", "predatorPrey_c_0") ,
dummy:void = printf(" - lemma ~a: ~-20/pvs:d/~%",("predatorPrey_0",new)),
new  :real = fprint_concrete_lemma (sout)(predatorPrey_1_lemma_str, predatorPrey_1_aeexpr, ranges, maxdepth, prec) ,
max  :real = IF(new>max) THEN new ELSE max ENDIF,
dummy:void = fprint_proof (sout)("predatorPrey_1", "predatorPrey_c_1") ,
dummy:void = printf(" - lemma ~a: ~-20/pvs:d/~%",("predatorPrey_1",new)),
dummy:void = fprintf (sout, "END clemmas_predPrey ~%")IN
printf("Overall concrete bound: ~-20/pvs:d/~%",max)
main : void = 
LET sout = fopenout(create, "clemmas_predPrey.pvs"),
i1:ProperInterval = [|0.1,0.3|] IN 
gen (sout, (: ("predPrey_r_X",i1) :), 7, 10^-14, 2) & fclose(sout) & printf("File succesfully generated.")

END clgen_predPrey