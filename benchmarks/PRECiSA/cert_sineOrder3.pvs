% This file is automatically generated by PRECiSA 
% 2017-03-25 17:04:14.092248 UTC

cert_sineOrder3: THEORY
BEGIN
IMPORTING PRECiSA@strategies, sineOrder3

%|- *_TCC* : PROOF
%|- (precisa-gen-cert-tcc)
%|- QED

sineOrder3_0 : LEMMA
FORALL(e_Z: nonneg_real, r_Z: real, Z: unb_double):
abs(DtoR(Z) - r_Z)<=e_Z
AND TRUE
AND TRUE
IMPLIES
abs(DtoR(sineOrder3(Z)) - (((238732414637843 / 250000000000000) * r_Z) - ((6450306886639899 / 50000000000000000) * (r_Z * (r_Z * r_Z)))))<=aebounddp_sub(((238732414637843 / 250000000000000) * r_Z), aebounddp_mul((238732414637843 / 250000000000000), (1246446333 / 68719476736000000000000000), r_Z, e_Z), ((6450306886639899 / 50000000000000000) * (r_Z * (r_Z * r_Z))), aebounddp_mul((6450306886639899 / 50000000000000000), (52491429563 / 27487790694400000000000000000), (r_Z * (r_Z * r_Z)), aebounddp_mul(r_Z, e_Z, (r_Z * r_Z), aebounddp_mul(r_Z, e_Z, r_Z, e_Z))))

%|- sineOrder3_0: PROOF
%|- (then
%|- (skeep)
%|- (expand "sineOrder3" :assert? none)
%|- (try-simp-ite)
%|- (then
%|- (lemma "Dsub_aerr")
%|- (let ((new-label (freshname "l")))
%|-    (then (label new-label -1)
%|- (branch (with-tccs (inst new-label
%|-    "aebounddp_mul((238732414637843 / 250000000000000), (1246446333 / 68719476736000000000000000), r_Z, e_Z)"
%|-    "aebounddp_mul((6450306886639899 / 50000000000000000), (52491429563 / 27487790694400000000000000000), (r_Z * (r_Z * r_Z)), aebounddp_mul(r_Z, e_Z, (r_Z * r_Z), aebounddp_mul(r_Z, e_Z, r_Z, e_Z)))"
%|-    "((238732414637843 / 250000000000000) * r_Z)"
%|-    "((6450306886639899 / 50000000000000000) * (r_Z * (r_Z * r_Z)))"
%|-    "Dmul(RtoD((238732414637843 / 250000000000000)), Z)"
%|-    "Dmul(RtoD((6450306886639899 / 50000000000000000)), Dmul(Z, Dmul(Z, Z)))"
%|- ))
%|- ((branch
%|- (split -1)
%|- (
%|- (then (aerr-assert) (fail))
%|- (then
%|- (lemma "Dmul_aerr")
%|- (let ((new-label (freshname "l")))
%|-    (then (label new-label -1)
%|- (branch (with-tccs (inst new-label
%|-    "(1246446333 / 68719476736000000000000000)"
%|-    "e_Z"
%|-    "(238732414637843 / 250000000000000)"
%|-    "r_Z"
%|-    "RtoD((238732414637843 / 250000000000000))"
%|-    "Z"
%|- ))
%|- ((branch
%|- (split -1)
%|- (
%|- (then (aerr-assert) (fail))
%|- (eval-formulas + :quiet? t)
%|- (propax)
%|- (assert-condition)
%|- ))
%|- (assert-condition))))))
%|- (then
%|- (lemma "Dmul_aerr")
%|- (let ((new-label (freshname "l")))
%|-    (then (label new-label -1)
%|- (branch (with-tccs (inst new-label
%|-    "(52491429563 / 27487790694400000000000000000)"
%|-    "aebounddp_mul(r_Z, e_Z, (r_Z * r_Z), aebounddp_mul(r_Z, e_Z, r_Z, e_Z))"
%|-    "(6450306886639899 / 50000000000000000)"
%|-    "(r_Z * (r_Z * r_Z))"
%|-    "RtoD((6450306886639899 / 50000000000000000))"
%|-    "Dmul(Z, Dmul(Z, Z))"
%|- ))
%|- ((branch
%|- (split -1)
%|- (
%|- (then (aerr-assert) (fail))
%|- (eval-formulas + :quiet? t)
%|- (then
%|- (lemma "Dmul_aerr")
%|- (let ((new-label (freshname "l")))
%|-    (then (label new-label -1)
%|- (branch (with-tccs (inst new-label
%|-    "e_Z"
%|-    "aebounddp_mul(r_Z, e_Z, r_Z, e_Z)"
%|-    "r_Z"
%|-    "(r_Z * r_Z)"
%|-    "Z"
%|-    "Dmul(Z, Z)"
%|- ))
%|- ((branch
%|- (split -1)
%|- (
%|- (then (aerr-assert) (fail))
%|- (propax)
%|- (then
%|- (lemma "Dmul_aerr")
%|- (let ((new-label (freshname "l")))
%|-    (then (label new-label -1)
%|- (branch (with-tccs (inst new-label
%|-    "e_Z"
%|-    "e_Z"
%|-    "r_Z"
%|-    "r_Z"
%|-    "Z"
%|-    "Z"
%|- ))
%|- ((branch
%|- (split -1)
%|- (
%|- (then (aerr-assert) (fail))
%|- (propax)
%|- (propax)
%|- (assert-condition)
%|- ))
%|- (assert-condition))))))
%|- (assert-condition)
%|- ))
%|- (assert-condition))))))
%|- (assert-condition)
%|- ))
%|- (assert-condition))))))
%|- (assert-condition)
%|- ))
%|- (assert-condition))))))
%|- )
%|- QED


END cert_sineOrder3