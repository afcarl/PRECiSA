Require Import Flocq.Core.Fcore.
Require Import Gappa.Gappa_library.
Section Generated_by_Gappa.
Variable _MT : R.
Definition f1 := Float2 (75) (2).
Definition i1 := makepairF f1 f1.
Notation p1 := (BND _MT i1). (* BND(MT, [300, 300]) *)
Variable _Ma : R.
Definition f2 := Float2 (462321523347345637) (-60).
Definition f3 := Float2 (924643046694691275) (-61).
Definition i2 := makepairF f2 f3.
Notation p2 := (BND _Ma i2). (* BND(Ma, [0.401, 0.401]) *)
Definition s6 := (p1 /\ p2).
Variable _Mb : R.
Definition f4 := Float2 (403290097637067701) (-73).
Definition f5 := Float2 (806580195274135403) (-74).
Definition i3 := makepairF f4 f5.
Notation p3 := (BND _Mb i3). (* BND(Mb, [4.27e-05, 4.27e-05]) *)
Definition s5 := (s6 /\ p3).
Variable _MN : R.
Definition f6 := Float2 (125) (3).
Definition i4 := makepairF f6 f6.
Notation p4 := (BND _MN i4). (* BND(MN, [1000, 1000]) *)
Definition s4 := (s5 /\ p4).
Variable _Mp : R.
Definition f7 := Float2 (546875) (6).
Definition i5 := makepairF f7 f7.
Notation p5 := (BND _Mp i5). (* BND(Mp, [3.5e+07, 3.5e+07]) *)
Definition s3 := (s4 /\ p5).
Variable _MV : R.
Definition f8 := Float2 (230584300921369395) (-61).
Definition f9 := Float2 (1) (-1).
Definition i6 := makepairF f8 f9.
Notation p6 := (BND _MV i6). (* BND(MV, [0.1, 0.5]) *)
Definition s2 := (s3 /\ p6).
Notation _p := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  _Mp).
Notation _a := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  _Ma).
Notation _N := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  _MN).
Notation _V := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  _MV).
Notation r22 := ((_N / _V)%R).
Notation r21 := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  r22).
Notation r19 := ((_a * r21)%R).
Notation r18 := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  r19).
Notation r17 := ((r18 * r21)%R).
Notation r16 := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  r17).
Notation r14 := ((_p + r16)%R).
Notation r13 := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  r14).
Notation _b := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  _Mb).
Notation r28 := ((_N * _b)%R).
Notation r27 := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  r28).
Notation r26 := ((_V - r27)%R).
Notation r25 := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  r26).
Notation r12 := ((r13 * r25)%R).
Notation r11 := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  r12).
Notation _Mk := (float10R (Float10 (13806503) (-30))).
Notation _k := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  _Mk).
Notation r33 := ((_k * _N)%R).
Notation r32 := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  r33).
Notation _T := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  _MT).
Notation r31 := ((r32 * _T)%R).
Notation r30 := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  r31).
Notation r10 := ((r11 - r30)%R).
Notation _res := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  r10).
Notation r42 := ((_MN / _MV)%R).
Notation r41 := ((_Ma * r42)%R).
Notation r40 := ((r41 * r42)%R).
Notation r39 := ((_Mp + r40)%R).
Notation r44 := ((_MN * _Mb)%R).
Notation r43 := ((_MV - r44)%R).
Notation r38 := ((r39 * r43)%R).
Notation r46 := ((_Mk * _MN)%R).
Notation r45 := ((r46 * _MT)%R).
Notation _Mres := ((r38 - r45)%R).
Notation r8 := ((_res - _Mres)%R).
Notation r7 := ((Rabs r8)%R).
Definition f10 := Float2 (0) (0).
Definition f11 := Float2 (1010235383344119251) (-85).
Definition i7 := makepairF f10 f11.
Notation p7 := (BND r7 i7). (* BND(|res - Mres|, [0, 2.6114e-08]) *)
Definition s7 := (not p7).
Definition s1 := (s2 /\ s7).
Lemma l2 : s1 -> s7.
 intros h0.
 assert (h1 := h0).
 exact (proj2 h1).
Qed.
Notation p8 := (ABS r8 i7). (* ABS(res - Mres, [0, 2.6114e-08]) *)
Definition f12 := Float2 (-7) (-28).
Definition i8 := makepairF f12 f11.
Notation p9 := (BND r8 i8). (* BND(res - Mres, [-2.6077e-08, 2.6114e-08]) *)
Notation r48 := ((_res - r10)%R).
Notation r49 := ((r10 - _Mres)%R).
Notation r47 := ((r48 + r49)%R).
Notation p10 := (BND r47 i8). (* BND(res - (float<53,-1074,ne>(float<53,-1074,ne>(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V))) * float<53,-1074,ne>(V - float<53,-1074,ne>(N * b))) - float<53,-1074,ne>(float<53,-1074,ne>(k * N) * T)) + (float<53,-1074,ne>(float<53,-1074,ne>(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V))) * float<53,-1074,ne>(V - float<53,-1074,ne>(N * b))) - float<53,-1074,ne>(float<53,-1074,ne>(k * N) * T) - Mres), [-2.6077e-08, 2.6114e-08]) *)
Definition f13 := Float2 (-1) (-28).
Definition f14 := Float2 (1) (-28).
Definition i9 := makepairF f13 f14.
Notation p11 := (BND r48 i9). (* BND(res - (float<53,-1074,ne>(float<53,-1074,ne>(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V))) * float<53,-1074,ne>(V - float<53,-1074,ne>(N * b))) - float<53,-1074,ne>(float<53,-1074,ne>(k * N) * T)), [-3.72529e-09, 3.72529e-09]) *)
Definition f15 := Float2 (1) (0).
Definition f16 := Float2 (1) (26).
Definition i10 := makepairF f15 f16.
Notation p12 := (ABS r10 i10). (* ABS(float<53,-1074,ne>(float<53,-1074,ne>(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V))) * float<53,-1074,ne>(V - float<53,-1074,ne>(N * b))) - float<53,-1074,ne>(float<53,-1074,ne>(k * N) * T), [1, 6.71089e+07]) *)
Definition f17 := Float2 (1) (1).
Definition f18 := Float2 (3) (24).
Definition i11 := makepairF f17 f18.
Notation p13 := (ABS r11 i11). (* ABS(float<53,-1074,ne>(float<53,-1074,ne>(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V))) * float<53,-1074,ne>(V - float<53,-1074,ne>(N * b))), [2, 5.03316e+07]) *)
Notation p14 := (BND r11 i11). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V))) * float<53,-1074,ne>(V - float<53,-1074,ne>(N * b))), [2, 5.03316e+07]) *)
Notation p15 := (BND r12 i11). (* BND(float<53,-1074,ne>(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V))) * float<53,-1074,ne>(V - float<53,-1074,ne>(N * b)), [2, 5.03316e+07]) *)
Definition f19 := Float2 (1) (6).
Definition f20 := Float2 (2346875) (5).
Definition i12 := makepairF f19 f20.
Notation p16 := (BND r13 i12). (* BND(float<53,-1074,ne>(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V))), [64, 7.51e+07]) *)
Definition f21 := Float2 (10079751372800001) (-27).
Definition i13 := makepairF f19 f21.
Notation p17 := (BND r14 i13). (* BND(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V)), [64, 7.51e+07]) *)
Notation p18 := (BND _p i5). (* BND(p, [3.5e+07, 3.5e+07]) *)
Lemma l17 : s1 -> s2.
 intros h0.
 assert (h1 := h0).
 exact (proj1 h1).
Qed.
Lemma l16 : s1 -> s3.
 intros h0.
 assert (h1 := l17 h0).
 exact (proj1 h1).
Qed.
Lemma l15 : s1 -> p5 (* BND(Mp, [3.5e+07, 3.5e+07]) *).
 intros h0.
 assert (h1 := l16 h0).
 exact (proj2 h1).
Qed.
Lemma t1 : p5 -> p18.
 intros h0.
 refine (float_round_ne _ _ _Mp i5 i5 h0 _) ; finalize.
Qed.
Lemma l14 : s1 -> p18 (* BND(p, [3.5e+07, 3.5e+07]) *).
 intros h0.
 assert (h1 := l15 h0).
 apply t1. exact h1.
Qed.
Definition f22 := Float2 (5382130892800001) (-27).
Definition i14 := makepairF f15 f22.
Notation p19 := (BND r16 i14). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V)), [1, 4.01e+07]) *)
Notation p20 := (BND r17 i14). (* BND(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V), [1, 4.01e+07]) *)
Definition f23 := Float2 (8818083254763521) (-41).
Definition i15 := makepairF f15 f23.
Notation p21 := (BND r18 i15). (* BND(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)), [1, 4010]) *)
Notation p22 := (BND r19 i15). (* BND(a * float<53,-1074,ne>(N / V), [1, 4010]) *)
Definition f24 := Float2 (1805943450575569) (-52).
Definition i16 := makepairF f24 f24.
Notation p23 := (BND _a i16). (* BND(a, [0.401, 0.401]) *)
Lemma l26 : s1 -> s4.
 intros h0.
 assert (h1 := l16 h0).
 exact (proj1 h1).
Qed.
Lemma l25 : s1 -> s5.
 intros h0.
 assert (h1 := l26 h0).
 exact (proj1 h1).
Qed.
Lemma l24 : s1 -> s6.
 intros h0.
 assert (h1 := l25 h0).
 exact (proj1 h1).
Qed.
Lemma l23 : s1 -> p2 (* BND(Ma, [0.401, 0.401]) *).
 intros h0.
 assert (h1 := l24 h0).
 exact (proj2 h1).
Qed.
Definition f25 := Float2 (14447547604604551) (-55).
Definition i17 := makepairF f25 f24.
Notation p24 := (BND _Ma i17). (* BND(Ma, [0.401, 0.401]) *)
Lemma t2 : p24 -> p23.
 intros h0.
 refine (float_round_ne _ _ _Ma i17 i16 h0 _) ; finalize.
Qed.
Lemma l22 : s1 -> p23 (* BND(a, [0.401, 0.401]) *).
 intros h0.
 assert (h1 := l23 h0).
 apply t2. refine (subset _Ma i2 i17 h1 _) ; finalize.
Qed.
Definition f26 := Float2 (1) (2).
Definition f27 := Float2 (625) (4).
Definition i18 := makepairF f26 f27.
Notation p25 := (BND r21 i18). (* BND(float<53,-1074,ne>(N / V), [4, 10000]) *)
Notation p26 := (BND r22 i18). (* BND(N / V, [4, 10000]) *)
Notation p27 := (BND _N i4). (* BND(N, [1000, 1000]) *)
Lemma l30 : s1 -> p4 (* BND(MN, [1000, 1000]) *).
 intros h0.
 assert (h1 := l26 h0).
 exact (proj2 h1).
Qed.
Lemma t3 : p4 -> p27.
 intros h0.
 refine (float_round_ne _ _ _MN i4 i4 h0 _) ; finalize.
Qed.
Lemma l29 : s1 -> p27 (* BND(N, [1000, 1000]) *).
 intros h0.
 assert (h1 := l30 h0).
 apply t3. exact h1.
Qed.
Definition f28 := Float2 (3602879701896397) (-55).
Definition i19 := makepairF f28 f9.
Notation p28 := (BND _V i19). (* BND(V, [0.1, 0.5]) *)
Lemma l32 : s1 -> p6 (* BND(MV, [0.1, 0.5]) *).
 intros h0.
 assert (h1 := l17 h0).
 exact (proj2 h1).
Qed.
Definition f29 := Float2 (14411518807585587) (-57).
Definition i20 := makepairF f29 f9.
Notation p29 := (BND _MV i20). (* BND(MV, [0.1, 0.5]) *)
Lemma t4 : p29 -> p28.
 intros h0.
 refine (float_round_ne _ _ _MV i20 i19 h0 _) ; finalize.
Qed.
Lemma l31 : s1 -> p28 (* BND(V, [0.1, 0.5]) *).
 intros h0.
 assert (h1 := l32 h0).
 apply t4. refine (subset _MV i6 i20 h1 _) ; finalize.
Qed.
Definition i21 := makepairF f26 f6.
Notation p30 := (BND _N i21). (* BND(N, [4, 1000]) *)
Definition i22 := makepairF f28 f15.
Notation p31 := (BND _V i22). (* BND(V, [0.1, 1]) *)
Lemma t5 : p30 -> p31 -> p26.
 intros h0 h1.
 refine (div_pp _N _V i21 i22 i18 h0 h1 _) ; finalize.
Qed.
Lemma l28 : s1 -> p26 (* BND(N / V, [4, 10000]) *).
 intros h0.
 assert (h1 := l29 h0).
 assert (h2 := l31 h0).
 apply t5. refine (subset _N i4 i21 h1 _) ; finalize. refine (subset _V i19 i22 h2 _) ; finalize.
Qed.
Lemma t6 : p26 -> p25.
 intros h0.
 refine (float_round_ne _ _ r22 i18 i18 h0 _) ; finalize.
Qed.
Lemma l27 : s1 -> p25 (* BND(float<53,-1074,ne>(N / V), [4, 10000]) *).
 intros h0.
 assert (h1 := l28 h0).
 apply t6. exact h1.
Qed.
Definition f30 := Float2 (1) (-2).
Definition i23 := makepairF f30 f24.
Notation p32 := (BND _a i23). (* BND(a, [0.25, 0.401]) *)
Lemma t7 : p32 -> p25 -> p22.
 intros h0 h1.
 refine (mul_pp _a r21 i23 i18 i15 h0 h1 _) ; finalize.
Qed.
Lemma l21 : s1 -> p22 (* BND(a * float<53,-1074,ne>(N / V), [1, 4010]) *).
 intros h0.
 assert (h1 := l22 h0).
 assert (h2 := l27 h0).
 apply t7. refine (subset _a i16 i23 h1 _) ; finalize. exact h2.
Qed.
Lemma t8 : p22 -> p21.
 intros h0.
 refine (float_round_ne _ _ r19 i15 i15 h0 _) ; finalize.
Qed.
Lemma l20 : s1 -> p21 (* BND(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)), [1, 4010]) *).
 intros h0.
 assert (h1 := l21 h0).
 apply t8. exact h1.
Qed.
Definition i24 := makepairF f15 f27.
Notation p33 := (BND r21 i24). (* BND(float<53,-1074,ne>(N / V), [1, 10000]) *)
Lemma t9 : p21 -> p33 -> p20.
 intros h0 h1.
 refine (mul_pp r18 r21 i15 i24 i14 h0 h1 _) ; finalize.
Qed.
Lemma l19 : s1 -> p20 (* BND(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V), [1, 4.01e+07]) *).
 intros h0.
 assert (h1 := l20 h0).
 assert (h2 := l27 h0).
 apply t9. exact h1. refine (subset r21 i18 i24 h2 _) ; finalize.
Qed.
Lemma t10 : p20 -> p19.
 intros h0.
 refine (float_round_ne _ _ r17 i14 i14 h0 _) ; finalize.
Qed.
Lemma l18 : s1 -> p19 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V)), [1, 4.01e+07]) *).
 intros h0.
 assert (h1 := l19 h0).
 apply t10. exact h1.
Qed.
Definition i25 := makepairF f19 f7.
Notation p34 := (BND _p i25). (* BND(p, [64, 3.5e+07]) *)
Lemma t11 : p34 -> p19 -> p17.
 intros h0 h1.
 refine (add _p r16 i25 i14 i13 h0 h1 _) ; finalize.
Qed.
Lemma l13 : s1 -> p17 (* BND(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V)), [64, 7.51e+07]) *).
 intros h0.
 assert (h1 := l14 h0).
 assert (h2 := l18 h0).
 apply t11. refine (subset _p i5 i25 h1 _) ; finalize. exact h2.
Qed.
Lemma t12 : p17 -> p16.
 intros h0.
 refine (float_round_ne _ _ r14 i13 i12 h0 _) ; finalize.
Qed.
Lemma l12 : s1 -> p16 (* BND(float<53,-1074,ne>(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V))), [64, 7.51e+07]) *).
 intros h0.
 assert (h1 := l13 h0).
 apply t12. exact h1.
Qed.
Definition f31 := Float2 (1) (-5).
Definition i26 := makepairF f31 f9.
Notation p35 := (BND r25 i26). (* BND(float<53,-1074,ne>(V - float<53,-1074,ne>(N * b)), [0.03125, 0.5]) *)
Notation p36 := (BND r26 i26). (* BND(V - float<53,-1074,ne>(N * b), [0.03125, 0.5]) *)
Definition f32 := Float2 (3076859265419523) (-56).
Definition i27 := makepairF f32 f32.
Notation p37 := (BND r27 i27). (* BND(float<53,-1074,ne>(N * b), [0.0427, 0.0427]) *)
Definition f33 := Float2 (12307437061678091) (-58).
Definition i28 := makepairF f33 f32.
Notation p38 := (BND r28 i28). (* BND(N * b, [0.0427, 0.0427]) *)
Definition f34 := Float2 (6301407775579183) (-67).
Definition i29 := makepairF f34 f34.
Notation p39 := (BND _b i29). (* BND(b, [4.27e-05, 4.27e-05]) *)
Lemma l38 : s1 -> p3 (* BND(Mb, [4.27e-05, 4.27e-05]) *).
 intros h0.
 assert (h1 := l25 h0).
 exact (proj2 h1).
Qed.
Definition f35 := Float2 (25205631102316731) (-69).
Definition i30 := makepairF f35 f34.
Notation p40 := (BND _Mb i30). (* BND(Mb, [4.27e-05, 4.27e-05]) *)
Lemma t13 : p40 -> p39.
 intros h0.
 refine (float_round_ne _ _ _Mb i30 i29 h0 _) ; finalize.
Qed.
Lemma l37 : s1 -> p39 (* BND(b, [4.27e-05, 4.27e-05]) *).
 intros h0.
 assert (h1 := l38 h0).
 apply t13. refine (subset _Mb i3 i30 h1 _) ; finalize.
Qed.
Lemma t14 : p27 -> p39 -> p38.
 intros h0 h1.
 refine (mul_pp _N _b i4 i29 i28 h0 h1 _) ; finalize.
Qed.
Lemma l36 : s1 -> p38 (* BND(N * b, [0.0427, 0.0427]) *).
 intros h0.
 assert (h1 := l29 h0).
 assert (h2 := l37 h0).
 apply t14. exact h1. exact h2.
Qed.
Lemma t15 : p38 -> p37.
 intros h0.
 refine (float_round_ne _ _ r28 i28 i27 h0 _) ; finalize.
Qed.
Lemma l35 : s1 -> p37 (* BND(float<53,-1074,ne>(N * b), [0.0427, 0.0427]) *).
 intros h0.
 assert (h1 := l36 h0).
 apply t15. exact h1.
Qed.
Definition f36 := Float2 (3) (-5).
Definition i31 := makepairF f36 f9.
Notation p41 := (BND _V i31). (* BND(V, [0.09375, 0.5]) *)
Definition f37 := Float2 (1) (-4).
Definition i32 := makepairF f31 f37.
Notation p42 := (BND r27 i32). (* BND(float<53,-1074,ne>(N * b), [0.03125, 0.0625]) *)
Lemma t16 : p41 -> p42 -> p36.
 intros h0 h1.
 refine (sub _V r27 i31 i32 i26 h0 h1 _) ; finalize.
Qed.
Lemma l34 : s1 -> p36 (* BND(V - float<53,-1074,ne>(N * b), [0.03125, 0.5]) *).
 intros h0.
 assert (h1 := l31 h0).
 assert (h2 := l35 h0).
 apply t16. refine (subset _V i19 i31 h1 _) ; finalize. refine (subset r27 i27 i32 h2 _) ; finalize.
Qed.
Lemma t17 : p36 -> p35.
 intros h0.
 refine (float_round_ne _ _ r26 i26 i26 h0 _) ; finalize.
Qed.
Lemma l33 : s1 -> p35 (* BND(float<53,-1074,ne>(V - float<53,-1074,ne>(N * b)), [0.03125, 0.5]) *).
 intros h0.
 assert (h1 := l34 h0).
 apply t17. exact h1.
Qed.
Definition f38 := Float2 (3) (25).
Definition i33 := makepairF f19 f38.
Notation p43 := (BND r13 i33). (* BND(float<53,-1074,ne>(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V))), [64, 1.00663e+08]) *)
Lemma t18 : p43 -> p35 -> p15.
 intros h0 h1.
 refine (mul_pp r13 r25 i33 i26 i11 h0 h1 _) ; finalize.
Qed.
Lemma l11 : s1 -> p15 (* BND(float<53,-1074,ne>(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V))) * float<53,-1074,ne>(V - float<53,-1074,ne>(N * b)), [2, 5.03316e+07]) *).
 intros h0.
 assert (h1 := l12 h0).
 assert (h2 := l33 h0).
 apply t18. refine (subset r13 i12 i33 h1 _) ; finalize. exact h2.
Qed.
Lemma t19 : p15 -> p14.
 intros h0.
 refine (float_round_ne _ _ r12 i11 i11 h0 _) ; finalize.
Qed.
Lemma l10 : s1 -> p14 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V))) * float<53,-1074,ne>(V - float<53,-1074,ne>(N * b))), [2, 5.03316e+07]) *).
 intros h0.
 assert (h1 := l11 h0).
 apply t19. exact h1.
Qed.
Lemma t20 : p14 -> p13.
 intros h0.
 refine (abs_of_bnd_p r11 i11 i11 h0 _) ; finalize.
Qed.
Lemma l9 : s1 -> p13 (* ABS(float<53,-1074,ne>(float<53,-1074,ne>(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V))) * float<53,-1074,ne>(V - float<53,-1074,ne>(N * b))), [2, 5.03316e+07]) *).
 intros h0.
 assert (h1 := l10 h0).
 apply t20. exact h1.
Qed.
Definition f39 := Float2 (1) (-58).
Definition i34 := makepairF f39 f15.
Notation p44 := (ABS r30 i34). (* ABS(float<53,-1074,ne>(float<53,-1074,ne>(k * N) * T), [3.46945e-18, 1]) *)
Definition f40 := Float2 (21002186178003) (-102).
Definition f41 := Float2 (5376559661568875) (-110).
Definition i35 := makepairF f40 f41.
Notation p45 := (BND r30 i35). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(k * N) * T), [4.14195e-18, 4.14195e-18]) *)
Definition f42 := Float2 (43012477292551003) (-113).
Definition f43 := Float2 (86024954585102007) (-114).
Definition i36 := makepairF f42 f43.
Notation p46 := (BND r31 i36). (* BND(float<53,-1074,ne>(k * N) * T, [4.14195e-18, 4.14195e-18]) *)
Definition f44 := Float2 (4587997577872107) (-118).
Definition i37 := makepairF f44 f44.
Notation p47 := (BND r32 i37). (* BND(float<53,-1074,ne>(k * N), [1.38065e-20, 1.38065e-20]) *)
Definition f45 := Float2 (293631844983814875) (-124).
Definition f46 := Float2 (73407961245953719) (-122).
Definition i38 := makepairF f45 f46.
Notation p48 := (BND r33 i38). (* BND(k * N, [1.38065e-20, 1.38065e-20]) *)
Definition f47 := Float2 (2349054759870519) (-127).
Definition i39 := makepairF f47 f47.
Notation p49 := (BND _k i39). (* BND(k, [1.38065e-23, 1.38065e-23]) *)
Definition f48 := Float2 (150339504631713205) (-133).
Definition f49 := Float2 (75169752315856603) (-132).
Definition i40 := makepairF f48 f49.
Notation p50 := (BND _Mk i40). (* BND(Mk, [1.38065e-23, 1.38065e-23]) *)
Lemma t21 : p50.
 refine (constant10 _ i40 _) ; finalize.
Qed.
Lemma l45 : s1 -> p50 (* BND(Mk, [1.38065e-23, 1.38065e-23]) *).
 intros h0.
 apply t21.
Qed.
Definition f50 := Float2 (9396219039482075) (-129).
Definition i41 := makepairF f50 f47.
Notation p51 := (BND _Mk i41). (* BND(Mk, [1.38065e-23, 1.38065e-23]) *)
Lemma t22 : p51 -> p49.
 intros h0.
 refine (float_round_ne _ _ _Mk i41 i39 h0 _) ; finalize.
Qed.
Lemma l44 : s1 -> p49 (* BND(k, [1.38065e-23, 1.38065e-23]) *).
 intros h0.
 assert (h1 := l45 h0).
 apply t22. refine (subset _Mk i40 i41 h1 _) ; finalize.
Qed.
Lemma t23 : p49 -> p27 -> p48.
 intros h0 h1.
 refine (mul_pp _k _N i39 i4 i38 h0 h1 _) ; finalize.
Qed.
Lemma l43 : s1 -> p48 (* BND(k * N, [1.38065e-20, 1.38065e-20]) *).
 intros h0.
 assert (h1 := l44 h0).
 assert (h2 := l29 h0).
 apply t23. exact h1. exact h2.
Qed.
Definition i42 := makepairF f44 f46.
Notation p52 := (BND r33 i42). (* BND(k * N, [1.38065e-20, 1.38065e-20]) *)
Lemma t24 : p52 -> p47.
 intros h0.
 refine (float_round_ne _ _ r33 i42 i37 h0 _) ; finalize.
Qed.
Lemma l42 : s1 -> p47 (* BND(float<53,-1074,ne>(k * N), [1.38065e-20, 1.38065e-20]) *).
 intros h0.
 assert (h1 := l43 h0).
 apply t24. refine (subset r33 i38 i42 h1 _) ; finalize.
Qed.
Notation p53 := (BND _T i1). (* BND(T, [300, 300]) *)
Lemma l47 : s1 -> p1 (* BND(MT, [300, 300]) *).
 intros h0.
 assert (h1 := l24 h0).
 exact (proj1 h1).
Qed.
Lemma t25 : p1 -> p53.
 intros h0.
 refine (float_round_ne _ _ _MT i1 i1 h0 _) ; finalize.
Qed.
Lemma l46 : s1 -> p53 (* BND(T, [300, 300]) *).
 intros h0.
 assert (h1 := l47 h0).
 apply t25. exact h1.
Qed.
Lemma t26 : p47 -> p53 -> p46.
 intros h0 h1.
 refine (mul_pp r32 _T i37 i1 i36 h0 h1 _) ; finalize.
Qed.
Lemma l41 : s1 -> p46 (* BND(float<53,-1074,ne>(k * N) * T, [4.14195e-18, 4.14195e-18]) *).
 intros h0.
 assert (h1 := l42 h0).
 assert (h2 := l46 h0).
 apply t26. exact h1. exact h2.
Qed.
Definition i43 := makepairF f40 f43.
Notation p54 := (BND r31 i43). (* BND(float<53,-1074,ne>(k * N) * T, [4.14195e-18, 4.14195e-18]) *)
Lemma t27 : p54 -> p45.
 intros h0.
 refine (float_round_ne _ _ r31 i43 i35 h0 _) ; finalize.
Qed.
Lemma l40 : s1 -> p45 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(k * N) * T), [4.14195e-18, 4.14195e-18]) *).
 intros h0.
 assert (h1 := l41 h0).
 apply t27. refine (subset r31 i36 i43 h1 _) ; finalize.
Qed.
Notation p55 := (BND r30 i34). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(k * N) * T), [3.46945e-18, 1]) *)
Lemma t28 : p55 -> p44.
 intros h0.
 refine (abs_of_bnd_p r30 i34 i34 h0 _) ; finalize.
Qed.
Lemma l39 : s1 -> p44 (* ABS(float<53,-1074,ne>(float<53,-1074,ne>(k * N) * T), [3.46945e-18, 1]) *).
 intros h0.
 assert (h1 := l40 h0).
 apply t28. refine (subset r30 i35 i34 h1 _) ; finalize.
Qed.
Lemma t29 : p13 -> p44 -> p12.
 intros h0 h1.
 refine (sub_aa_p r11 r30 i11 i34 i10 h0 h1 _) ; finalize.
Qed.
Lemma l8 : s1 -> p12 (* ABS(float<53,-1074,ne>(float<53,-1074,ne>(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V))) * float<53,-1074,ne>(V - float<53,-1074,ne>(N * b))) - float<53,-1074,ne>(float<53,-1074,ne>(k * N) * T), [1, 6.71089e+07]) *).
 intros h0.
 assert (h1 := l9 h0).
 assert (h2 := l39 h0).
 apply t29. exact h1. exact h2.
Qed.
Lemma t30 : p12 -> p11.
 intros h0.
 refine (float_absolute_wide_ne _ _ r10 i10 i9 h0 _) ; finalize.
Qed.
Lemma l7 : s1 -> p11 (* BND(res - (float<53,-1074,ne>(float<53,-1074,ne>(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V))) * float<53,-1074,ne>(V - float<53,-1074,ne>(N * b))) - float<53,-1074,ne>(float<53,-1074,ne>(k * N) * T)), [-3.72529e-09, 3.72529e-09]) *).
 intros h0.
 assert (h1 := l8 h0).
 apply t30. exact h1.
Qed.
Definition f51 := Float2 (-3) (-27).
Definition f52 := Float2 (866120195268263379) (-85).
Definition i44 := makepairF f51 f52.
Notation p56 := (BND r49 i44). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V))) * float<53,-1074,ne>(V - float<53,-1074,ne>(N * b))) - float<53,-1074,ne>(float<53,-1074,ne>(k * N) * T) - Mres, [-2.23517e-08, 2.23887e-08]) *)
Notation r51 := ((r11 - r38)%R).
Notation r52 := ((r30 - r45)%R).
Notation r50 := ((r51 - r52)%R).
Notation p57 := (BND r50 i44). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V))) * float<53,-1074,ne>(V - float<53,-1074,ne>(N * b))) - (Mp + Ma * (MN / MV) * (MN / MV)) * (MV - MN * Mb) - (float<53,-1074,ne>(float<53,-1074,ne>(k * N) * T) - Mk * MN * MT), [-2.23517e-08, 2.23887e-08]) *)
Definition f53 := Float2 (433060097634131689) (-84).
Definition i45 := makepairF f51 f53.
Notation p58 := (BND r51 i45). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V))) * float<53,-1074,ne>(V - float<53,-1074,ne>(N * b))) - (Mp + Ma * (MN / MV) * (MN / MV)) * (MV - MN * Mb), [-2.23517e-08, 2.23887e-08]) *)
Notation r54 := ((r11 - r12)%R).
Notation r55 := ((r12 - r38)%R).
Notation r53 := ((r54 + r55)%R).
Notation p59 := (BND r53 i45). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V))) * float<53,-1074,ne>(V - float<53,-1074,ne>(N * b))) - float<53,-1074,ne>(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V))) * float<53,-1074,ne>(V - float<53,-1074,ne>(N * b)) + (float<53,-1074,ne>(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V))) * float<53,-1074,ne>(V - float<53,-1074,ne>(N * b)) - (Mp + Ma * (MN / MV) * (MN / MV)) * (MV - MN * Mb)), [-2.23517e-08, 2.23887e-08]) *)
Notation p60 := (BND r54 i9). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V))) * float<53,-1074,ne>(V - float<53,-1074,ne>(N * b))) - float<53,-1074,ne>(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V))) * float<53,-1074,ne>(V - float<53,-1074,ne>(N * b)), [-3.72529e-09, 3.72529e-09]) *)
Notation p61 := (ABS r12 i10). (* ABS(float<53,-1074,ne>(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V))) * float<53,-1074,ne>(V - float<53,-1074,ne>(N * b)), [1, 6.71089e+07]) *)
Notation p62 := (BND r12 i10). (* BND(float<53,-1074,ne>(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V))) * float<53,-1074,ne>(V - float<53,-1074,ne>(N * b)), [1, 6.71089e+07]) *)
Lemma t31 : p62 -> p61.
 intros h0.
 refine (abs_of_bnd_p r12 i10 i10 h0 _) ; finalize.
Qed.
Lemma l53 : s1 -> p61 (* ABS(float<53,-1074,ne>(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V))) * float<53,-1074,ne>(V - float<53,-1074,ne>(N * b)), [1, 6.71089e+07]) *).
 intros h0.
 assert (h1 := l11 h0).
 apply t31. refine (subset r12 i11 i10 h1 _) ; finalize.
Qed.
Lemma t32 : p61 -> p60.
 intros h0.
 refine (float_absolute_wide_ne _ _ r12 i10 i9 h0 _) ; finalize.
Qed.
Lemma l52 : s1 -> p60 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V))) * float<53,-1074,ne>(V - float<53,-1074,ne>(N * b))) - float<53,-1074,ne>(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V))) * float<53,-1074,ne>(V - float<53,-1074,ne>(N * b)), [-3.72529e-09, 3.72529e-09]) *).
 intros h0.
 assert (h1 := l53 h0).
 apply t32. exact h1.
Qed.
Definition f54 := Float2 (-5) (-28).
Definition f55 := Float2 (361002503596203753) (-84).
Definition i46 := makepairF f54 f55.
Notation p63 := (BND r55 i46). (* BND(float<53,-1074,ne>(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V))) * float<53,-1074,ne>(V - float<53,-1074,ne>(N * b)) - (Mp + Ma * (MN / MV) * (MN / MV)) * (MV - MN * Mb), [-1.86265e-08, 1.86634e-08]) *)
Notation r58 := ((r25 - r43)%R).
Notation r57 := ((r13 * r58)%R).
Notation r60 := ((r13 - r39)%R).
Notation r59 := ((r60 * r43)%R).
Notation r56 := ((r57 + r59)%R).
Notation p64 := (BND r56 i46). (* BND(float<53,-1074,ne>(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V))) * (float<53,-1074,ne>(V - float<53,-1074,ne>(N * b)) - (MV - MN * Mb)) + (float<53,-1074,ne>(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V))) - (Mp + Ma * (MN / MV) * (MN / MV))) * (MV - MN * Mb), [-1.86265e-08, 1.86634e-08]) *)
Definition f56 := Float2 (-3) (-29).
Definition f57 := Float2 (2325753125) (-59).
Definition i47 := makepairF f56 f57.
Notation p65 := (BND r57 i47). (* BND(float<53,-1074,ne>(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V))) * (float<53,-1074,ne>(V - float<53,-1074,ne>(N * b)) - (MV - MN * Mb)), [-5.58794e-09, 4.03454e-09]) *)
Definition f58 := Float2 (-5) (-56).
Definition f59 := Float2 (991) (-64).
Definition i48 := makepairF f58 f59.
Notation p66 := (BND r58 i48). (* BND(float<53,-1074,ne>(V - float<53,-1074,ne>(N * b)) - (MV - MN * Mb), [-6.93889e-17, 5.37222e-17]) *)
Notation r62 := ((r25 - r26)%R).
Notation r63 := ((r26 - r43)%R).
Notation r61 := ((r62 + r63)%R).
Notation p67 := (BND r61 i48). (* BND(float<53,-1074,ne>(V - float<53,-1074,ne>(N * b)) - (V - float<53,-1074,ne>(N * b)) + (V - float<53,-1074,ne>(N * b) - (MV - MN * Mb)), [-6.93889e-17, 5.37222e-17]) *)
Definition f60 := Float2 (-1) (-55).
Definition f61 := Float2 (1) (-55).
Definition i49 := makepairF f60 f61.
Notation p68 := (BND r62 i49). (* BND(float<53,-1074,ne>(V - float<53,-1074,ne>(N * b)) - (V - float<53,-1074,ne>(N * b)), [-2.77556e-17, 2.77556e-17]) *)
Notation p69 := (ABS r26 i26). (* ABS(V - float<53,-1074,ne>(N * b), [0.03125, 0.5]) *)
Lemma t33 : p36 -> p69.
 intros h0.
 refine (abs_of_bnd_p r26 i26 i26 h0 _) ; finalize.
Qed.
Lemma l60 : s1 -> p69 (* ABS(V - float<53,-1074,ne>(N * b), [0.03125, 0.5]) *).
 intros h0.
 assert (h1 := l34 h0).
 apply t33. exact h1.
Qed.
Lemma t34 : p69 -> p68.
 intros h0.
 refine (float_absolute_wide_ne _ _ r26 i26 i49 h0 _) ; finalize.
Qed.
Lemma l59 : s1 -> p68 (* BND(float<53,-1074,ne>(V - float<53,-1074,ne>(N * b)) - (V - float<53,-1074,ne>(N * b)), [-2.77556e-17, 2.77556e-17]) *).
 intros h0.
 assert (h1 := l60 h0).
 apply t34. exact h1.
Qed.
Definition f62 := Float2 (-3) (-56).
Definition f63 := Float2 (479) (-64).
Definition i50 := makepairF f62 f63.
Notation p70 := (BND r63 i50). (* BND(V - float<53,-1074,ne>(N * b) - (MV - MN * Mb), [-4.16334e-17, 2.59666e-17]) *)
Notation r65 := ((_V - _MV)%R).
Notation r66 := ((r27 - r44)%R).
Notation r64 := ((r65 - r66)%R).
Notation p71 := (BND r64 i50). (* BND(V - MV - (float<53,-1074,ne>(N * b) - MN * Mb), [-4.16334e-17, 2.59666e-17]) *)
Notation p72 := (BND r65 i49). (* BND(V - MV, [-2.77556e-17, 2.77556e-17]) *)
Definition i51 := makepairF f37 f9.
Notation p73 := (ABS _MV i51). (* ABS(MV, [0.0625, 0.5]) *)
Notation p74 := (BND _MV i51). (* BND(MV, [0.0625, 0.5]) *)
Lemma t35 : p74 -> p73.
 intros h0.
 refine (abs_of_bnd_p _MV i51 i51 h0 _) ; finalize.
Qed.
Lemma l64 : s1 -> p73 (* ABS(MV, [0.0625, 0.5]) *).
 intros h0.
 assert (h1 := l32 h0).
 apply t35. refine (subset _MV i6 i51 h1 _) ; finalize.
Qed.
Lemma t36 : p73 -> p72.
 intros h0.
 refine (float_absolute_wide_ne _ _ _MV i51 i49 h0 _) ; finalize.
Qed.
Lemma l63 : s1 -> p72 (* BND(V - MV, [-2.77556e-17, 2.77556e-17]) *).
 intros h0.
 assert (h1 := l64 h0).
 apply t36. exact h1.
Qed.
Definition f64 := Float2 (33) (-64).
Definition f65 := Float2 (1) (-56).
Definition i52 := makepairF f64 f65.
Notation p75 := (BND r66 i52). (* BND(float<53,-1074,ne>(N * b) - MN * Mb, [1.78893e-18, 1.38778e-17]) *)
Definition f66 := Float2 (49229748246712365) (-60).
Definition f67 := Float2 (787675971947397855) (-64).
Definition i53 := makepairF f66 f67.
Notation p76 := (BND r44 i53). (* BND(MN * Mb, [0.0427, 0.0427]) *)
Definition i54 := makepairF f35 f5.
Notation p77 := (BND _Mb i54). (* BND(Mb, [4.27e-05, 4.27e-05]) *)
Lemma t37 : p4 -> p77 -> p76.
 intros h0 h1.
 refine (mul_pp _MN _Mb i4 i54 i53 h0 h1 _) ; finalize.
Qed.
Lemma l66 : s1 -> p76 (* BND(MN * Mb, [0.0427, 0.0427]) *).
 intros h0.
 assert (h1 := l30 h0).
 assert (h2 := l38 h0).
 apply t37. exact h1. refine (subset _Mb i3 i54 h2 _) ; finalize.
Qed.
Definition f68 := Float2 (1538429632709761) (-55).
Definition i55 := makepairF f68 f67.
Notation p78 := (BND r44 i55). (* BND(MN * Mb, [0.0427, 0.0427]) *)
Lemma t38 : p37 -> p78 -> p75.
 intros h0 h1.
 refine (sub r27 r44 i27 i55 i52 h0 h1 _) ; finalize.
Qed.
Lemma l65 : s1 -> p75 (* BND(float<53,-1074,ne>(N * b) - MN * Mb, [1.78893e-18, 1.38778e-17]) *).
 intros h0.
 assert (h1 := l35 h0).
 assert (h2 := l66 h0).
 apply t38. exact h1. refine (subset r44 i53 i55 h2 _) ; finalize.
Qed.
Lemma t39 : p72 -> p75 -> p71.
 intros h0 h1.
 refine (sub r65 r66 i49 i52 i50 h0 h1 _) ; finalize.
Qed.
Lemma l62 : s1 -> p71 (* BND(V - MV - (float<53,-1074,ne>(N * b) - MN * Mb), [-4.16334e-17, 2.59666e-17]) *).
 intros h0.
 assert (h1 := l63 h0).
 assert (h2 := l65 h0).
 apply t39. exact h1. exact h2.
Qed.
Lemma t40 : p71 -> p70.
 intros h0.
 refine (sub_mibs _ _ _ _ i50 h0) ; finalize.
Qed.
Lemma l61 : s1 -> p70 (* BND(V - float<53,-1074,ne>(N * b) - (MV - MN * Mb), [-4.16334e-17, 2.59666e-17]) *).
 intros h0.
 assert (h1 := l62 h0).
 apply t40. exact h1.
Qed.
Lemma t41 : p68 -> p70 -> p67.
 intros h0 h1.
 refine (add r62 r63 i49 i50 i48 h0 h1 _) ; finalize.
Qed.
Lemma l58 : s1 -> p67 (* BND(float<53,-1074,ne>(V - float<53,-1074,ne>(N * b)) - (V - float<53,-1074,ne>(N * b)) + (V - float<53,-1074,ne>(N * b) - (MV - MN * Mb)), [-6.93889e-17, 5.37222e-17]) *).
 intros h0.
 assert (h1 := l59 h0).
 assert (h2 := l61 h0).
 apply t41. exact h1. exact h2.
Qed.
Lemma t42 : p67 -> p66.
 intros h0.
 refine (sub_xals _ _ _ i48 h0) ; finalize.
Qed.
Lemma l57 : s1 -> p66 (* BND(float<53,-1074,ne>(V - float<53,-1074,ne>(N * b)) - (MV - MN * Mb), [-6.93889e-17, 5.37222e-17]) *).
 intros h0.
 assert (h1 := l58 h0).
 apply t42. exact h1.
Qed.
Definition i56 := makepairF f15 f20.
Notation p79 := (BND r13 i56). (* BND(float<53,-1074,ne>(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V))), [1, 7.51e+07]) *)
Lemma t43 : p79 -> p66 -> p65.
 intros h0 h1.
 refine (mul_po r13 r58 i56 i48 i47 h0 h1 _) ; finalize.
Qed.
Lemma l56 : s1 -> p65 (* BND(float<53,-1074,ne>(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V))) * (float<53,-1074,ne>(V - float<53,-1074,ne>(N * b)) - (MV - MN * Mb)), [-5.58794e-09, 4.03454e-09]) *).
 intros h0.
 assert (h1 := l12 h0).
 assert (h2 := l57 h0).
 apply t43. refine (subset r13 i12 i56 h1 _) ; finalize. exact h2.
Qed.
Definition f69 := Float2 (-7) (-29).
Definition f70 := Float2 (282963178514603753) (-84).
Definition i57 := makepairF f69 f70.
Notation p80 := (BND r59 i57). (* BND((float<53,-1074,ne>(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V))) - (Mp + Ma * (MN / MV) * (MN / MV))) * (MV - MN * Mb), [-1.30385e-08, 1.46289e-08]) *)
Definition f71 := Float2 (-61) (-31).
Definition f72 := Float2 (38673078191915011) (-80).
Definition i58 := makepairF f71 f72.
Notation p81 := (BND r60 i58). (* BND(float<53,-1074,ne>(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V))) - (Mp + Ma * (MN / MV) * (MN / MV)), [-2.84053e-08, 3.19896e-08]) *)
Notation r68 := ((r13 - r14)%R).
Notation r69 := ((r14 - r39)%R).
Notation r67 := ((r68 + r69)%R).
Notation p82 := (BND r67 i58). (* BND(float<53,-1074,ne>(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V))) - (p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V))) + (p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V)) - (Mp + Ma * (MN / MV) * (MN / MV))), [-2.84053e-08, 3.19896e-08]) *)
Definition f73 := Float2 (-1) (-27).
Definition f74 := Float2 (1) (-27).
Definition i59 := makepairF f73 f74.
Notation p83 := (BND r68 i59). (* BND(float<53,-1074,ne>(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V))) - (p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V))), [-7.45058e-09, 7.45058e-09]) *)
Definition f75 := Float2 (1) (27).
Definition i60 := makepairF f15 f75.
Notation p84 := (ABS r14 i60). (* ABS(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V)), [1, 1.34218e+08]) *)
Notation p85 := (BND r14 i60). (* BND(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V)), [1, 1.34218e+08]) *)
Lemma t44 : p85 -> p84.
 intros h0.
 refine (abs_of_bnd_p r14 i60 i60 h0 _) ; finalize.
Qed.
Lemma l71 : s1 -> p84 (* ABS(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V)), [1, 1.34218e+08]) *).
 intros h0.
 assert (h1 := l13 h0).
 apply t44. refine (subset r14 i13 i60 h1 _) ; finalize.
Qed.
Lemma t45 : p84 -> p83.
 intros h0.
 refine (float_absolute_wide_ne _ _ r14 i60 i59 h0 _) ; finalize.
Qed.
Lemma l70 : s1 -> p83 (* BND(float<53,-1074,ne>(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V))) - (p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V))), [-7.45058e-09, 7.45058e-09]) *).
 intros h0.
 assert (h1 := l71 h0).
 apply t45. exact h1.
Qed.
Definition f76 := Float2 (-45) (-31).
Definition f77 := Float2 (29665878937174019) (-80).
Definition i61 := makepairF f76 f77.
Notation p86 := (BND r69 i61). (* BND(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V)) - (Mp + Ma * (MN / MV) * (MN / MV)), [-2.09548e-08, 2.4539e-08]) *)
Notation r71 := ((_p - _Mp)%R).
Notation r72 := ((r16 - r40)%R).
Notation r70 := ((r71 + r72)%R).
Notation p87 := (BND r70 i61). (* BND(p - Mp + (float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V)) - Ma * (MN / MV) * (MN / MV)), [-2.09548e-08, 2.4539e-08]) *)
Definition i62 := makepairF f10 f10.
Notation p88 := (BND r71 i62). (* BND(p - Mp, [-0, 0]) *)
Lemma t46 : p18 -> p5 -> p88.
 intros h0 h1.
 refine (sub _p _Mp i5 i5 i62 h0 h1 _) ; finalize.
Qed.
Lemma l74 : s1 -> p88 (* BND(p - Mp, [-0, 0]) *).
 intros h0.
 assert (h1 := l14 h0).
 assert (h2 := l15 h0).
 apply t46. exact h1. exact h2.
Qed.
Notation p89 := (BND r72 i61). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V)) - Ma * (MN / MV) * (MN / MV), [-2.09548e-08, 2.4539e-08]) *)
Notation r74 := ((r16 - r17)%R).
Notation r75 := ((r17 - r40)%R).
Notation r73 := ((r74 + r75)%R).
Notation p90 := (BND r73 i61). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V)) - float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V) + (float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V) - Ma * (MN / MV) * (MN / MV)), [-2.09548e-08, 2.4539e-08]) *)
Notation p91 := (BND r74 i9). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V)) - float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V), [-3.72529e-09, 3.72529e-09]) *)
Notation p92 := (ABS r17 i10). (* ABS(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V), [1, 6.71089e+07]) *)
Definition f78 := Float2 (1) (12).
Definition i63 := makepairF f15 f78.
Notation p93 := (ABS r18 i63). (* ABS(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)), [1, 4096]) *)
Notation p94 := (BND r18 i63). (* BND(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)), [1, 4096]) *)
Lemma t47 : p94 -> p93.
 intros h0.
 refine (abs_of_bnd_p r18 i63 i63 h0 _) ; finalize.
Qed.
Lemma l79 : s1 -> p93 (* ABS(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)), [1, 4096]) *).
 intros h0.
 assert (h1 := l20 h0).
 apply t47. refine (subset r18 i15 i63 h1 _) ; finalize.
Qed.
Definition f79 := Float2 (79) (7).
Definition i64 := makepairF f26 f79.
Notation p95 := (ABS r21 i64). (* ABS(float<53,-1074,ne>(N / V), [4, 10112]) *)
Notation p96 := (BND r21 i64). (* BND(float<53,-1074,ne>(N / V), [4, 10112]) *)
Lemma t48 : p96 -> p95.
 intros h0.
 refine (abs_of_bnd_p r21 i64 i64 h0 _) ; finalize.
Qed.
Lemma l80 : s1 -> p95 (* ABS(float<53,-1074,ne>(N / V), [4, 10112]) *).
 intros h0.
 assert (h1 := l27 h0).
 apply t48. refine (subset r21 i18 i64 h1 _) ; finalize.
Qed.
Definition f80 := Float2 (1) (14).
Definition i65 := makepairF f15 f80.
Notation p97 := (ABS r21 i65). (* ABS(float<53,-1074,ne>(N / V), [1, 16384]) *)
Lemma t49 : p93 -> p97 -> p92.
 intros h0 h1.
 refine (mul_aa r18 r21 i63 i65 i10 h0 h1 _) ; finalize.
Qed.
Lemma l78 : s1 -> p92 (* ABS(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V), [1, 6.71089e+07]) *).
 intros h0.
 assert (h1 := l79 h0).
 assert (h2 := l80 h0).
 apply t49. exact h1. refine (abs_subset r21 i64 i65 h2 _) ; finalize.
Qed.
Lemma t50 : p92 -> p91.
 intros h0.
 refine (float_absolute_wide_ne _ _ r17 i10 i9 h0 _) ; finalize.
Qed.
Lemma l77 : s1 -> p91 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V)) - float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V), [-3.72529e-09, 3.72529e-09]) *).
 intros h0.
 assert (h1 := l78 h0).
 apply t50. exact h1.
Qed.
Definition f81 := Float2 (-37) (-31).
Definition f82 := Float2 (25162279309803523) (-80).
Definition i66 := makepairF f81 f82.
Notation p98 := (BND r75 i66). (* BND(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V) - Ma * (MN / MV) * (MN / MV), [-1.72295e-08, 2.08137e-08]) *)
Notation r78 := ((r21 - r42)%R).
Notation r77 := ((r18 * r78)%R).
Notation r80 := ((r18 - r41)%R).
Notation r79 := ((r80 * r42)%R).
Notation r76 := ((r77 + r79)%R).
Notation p99 := (BND r76 i66). (* BND(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * (float<53,-1074,ne>(N / V) - MN / MV) + (float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) - Ma * (MN / MV)) * (MN / MV), [-1.72295e-08, 2.08137e-08]) *)
Definition f83 := Float2 (-35) (-32).
Definition f84 := Float2 (39164690080727047) (-82).
Definition i67 := makepairF f83 f84.
Notation p100 := (BND r77 i67). (* BND(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * (float<53,-1074,ne>(N / V) - MN / MV), [-8.14907e-09, 8.09907e-09]) *)
Definition f85 := Float2 (-143) (-46).
Definition f86 := Float2 (640074097040031785) (-98).
Definition i68 := makepairF f85 f86.
Notation p101 := (BND r78 i68). (* BND(float<53,-1074,ne>(N / V) - MN / MV, [-2.03215e-12, 2.01972e-12]) *)
Notation r82 := ((r21 - r22)%R).
Notation r83 := ((r22 - r42)%R).
Notation r81 := ((r82 + r83)%R).
Notation p102 := (BND r81 i68). (* BND(float<53,-1074,ne>(N / V) - N / V + (N / V - MN / MV), [-2.03215e-12, 2.01972e-12]) *)
Definition f87 := Float2 (-1) (-40).
Definition f88 := Float2 (1) (-40).
Definition i69 := makepairF f87 f88.
Notation p103 := (BND r82 i69). (* BND(float<53,-1074,ne>(N / V) - N / V, [-9.09495e-13, 9.09495e-13]) *)
Notation p104 := (ABS r22 i65). (* ABS(N / V, [1, 16384]) *)
Notation p105 := (ABS _N i4). (* ABS(N, [1000, 1000]) *)
Lemma t51 : p27 -> p105.
 intros h0.
 refine (abs_of_bnd_p _N i4 i4 h0 _) ; finalize.
Qed.
Lemma l88 : s1 -> p105 (* ABS(N, [1000, 1000]) *).
 intros h0.
 assert (h1 := l29 h0).
 apply t51. exact h1.
Qed.
Definition i70 := makepairF f37 f15.
Notation p106 := (ABS _V i70). (* ABS(V, [0.0625, 1]) *)
Notation p107 := (BND _V i70). (* BND(V, [0.0625, 1]) *)
Lemma t52 : p107 -> p106.
 intros h0.
 refine (abs_of_bnd_p _V i70 i70 h0 _) ; finalize.
Qed.
Lemma l89 : s1 -> p106 (* ABS(V, [0.0625, 1]) *).
 intros h0.
 assert (h1 := l31 h0).
 apply t52. refine (subset _V i19 i70 h1 _) ; finalize.
Qed.
Definition f89 := Float2 (1) (10).
Definition i71 := makepairF f15 f89.
Notation p108 := (ABS _N i71). (* ABS(N, [1, 1024]) *)
Lemma t53 : p108 -> p106 -> p104.
 intros h0 h1.
 refine (div_aa _N _V i71 i70 i65 h0 h1 _) ; finalize.
Qed.
Lemma l87 : s1 -> p104 (* ABS(N / V, [1, 16384]) *).
 intros h0.
 assert (h1 := l88 h0).
 assert (h2 := l89 h0).
 apply t53. refine (abs_subset _N i4 i71 h1 _) ; finalize. exact h2.
Qed.
Lemma t54 : p104 -> p103.
 intros h0.
 refine (float_absolute_wide_ne _ _ r22 i65 i69 h0 _) ; finalize.
Qed.
Lemma l86 : s1 -> p103 (* BND(float<53,-1074,ne>(N / V) - N / V, [-9.09495e-13, 9.09495e-13]) *).
 intros h0.
 assert (h1 := l87 h0).
 apply t54. exact h1.
Qed.
Definition f90 := Float2 (-79) (-46).
Definition f91 := Float2 (351843720888320041) (-98).
Definition i72 := makepairF f90 f91.
Notation p109 := (BND r83 i72). (* BND(N / V - MN / MV, [-1.12266e-12, 1.11022e-12]) *)
Definition f92 := Float2 (-1) (-53).
Definition f93 := Float2 (288230376151711777) (-111).
Definition i73 := makepairF f92 f93.
Notation p110 := (REL r22 r42 i73). (* REL(N / V, MN / MV, [-1.11022e-16, 1.11022e-16]) *)
Notation p111 := (REL _N _MN i62). (* REL(N, MN, [-0, 0]) *)
Notation p112 := (NZR _MN). (* NZR(MN) *)
Notation p113 := (ABS _MN i71). (* ABS(MN, [1, 1024]) *)
Notation p114 := (BND _MN i71). (* BND(MN, [1, 1024]) *)
Lemma t55 : p114 -> p113.
 intros h0.
 refine (abs_of_bnd_p _MN i71 i71 h0 _) ; finalize.
Qed.
Lemma l94 : s1 -> p113 (* ABS(MN, [1, 1024]) *).
 intros h0.
 assert (h1 := l30 h0).
 apply t55. refine (subset _MN i4 i71 h1 _) ; finalize.
Qed.
Lemma t56 : p113 -> p112.
 intros h0.
 refine (nzr_of_abs _MN i71 h0 _) ; finalize.
Qed.
Lemma l93 : s1 -> p112 (* NZR(MN) *).
 intros h0.
 assert (h1 := l94 h0).
 apply t56. exact h1.
Qed.
Notation r85 := ((_N - _MN)%R).
Notation r84 := ((r85 / _MN)%R).
Notation p115 := (BND r84 i62). (* BND((N - MN) / MN, [-0, 0]) *)
Notation p116 := (BND r85 i62). (* BND(N - MN, [-0, 0]) *)
Lemma t57 : p27 -> p4 -> p116.
 intros h0 h1.
 refine (sub _N _MN i4 i4 i62 h0 h1 _) ; finalize.
Qed.
Lemma l96 : s1 -> p116 (* BND(N - MN, [-0, 0]) *).
 intros h0.
 assert (h1 := l29 h0).
 assert (h2 := l30 h0).
 apply t57. exact h1. exact h2.
Qed.
Lemma t58 : p116 -> p114 -> p115.
 intros h0 h1.
 refine (div_pp r85 _MN i62 i71 i62 h0 h1 _) ; finalize.
Qed.
Lemma l95 : s1 -> p115 (* BND((N - MN) / MN, [-0, 0]) *).
 intros h0.
 assert (h1 := l96 h0).
 assert (h2 := l30 h0).
 apply t58. exact h1. refine (subset _MN i4 i71 h2 _) ; finalize.
Qed.
Lemma t59 : p112 -> p115 -> p111.
 intros h0 h1.
 refine (rel_of_nzr_bnd _N _MN i62 h0 h1) ; finalize.
Qed.
Lemma l92 : s1 -> p111 (* REL(N, MN, [-0, 0]) *).
 intros h0.
 assert (h1 := l93 h0).
 assert (h2 := l95 h0).
 apply t59. exact h1. exact h2.
Qed.
Definition f94 := Float2 (1) (-53).
Definition i74 := makepairF f92 f94.
Notation p117 := (REL _V _MV i74). (* REL(V, MV, [-1.11022e-16, 1.11022e-16]) *)
Notation p118 := (ABS _MV i70). (* ABS(MV, [0.0625, 1]) *)
Lemma t60 : p118 -> p117.
 intros h0.
 refine (float_relative_ne _ _ _MV i70 i74 h0 _) ; finalize.
Qed.
Lemma l97 : s1 -> p117 (* REL(V, MV, [-1.11022e-16, 1.11022e-16]) *).
 intros h0.
 assert (h1 := l64 h0).
 apply t60. refine (abs_subset _MV i51 i70 h1 _) ; finalize.
Qed.
Notation p119 := (NZR _MV). (* NZR(MV) *)
Lemma t61 : p118 -> p119.
 intros h0.
 refine (nzr_of_abs _MV i70 h0 _) ; finalize.
Qed.
Lemma l98 : s1 -> p119 (* NZR(MV) *).
 intros h0.
 assert (h1 := l64 h0).
 apply t61. refine (abs_subset _MV i51 i70 h1 _) ; finalize.
Qed.
Lemma t62 : p111 -> p117 -> p119 -> p110.
 intros h0 h1 h2.
 refine (div_rr _N _MN _V _MV i62 i74 i73 h0 h1 h2 _) ; finalize.
Qed.
Lemma l91 : s1 -> p110 (* REL(N / V, MN / MV, [-1.11022e-16, 1.11022e-16]) *).
 intros h0.
 assert (h1 := l92 h0).
 assert (h2 := l97 h0).
 assert (h3 := l98 h0).
 apply t62. exact h1. exact h2. exact h3.
Qed.
Definition f95 := Float2 (3) (9).
Definition f96 := Float2 (703687441776640001) (-46).
Definition i75 := makepairF f95 f96.
Notation p120 := (BND r42 i75). (* BND(MN / MV, [1536, 10000]) *)
Definition f97 := Float2 (3) (8).
Definition i76 := makepairF f97 f6.
Notation p121 := (BND _MN i76). (* BND(MN, [768, 1000]) *)
Lemma t63 : p121 -> p6 -> p120.
 intros h0 h1.
 refine (div_pp _MN _MV i76 i6 i75 h0 h1 _) ; finalize.
Qed.
Lemma l99 : s1 -> p120 (* BND(MN / MV, [1536, 10000]) *).
 intros h0.
 assert (h1 := l30 h0).
 assert (h2 := l32 h0).
 apply t63. refine (subset _MN i4 i76 h1 _) ; finalize. exact h2.
Qed.
Definition i77 := makepairF f15 f96.
Notation p122 := (BND r42 i77). (* BND(MN / MV, [1, 10000]) *)
Lemma t64 : p110 -> p122 -> p109.
 intros h0 h1.
 refine (error_of_rel_op r22 r42 i73 i77 i72 h0 h1 _) ; finalize.
Qed.
Lemma l90 : s1 -> p109 (* BND(N / V - MN / MV, [-1.12266e-12, 1.11022e-12]) *).
 intros h0.
 assert (h1 := l91 h0).
 assert (h2 := l99 h0).
 apply t64. exact h1. refine (subset r42 i75 i77 h2 _) ; finalize.
Qed.
Lemma t65 : p103 -> p109 -> p102.
 intros h0 h1.
 refine (add r82 r83 i69 i72 i68 h0 h1 _) ; finalize.
Qed.
Lemma l85 : s1 -> p102 (* BND(float<53,-1074,ne>(N / V) - N / V + (N / V - MN / MV), [-2.03215e-12, 2.01972e-12]) *).
 intros h0.
 assert (h1 := l86 h0).
 assert (h2 := l90 h0).
 apply t65. exact h1. exact h2.
Qed.
Lemma t66 : p102 -> p101.
 intros h0.
 refine (sub_xals _ _ _ i68 h0) ; finalize.
Qed.
Lemma l84 : s1 -> p101 (* BND(float<53,-1074,ne>(N / V) - MN / MV, [-2.03215e-12, 2.01972e-12]) *).
 intros h0.
 assert (h1 := l85 h0).
 apply t66. exact h1.
Qed.
Lemma t67 : p21 -> p101 -> p100.
 intros h0 h1.
 refine (mul_po r18 r78 i15 i68 i67 h0 h1 _) ; finalize.
Qed.
Lemma l83 : s1 -> p100 (* BND(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * (float<53,-1074,ne>(N / V) - MN / MV), [-8.14907e-09, 8.09907e-09]) *).
 intros h0.
 assert (h1 := l20 h0).
 assert (h2 := l84 h0).
 apply t67. exact h1. exact h2.
Qed.
Definition f98 := Float2 (-39) (-32).
Definition f99 := Float2 (61484427158487045) (-82).
Definition i78 := makepairF f98 f99.
Notation p123 := (BND r79 i78). (* BND((float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) - Ma * (MN / MV)) * (MN / MV), [-9.0804e-09, 1.27147e-08]) *)
Definition f100 := Float2 (-63) (-46).
Definition f101 := Float2 (402944341825860697) (-98).
Definition i79 := makepairF f100 f101.
Notation p124 := (BND r80 i79). (* BND(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) - Ma * (MN / MV), [-8.95284e-13, 1.27147e-12]) *)
Notation r87 := ((r18 - r19)%R).
Notation r88 := ((r19 - r41)%R).
Notation r86 := ((r87 + r88)%R).
Notation p125 := (BND r86 i79). (* BND(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) - a * float<53,-1074,ne>(N / V) + (a * float<53,-1074,ne>(N / V) - Ma * (MN / MV)), [-8.95284e-13, 1.27147e-12]) *)
Definition f102 := Float2 (-1) (-42).
Definition f103 := Float2 (1) (-42).
Definition i80 := makepairF f102 f103.
Notation p126 := (BND r87 i80). (* BND(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) - a * float<53,-1074,ne>(N / V), [-2.27374e-13, 2.27374e-13]) *)
Notation p127 := (ABS r19 i63). (* ABS(a * float<53,-1074,ne>(N / V), [1, 4096]) *)
Definition f104 := Float2 (103) (-8).
Definition i81 := makepairF f30 f104.
Notation p128 := (ABS _a i81). (* ABS(a, [0.25, 0.402344]) *)
Notation p129 := (BND _a i81). (* BND(a, [0.25, 0.402344]) *)
Lemma t68 : p129 -> p128.
 intros h0.
 refine (abs_of_bnd_p _a i81 i81 h0 _) ; finalize.
Qed.
Lemma l105 : s1 -> p128 (* ABS(a, [0.25, 0.402344]) *).
 intros h0.
 assert (h1 := l22 h0).
 apply t68. refine (subset _a i16 i81 h1 _) ; finalize.
Qed.
Lemma t69 : p128 -> p95 -> p127.
 intros h0 h1.
 refine (mul_aa _a r21 i81 i64 i63 h0 h1 _) ; finalize.
Qed.
Lemma l104 : s1 -> p127 (* ABS(a * float<53,-1074,ne>(N / V), [1, 4096]) *).
 intros h0.
 assert (h1 := l105 h0).
 assert (h2 := l80 h0).
 apply t69. exact h1. exact h2.
Qed.
Lemma t70 : p127 -> p126.
 intros h0.
 refine (float_absolute_wide_ne _ _ r19 i63 i80 h0 _) ; finalize.
Qed.
Lemma l103 : s1 -> p126 (* BND(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) - a * float<53,-1074,ne>(N / V), [-2.27374e-13, 2.27374e-13]) *).
 intros h0.
 assert (h1 := l104 h0).
 apply t70. exact h1.
Qed.
Definition f105 := Float2 (-47) (-46).
Definition f106 := Float2 (330886747787932761) (-98).
Definition i82 := makepairF f105 f106.
Notation p130 := (BND r88 i82). (* BND(a * float<53,-1074,ne>(N / V) - Ma * (MN / MV), [-6.6791e-13, 1.04409e-12]) *)
Definition i83 := makepairF f87 f106.
Notation p131 := (BND r88 i83). (* BND(a * float<53,-1074,ne>(N / V) - Ma * (MN / MV), [-9.09495e-13, 1.04409e-12]) *)
Notation r90 := ((_a * r78)%R).
Notation r92 := ((_a - _Ma)%R).
Notation r91 := ((r92 * r42)%R).
Notation r89 := ((r90 + r91)%R).
Notation p132 := (BND r89 i83). (* BND(a * (float<53,-1074,ne>(N / V) - MN / MV) + (a - Ma) * (MN / MV), [-9.09495e-13, 1.04409e-12]) *)
Definition f107 := Float2 (1026678851652211043) (-100).
Definition i84 := makepairF f87 f107.
Notation p133 := (BND r90 i84). (* BND(a * (float<53,-1074,ne>(N / V) - MN / MV), [-9.09495e-13, 8.09907e-13]) *)
Definition f108 := Float2 (-9) (-42).
Definition i85 := makepairF f108 f86.
Notation p134 := (BND r78 i85). (* BND(float<53,-1074,ne>(N / V) - MN / MV, [-2.04636e-12, 2.01972e-12]) *)
Lemma t71 : p32 -> p134 -> p133.
 intros h0 h1.
 refine (mul_po _a r78 i23 i85 i84 h0 h1 _) ; finalize.
Qed.
Lemma l109 : s1 -> p133 (* BND(a * (float<53,-1074,ne>(N / V) - MN / MV), [-9.09495e-13, 8.09907e-13]) *).
 intros h0.
 assert (h1 := l22 h0).
 assert (h2 := l84 h0).
 apply t71. refine (subset _a i16 i23 h1 _) ; finalize. refine (subset r78 i68 i85 h2 _) ; finalize.
Qed.
Definition f109 := Float2 (1) (-45).
Definition f110 := Float2 (296868139499520001) (-100).
Definition i86 := makepairF f109 f110.
Notation p135 := (BND r91 i86). (* BND((a - Ma) * (MN / MV), [2.84217e-14, 2.34188e-13]) *)
Definition f111 := Float2 (53) (-61).
Definition f112 := Float2 (27) (-60).
Definition i87 := makepairF f111 f112.
Notation p136 := (BND r92 i87). (* BND(a - Ma, [2.29851e-17, 2.34188e-17]) *)
Lemma t72 : p23 -> p2 -> p136.
 intros h0 h1.
 refine (sub _a _Ma i16 i2 i87 h0 h1 _) ; finalize.
Qed.
Lemma l111 : s1 -> p136 (* BND(a - Ma, [2.29851e-17, 2.34188e-17]) *).
 intros h0.
 assert (h1 := l22 h0).
 assert (h2 := l23 h0).
 apply t72. exact h1. exact h2.
Qed.
Definition f113 := Float2 (3) (-57).
Definition i88 := makepairF f113 f112.
Notation p137 := (BND r92 i88). (* BND(a - Ma, [2.08167e-17, 2.34188e-17]) *)
Definition f114 := Float2 (351843720888320001) (-45).
Definition i89 := makepairF f95 f114.
Notation p138 := (BND r42 i89). (* BND(MN / MV, [1536, 10000]) *)
Lemma t73 : p137 -> p138 -> p135.
 intros h0 h1.
 refine (mul_pp r92 r42 i88 i89 i86 h0 h1 _) ; finalize.
Qed.
Lemma l110 : s1 -> p135 (* BND((a - Ma) * (MN / MV), [2.84217e-14, 2.34188e-13]) *).
 intros h0.
 assert (h1 := l111 h0).
 assert (h2 := l99 h0).
 apply t73. refine (subset r92 i87 i88 h1 _) ; finalize. refine (subset r42 i75 i89 h2 _) ; finalize.
Qed.
Lemma t74 : p133 -> p135 -> p132.
 intros h0 h1.
 refine (add r90 r91 i84 i86 i83 h0 h1 _) ; finalize.
Qed.
Lemma l108 : s1 -> p132 (* BND(a * (float<53,-1074,ne>(N / V) - MN / MV) + (a - Ma) * (MN / MV), [-9.09495e-13, 1.04409e-12]) *).
 intros h0.
 assert (h1 := l109 h0).
 assert (h2 := l110 h0).
 apply t74. exact h1. exact h2.
Qed.
Lemma t75 : p132 -> p131.
 intros h0.
 refine (mul_mars _ _ _ _ i83 h0) ; finalize.
Qed.
Lemma l107 : s1 -> p131 (* BND(a * float<53,-1074,ne>(N / V) - Ma * (MN / MV), [-9.09495e-13, 1.04409e-12]) *).
 intros h0.
 assert (h1 := l108 h0).
 apply t75. exact h1.
Qed.
Definition f115 := Float2 (8021) (-1).
Definition i90 := makepairF f105 f115.
Notation p139 := (BND r88 i90). (* BND(a * float<53,-1074,ne>(N / V) - Ma * (MN / MV), [-6.6791e-13, 4010.5]) *)
Definition f116 := Float2 (-3) (-54).
Definition i91 := makepairF f116 f15.
Notation p140 := (REL r19 r41 i91). (* REL(a * float<53,-1074,ne>(N / V), Ma * (MN / MV), [-1.66533e-16, 1]) *)
Definition f117 := Float2 (33) (-59).
Definition i92 := makepairF f117 f9.
Notation p141 := (REL _a _Ma i92). (* REL(a, Ma, [5.72459e-17, 0.5]) *)
Notation p142 := (NZR _Ma). (* NZR(Ma) *)
Definition i93 := makepairF f30 f15.
Notation p143 := (ABS _Ma i93). (* ABS(Ma, [0.25, 1]) *)
Notation p144 := (BND _Ma i93). (* BND(Ma, [0.25, 1]) *)
Lemma t76 : p144 -> p143.
 intros h0.
 refine (abs_of_bnd_p _Ma i93 i93 h0 _) ; finalize.
Qed.
Lemma l116 : s1 -> p143 (* ABS(Ma, [0.25, 1]) *).
 intros h0.
 assert (h1 := l23 h0).
 apply t76. refine (subset _Ma i2 i93 h1 _) ; finalize.
Qed.
Lemma t77 : p143 -> p142.
 intros h0.
 refine (nzr_of_abs _Ma i93 h0 _) ; finalize.
Qed.
Lemma l115 : s1 -> p142 (* NZR(Ma) *).
 intros h0.
 assert (h1 := l116 h0).
 apply t77. exact h1.
Qed.
Notation r93 := ((r92 / _Ma)%R).
Notation p145 := (BND r93 i92). (* BND((a - Ma) / Ma, [5.72459e-17, 0.5]) *)
Definition f118 := Float2 (1) (-3).
Definition i94 := makepairF f111 f118.
Notation p146 := (BND r92 i94). (* BND(a - Ma, [2.29851e-17, 0.125]) *)
Definition f119 := Float2 (411) (-10).
Definition i95 := makepairF f30 f119.
Notation p147 := (BND _Ma i95). (* BND(Ma, [0.25, 0.401367]) *)
Lemma t78 : p146 -> p147 -> p145.
 intros h0 h1.
 refine (div_pp r92 _Ma i94 i95 i92 h0 h1 _) ; finalize.
Qed.
Lemma l117 : s1 -> p145 (* BND((a - Ma) / Ma, [5.72459e-17, 0.5]) *).
 intros h0.
 assert (h1 := l111 h0).
 assert (h2 := l23 h0).
 apply t78. refine (subset r92 i87 i94 h1 _) ; finalize. refine (subset _Ma i2 i95 h2 _) ; finalize.
Qed.
Lemma t79 : p142 -> p145 -> p141.
 intros h0 h1.
 refine (rel_of_nzr_bnd _a _Ma i92 h0 h1) ; finalize.
Qed.
Lemma l114 : s1 -> p141 (* REL(a, Ma, [5.72459e-17, 0.5]) *).
 intros h0.
 assert (h1 := l115 h0).
 assert (h2 := l117 h0).
 apply t79. exact h1. exact h2.
Qed.
Definition f120 := Float2 (-1) (-52).
Definition i96 := makepairF f120 f30.
Notation p148 := (REL r21 r42 i96). (* REL(float<53,-1074,ne>(N / V), MN / MV, [-2.22045e-16, 0.25]) *)
Definition i97 := makepairF f92 f118.
Notation p149 := (REL r21 r22 i97). (* REL(float<53,-1074,ne>(N / V), N / V, [-1.11022e-16, 0.125]) *)
Lemma t80 : p104 -> p149.
 intros h0.
 refine (float_relative_ne _ _ r22 i65 i97 h0 _) ; finalize.
Qed.
Lemma l119 : s1 -> p149 (* REL(float<53,-1074,ne>(N / V), N / V, [-1.11022e-16, 0.125]) *).
 intros h0.
 assert (h1 := l87 h0).
 apply t80. exact h1.
Qed.
Definition i98 := makepairF f92 f37.
Notation p150 := (REL r22 r42 i98). (* REL(N / V, MN / MV, [-1.11022e-16, 0.0625]) *)
Lemma t81 : p149 -> p150 -> p148.
 intros h0 h1.
 refine (compose r21 r22 r42 i97 i98 i96 h0 h1 _) ; finalize.
Qed.
Lemma l118 : s1 -> p148 (* REL(float<53,-1074,ne>(N / V), MN / MV, [-2.22045e-16, 0.25]) *).
 intros h0.
 assert (h1 := l119 h0).
 assert (h2 := l91 h0).
 apply t81. exact h1. refine (rel_subset r22 r42 i73 i98 h2 _) ; finalize.
Qed.
Lemma t82 : p141 -> p148 -> p140.
 intros h0 h1.
 refine (mul_rr _a _Ma r21 r42 i92 i96 i91 h0 h1 _) ; finalize.
Qed.
Lemma l113 : s1 -> p140 (* REL(a * float<53,-1074,ne>(N / V), Ma * (MN / MV), [-1.66533e-16, 1]) *).
 intros h0.
 assert (h1 := l114 h0).
 assert (h2 := l118 h0).
 apply t82. exact h1. exact h2.
Qed.
Definition i99 := makepairF f15 f115.
Notation p151 := (BND r41 i99). (* BND(Ma * (MN / MV), [1, 4010.5]) *)
Definition f121 := Float2 (3285) (-13).
Definition i100 := makepairF f30 f121.
Notation p152 := (BND _Ma i100). (* BND(Ma, [0.25, 0.401001]) *)
Definition f122 := Float2 (10001) (0).
Definition i101 := makepairF f26 f122.
Notation p153 := (BND r42 i101). (* BND(MN / MV, [4, 10001]) *)
Lemma t83 : p152 -> p153 -> p151.
 intros h0 h1.
 refine (mul_pp _Ma r42 i100 i101 i99 h0 h1 _) ; finalize.
Qed.
Lemma l120 : s1 -> p151 (* BND(Ma * (MN / MV), [1, 4010.5]) *).
 intros h0.
 assert (h1 := l23 h0).
 assert (h2 := l99 h0).
 apply t83. refine (subset _Ma i2 i100 h1 _) ; finalize. refine (subset r42 i75 i101 h2 _) ; finalize.
Qed.
Lemma t84 : p140 -> p151 -> p139.
 intros h0 h1.
 refine (error_of_rel_op r19 r41 i91 i99 i90 h0 h1 _) ; finalize.
Qed.
Lemma l112 : s1 -> p139 (* BND(a * float<53,-1074,ne>(N / V) - Ma * (MN / MV), [-6.6791e-13, 4010.5]) *).
 intros h0.
 assert (h1 := l113 h0).
 assert (h2 := l120 h0).
 apply t84. exact h1. exact h2.
Qed.
Lemma l106 : s1 -> p130 (* BND(a * float<53,-1074,ne>(N / V) - Ma * (MN / MV), [-6.6791e-13, 1.04409e-12]) *).
 intros h0.
 assert (h1 := l107 h0).
 assert (h2 := l112 h0).
 apply intersect with (1 := h1) (2 := h2). finalize.
Qed.
Lemma t85 : p126 -> p130 -> p125.
 intros h0 h1.
 refine (add r87 r88 i80 i82 i79 h0 h1 _) ; finalize.
Qed.
Lemma l102 : s1 -> p125 (* BND(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) - a * float<53,-1074,ne>(N / V) + (a * float<53,-1074,ne>(N / V) - Ma * (MN / MV)), [-8.95284e-13, 1.27147e-12]) *).
 intros h0.
 assert (h1 := l103 h0).
 assert (h2 := l106 h0).
 apply t85. exact h1. exact h2.
Qed.
Lemma t86 : p125 -> p124.
 intros h0.
 refine (sub_xals _ _ _ i79 h0) ; finalize.
Qed.
Lemma l101 : s1 -> p124 (* BND(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) - Ma * (MN / MV), [-8.95284e-13, 1.27147e-12]) *).
 intros h0.
 assert (h1 := l102 h0).
 apply t86. exact h1.
Qed.
Lemma t87 : p124 -> p122 -> p123.
 intros h0 h1.
 refine (mul_op r80 r42 i79 i77 i78 h0 h1 _) ; finalize.
Qed.
Lemma l100 : s1 -> p123 (* BND((float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) - Ma * (MN / MV)) * (MN / MV), [-9.0804e-09, 1.27147e-08]) *).
 intros h0.
 assert (h1 := l101 h0).
 assert (h2 := l99 h0).
 apply t87. exact h1. refine (subset r42 i75 i77 h2 _) ; finalize.
Qed.
Lemma t88 : p100 -> p123 -> p99.
 intros h0 h1.
 refine (add r77 r79 i67 i78 i66 h0 h1 _) ; finalize.
Qed.
Lemma l82 : s1 -> p99 (* BND(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * (float<53,-1074,ne>(N / V) - MN / MV) + (float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) - Ma * (MN / MV)) * (MN / MV), [-1.72295e-08, 2.08137e-08]) *).
 intros h0.
 assert (h1 := l83 h0).
 assert (h2 := l100 h0).
 apply t88. exact h1. exact h2.
Qed.
Lemma t89 : p99 -> p98.
 intros h0.
 refine (mul_mars _ _ _ _ i66 h0) ; finalize.
Qed.
Lemma l81 : s1 -> p98 (* BND(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V) - Ma * (MN / MV) * (MN / MV), [-1.72295e-08, 2.08137e-08]) *).
 intros h0.
 assert (h1 := l82 h0).
 apply t89. exact h1.
Qed.
Lemma t90 : p91 -> p98 -> p90.
 intros h0 h1.
 refine (add r74 r75 i9 i66 i61 h0 h1 _) ; finalize.
Qed.
Lemma l76 : s1 -> p90 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V)) - float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V) + (float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V) - Ma * (MN / MV) * (MN / MV)), [-2.09548e-08, 2.4539e-08]) *).
 intros h0.
 assert (h1 := l77 h0).
 assert (h2 := l81 h0).
 apply t90. exact h1. exact h2.
Qed.
Lemma t91 : p90 -> p89.
 intros h0.
 refine (sub_xals _ _ _ i61 h0) ; finalize.
Qed.
Lemma l75 : s1 -> p89 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V)) - Ma * (MN / MV) * (MN / MV), [-2.09548e-08, 2.4539e-08]) *).
 intros h0.
 assert (h1 := l76 h0).
 apply t91. exact h1.
Qed.
Lemma t92 : p88 -> p89 -> p87.
 intros h0 h1.
 refine (add r71 r72 i62 i61 i61 h0 h1 _) ; finalize.
Qed.
Lemma l73 : s1 -> p87 (* BND(p - Mp + (float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V)) - Ma * (MN / MV) * (MN / MV)), [-2.09548e-08, 2.4539e-08]) *).
 intros h0.
 assert (h1 := l74 h0).
 assert (h2 := l75 h0).
 apply t92. exact h1. exact h2.
Qed.
Lemma t93 : p87 -> p86.
 intros h0.
 refine (add_mibs _ _ _ _ i61 h0) ; finalize.
Qed.
Lemma l72 : s1 -> p86 (* BND(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V)) - (Mp + Ma * (MN / MV) * (MN / MV)), [-2.09548e-08, 2.4539e-08]) *).
 intros h0.
 assert (h1 := l73 h0).
 apply t93. exact h1.
Qed.
Lemma t94 : p83 -> p86 -> p82.
 intros h0 h1.
 refine (add r68 r69 i59 i61 i58 h0 h1 _) ; finalize.
Qed.
Lemma l69 : s1 -> p82 (* BND(float<53,-1074,ne>(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V))) - (p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V))) + (p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V)) - (Mp + Ma * (MN / MV) * (MN / MV))), [-2.84053e-08, 3.19896e-08]) *).
 intros h0.
 assert (h1 := l70 h0).
 assert (h2 := l72 h0).
 apply t94. exact h1. exact h2.
Qed.
Lemma t95 : p82 -> p81.
 intros h0.
 refine (sub_xals _ _ _ i58 h0) ; finalize.
Qed.
Lemma l68 : s1 -> p81 (* BND(float<53,-1074,ne>(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V))) - (Mp + Ma * (MN / MV) * (MN / MV)), [-2.84053e-08, 3.19896e-08]) *).
 intros h0.
 assert (h1 := l69 h0).
 apply t95. exact h1.
Qed.
Definition f123 := Float2 (527231004056711123) (-60).
Definition i102 := makepairF f31 f123.
Notation p154 := (BND r43 i102). (* BND(MV - MN * Mb, [0.03125, 0.4573]) *)
Notation p155 := (BND _MV i31). (* BND(MV, [0.09375, 0.5]) *)
Definition i103 := makepairF f66 f37.
Notation p156 := (BND r44 i103). (* BND(MN * Mb, [0.0427, 0.0625]) *)
Lemma t96 : p155 -> p156 -> p154.
 intros h0 h1.
 refine (sub _MV r44 i31 i103 i102 h0 h1 _) ; finalize.
Qed.
Lemma l121 : s1 -> p154 (* BND(MV - MN * Mb, [0.03125, 0.4573]) *).
 intros h0.
 assert (h1 := l32 h0).
 assert (h2 := l66 h0).
 apply t96. refine (subset _MV i6 i31 h1 _) ; finalize. refine (subset r44 i53 i103 h2 _) ; finalize.
Qed.
Lemma t97 : p81 -> p154 -> p80.
 intros h0 h1.
 refine (mul_op r60 r43 i58 i102 i57 h0 h1 _) ; finalize.
Qed.
Lemma l67 : s1 -> p80 (* BND((float<53,-1074,ne>(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V))) - (Mp + Ma * (MN / MV) * (MN / MV))) * (MV - MN * Mb), [-1.30385e-08, 1.46289e-08]) *).
 intros h0.
 assert (h1 := l68 h0).
 assert (h2 := l121 h0).
 apply t97. exact h1. exact h2.
Qed.
Lemma t98 : p65 -> p80 -> p64.
 intros h0 h1.
 refine (add r57 r59 i47 i57 i46 h0 h1 _) ; finalize.
Qed.
Lemma l55 : s1 -> p64 (* BND(float<53,-1074,ne>(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V))) * (float<53,-1074,ne>(V - float<53,-1074,ne>(N * b)) - (MV - MN * Mb)) + (float<53,-1074,ne>(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V))) - (Mp + Ma * (MN / MV) * (MN / MV))) * (MV - MN * Mb), [-1.86265e-08, 1.86634e-08]) *).
 intros h0.
 assert (h1 := l56 h0).
 assert (h2 := l67 h0).
 apply t98. exact h1. exact h2.
Qed.
Lemma t99 : p64 -> p63.
 intros h0.
 refine (mul_mars _ _ _ _ i46 h0) ; finalize.
Qed.
Lemma l54 : s1 -> p63 (* BND(float<53,-1074,ne>(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V))) * float<53,-1074,ne>(V - float<53,-1074,ne>(N * b)) - (Mp + Ma * (MN / MV) * (MN / MV)) * (MV - MN * Mb), [-1.86265e-08, 1.86634e-08]) *).
 intros h0.
 assert (h1 := l55 h0).
 apply t99. exact h1.
Qed.
Lemma t100 : p60 -> p63 -> p59.
 intros h0 h1.
 refine (add r54 r55 i9 i46 i45 h0 h1 _) ; finalize.
Qed.
Lemma l51 : s1 -> p59 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V))) * float<53,-1074,ne>(V - float<53,-1074,ne>(N * b))) - float<53,-1074,ne>(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V))) * float<53,-1074,ne>(V - float<53,-1074,ne>(N * b)) + (float<53,-1074,ne>(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V))) * float<53,-1074,ne>(V - float<53,-1074,ne>(N * b)) - (Mp + Ma * (MN / MV) * (MN / MV)) * (MV - MN * Mb)), [-2.23517e-08, 2.23887e-08]) *).
 intros h0.
 assert (h1 := l52 h0).
 assert (h2 := l54 h0).
 apply t100. exact h1. exact h2.
Qed.
Lemma t101 : p59 -> p58.
 intros h0.
 refine (sub_xals _ _ _ i45 h0) ; finalize.
Qed.
Lemma l50 : s1 -> p58 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V))) * float<53,-1074,ne>(V - float<53,-1074,ne>(N * b))) - (Mp + Ma * (MN / MV) * (MN / MV)) * (MV - MN * Mb), [-2.23517e-08, 2.23887e-08]) *).
 intros h0.
 assert (h1 := l51 h0).
 apply t101. exact h1.
Qed.
Definition f124 := Float2 (-1) (-85).
Definition f125 := Float2 (-1) (-112).
Definition i104 := makepairF f124 f125.
Notation p157 := (BND r52 i104). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(k * N) * T) - Mk * MN * MT, [-2.58494e-26, -1.92593e-34]) *)
Definition f126 := Float2 (-1) (-44).
Definition f127 := Float2 (-1) (-54).
Definition i105 := makepairF f126 f127.
Notation p158 := (REL r30 r45 i105). (* REL(float<53,-1074,ne>(float<53,-1074,ne>(k * N) * T), Mk * MN * MT, [-5.68434e-14, -5.55112e-17]) *)
Definition f128 := Float2 (-1) (-45).
Definition i106 := makepairF f128 f127.
Notation p159 := (REL r30 r31 i106). (* REL(float<53,-1074,ne>(float<53,-1074,ne>(k * N) * T), float<53,-1074,ne>(k * N) * T, [-2.84217e-14, -5.55112e-17]) *)
Notation p160 := (NZR r31). (* NZR(float<53,-1074,ne>(k * N) * T) *)
Notation p161 := (NZR r32). (* NZR(float<53,-1074,ne>(k * N)) *)
Notation p162 := (NZR r33). (* NZR(k * N) *)
Notation p163 := (NZR _k). (* NZR(k) *)
Notation p164 := (NZR _Mk). (* NZR(Mk) *)
Definition f129 := Float2 (1) (-76).
Definition i107 := makepairF f129 f15.
Notation p165 := (ABS _Mk i107). (* ABS(Mk, [1.32349e-23, 1]) *)
Notation p166 := (BND _Mk i107). (* BND(Mk, [1.32349e-23, 1]) *)
Lemma t102 : p166 -> p165.
 intros h0.
 refine (abs_of_bnd_p _Mk i107 i107 h0 _) ; finalize.
Qed.
Lemma l130 : s1 -> p165 (* ABS(Mk, [1.32349e-23, 1]) *).
 intros h0.
 assert (h1 := l45 h0).
 apply t102. refine (subset _Mk i40 i107 h1 _) ; finalize.
Qed.
Lemma t103 : p165 -> p164.
 intros h0.
 refine (nzr_of_abs _Mk i107 h0 _) ; finalize.
Qed.
Lemma l129 : s1 -> p164 (* NZR(Mk) *).
 intros h0.
 assert (h1 := l130 h0).
 apply t103. exact h1.
Qed.
Definition f130 := Float2 (1) (-54).
Definition f131 := Float2 (11) (-57).
Definition i108 := makepairF f130 f131.
Notation p167 := (REL _k _Mk i108). (* REL(k, Mk, [5.55112e-17, 7.63278e-17]) *)
Notation r95 := ((_k - _Mk)%R).
Notation r94 := ((r95 / _Mk)%R).
Notation p168 := (BND r94 i108). (* BND((k - Mk) / Mk, [5.55112e-17, 7.63278e-17]) *)
Definition f132 := Float2 (5) (-132).
Definition f133 := Float2 (11) (-133).
Definition i109 := makepairF f132 f133.
Notation p169 := (BND r95 i109). (* BND(k - Mk, [9.18355e-40, 1.01019e-39]) *)
Lemma t104 : p49 -> p50 -> p169.
 intros h0 h1.
 refine (sub _k _Mk i39 i40 i109 h0 h1 _) ; finalize.
Qed.
Lemma l133 : s1 -> p169 (* BND(k - Mk, [9.18355e-40, 1.01019e-39]) *).
 intros h0.
 assert (h1 := l44 h0).
 assert (h2 := l45 h0).
 apply t104. exact h1. exact h2.
Qed.
Definition f134 := Float2 (5) (-78).
Definition i110 := makepairF f129 f134.
Notation p170 := (BND _Mk i110). (* BND(Mk, [1.32349e-23, 1.65436e-23]) *)
Lemma t105 : p169 -> p170 -> p168.
 intros h0 h1.
 refine (div_pp r95 _Mk i109 i110 i108 h0 h1 _) ; finalize.
Qed.
Lemma l132 : s1 -> p168 (* BND((k - Mk) / Mk, [5.55112e-17, 7.63278e-17]) *).
 intros h0.
 assert (h1 := l133 h0).
 assert (h2 := l45 h0).
 apply t105. exact h1. refine (subset _Mk i40 i110 h2 _) ; finalize.
Qed.
Lemma t106 : p164 -> p168 -> p167.
 intros h0 h1.
 refine (rel_of_nzr_bnd _k _Mk i108 h0 h1) ; finalize.
Qed.
Lemma l131 : s1 -> p167 (* REL(k, Mk, [5.55112e-17, 7.63278e-17]) *).
 intros h0.
 assert (h1 := l129 h0).
 assert (h2 := l132 h0).
 apply t106. exact h1. exact h2.
Qed.
Definition f135 := Float2 (-1) (-1).
Definition i111 := makepairF f135 f15.
Notation p171 := (REL _k _Mk i111). (* REL(k, Mk, [-0.5, 1]) *)
Lemma t107 : p164 -> p171 -> p163.
 intros h0 h1.
 refine (nzr_of_nzr_rel _k _Mk i111 h0 h1 _) ; finalize.
Qed.
Lemma l128 : s1 -> p163 (* NZR(k) *).
 intros h0.
 assert (h1 := l129 h0).
 assert (h2 := l131 h0).
 apply t107. exact h1. refine (rel_subset _k _Mk i108 i111 h2 _) ; finalize.
Qed.
Notation p172 := (NZR _N). (* NZR(N) *)
Lemma t108 : p108 -> p172.
 intros h0.
 refine (nzr_of_abs _N i71 h0 _) ; finalize.
Qed.
Lemma l134 : s1 -> p172 (* NZR(N) *).
 intros h0.
 assert (h1 := l88 h0).
 apply t108. refine (abs_subset _N i4 i71 h1 _) ; finalize.
Qed.
Lemma t109 : p163 -> p172 -> p162.
 intros h0 h1.
 refine (mul_nzr _k _N h0 h1) ; finalize.
Qed.
Lemma l127 : s1 -> p162 (* NZR(k * N) *).
 intros h0.
 assert (h1 := l128 h0).
 assert (h2 := l134 h0).
 apply t109. exact h1. exact h2.
Qed.
Definition f136 := Float2 (-13) (-57).
Definition i112 := makepairF f128 f136.
Notation p173 := (REL r32 r33 i112). (* REL(float<53,-1074,ne>(k * N), k * N, [-2.84217e-14, -9.02056e-17]) *)
Notation r97 := ((r32 - r33)%R).
Notation r96 := ((r97 / r33)%R).
Notation p174 := (BND r96 i112). (* BND((float<53,-1074,ne>(k * N) - k * N) / (k * N), [-2.84217e-14, -9.02056e-17]) *)
Definition f137 := Float2 (-1) (-111).
Definition f138 := Float2 (-27) (-124).
Definition i113 := makepairF f137 f138.
Notation p175 := (BND r97 i113). (* BND(float<53,-1074,ne>(k * N) - k * N, [-3.85186e-34, -1.26953e-36]) *)
Definition f139 := Float2 (35843731077125) (-111).
Definition i114 := makepairF f139 f44.
Notation p176 := (BND r32 i114). (* BND(float<53,-1074,ne>(k * N), [1.38065e-20, 1.38065e-20]) *)
Definition f140 := Float2 (17921865538563) (-110).
Definition i115 := makepairF f45 f140.
Notation p177 := (BND r33 i115). (* BND(k * N, [1.38065e-20, 1.38065e-20]) *)
Lemma t110 : p176 -> p177 -> p175.
 intros h0 h1.
 refine (sub r32 r33 i114 i115 i113 h0 h1 _) ; finalize.
Qed.
Lemma l137 : s1 -> p175 (* BND(float<53,-1074,ne>(k * N) - k * N, [-3.85186e-34, -1.26953e-36]) *).
 intros h0.
 assert (h1 := l42 h0).
 assert (h2 := l43 h0).
 apply t110. refine (subset r32 i37 i114 h1 _) ; finalize. refine (subset r33 i38 i115 h2 _) ; finalize.
Qed.
Definition f141 := Float2 (1) (-66).
Definition f142 := Float2 (33) (-71).
Definition i116 := makepairF f141 f142.
Notation p178 := (BND r33 i116). (* BND(k * N, [1.35525e-20, 1.3976e-20]) *)
Lemma t111 : p175 -> p178 -> p174.
 intros h0 h1.
 refine (div_np r97 r33 i113 i116 i112 h0 h1 _) ; finalize.
Qed.
Lemma l136 : s1 -> p174 (* BND((float<53,-1074,ne>(k * N) - k * N) / (k * N), [-2.84217e-14, -9.02056e-17]) *).
 intros h0.
 assert (h1 := l137 h0).
 assert (h2 := l43 h0).
 apply t111. exact h1. refine (subset r33 i38 i116 h2 _) ; finalize.
Qed.
Lemma t112 : p162 -> p174 -> p173.
 intros h0 h1.
 refine (rel_of_nzr_bnd r32 r33 i112 h0 h1) ; finalize.
Qed.
Lemma l135 : s1 -> p173 (* REL(float<53,-1074,ne>(k * N), k * N, [-2.84217e-14, -9.02056e-17]) *).
 intros h0.
 assert (h1 := l127 h0).
 assert (h2 := l136 h0).
 apply t112. exact h1. exact h2.
Qed.
Notation p179 := (REL r32 r33 i111). (* REL(float<53,-1074,ne>(k * N), k * N, [-0.5, 1]) *)
Lemma t113 : p162 -> p179 -> p161.
 intros h0 h1.
 refine (nzr_of_nzr_rel r32 r33 i111 h0 h1 _) ; finalize.
Qed.
Lemma l126 : s1 -> p161 (* NZR(float<53,-1074,ne>(k * N)) *).
 intros h0.
 assert (h1 := l127 h0).
 assert (h2 := l135 h0).
 apply t113. exact h1. refine (rel_subset r32 r33 i112 i111 h2 _) ; finalize.
Qed.
Notation p180 := (NZR _T). (* NZR(T) *)
Notation p181 := (NZR _MT). (* NZR(MT) *)
Notation p182 := (ABS _MT i1). (* ABS(MT, [300, 300]) *)
Lemma t114 : p1 -> p182.
 intros h0.
 refine (abs_of_bnd_p _MT i1 i1 h0 _) ; finalize.
Qed.
Lemma l140 : s1 -> p182 (* ABS(MT, [300, 300]) *).
 intros h0.
 assert (h1 := l47 h0).
 apply t114. exact h1.
Qed.
Definition f143 := Float2 (1) (9).
Definition i117 := makepairF f15 f143.
Notation p183 := (ABS _MT i117). (* ABS(MT, [1, 512]) *)
Lemma t115 : p183 -> p181.
 intros h0.
 refine (nzr_of_abs _MT i117 h0 _) ; finalize.
Qed.
Lemma l139 : s1 -> p181 (* NZR(MT) *).
 intros h0.
 assert (h1 := l140 h0).
 apply t115. refine (abs_subset _MT i1 i117 h1 _) ; finalize.
Qed.
Notation p184 := (REL _T _MT i62). (* REL(T, MT, [0, 0]) *)
Notation p185 := (_T = _MT). (* EQL(T, MT) *)
Notation p186 := (FIX _MT (2)). (* FIX(MT, 2) *)
Lemma t116 : p182 -> p186.
 intros h0.
 refine (fix_of_singleton_bnd _MT i1 (2) h0 _) ; finalize.
Qed.
Lemma l143 : s1 -> p186 (* FIX(MT, 2) *).
 intros h0.
 assert (h1 := l140 h0).
 apply t116. exact h1.
Qed.
Notation p187 := (FLT _MT (7)). (* FLT(MT, 7) *)
Lemma t117 : p182 -> p187.
 intros h0.
 refine (flt_of_singleton_bnd _MT i1 (7) h0 _) ; finalize.
Qed.
Lemma l144 : s1 -> p187 (* FLT(MT, 7) *).
 intros h0.
 assert (h1 := l140 h0).
 apply t117. exact h1.
Qed.
Lemma t118 : p186 -> p187 -> p185.
 intros h0 h1.
 refine (float_of_fix_flt _ _MT (2) _ (7) _ h0 h1 _) ; finalize.
Qed.
Lemma l142 : s1 -> p185 (* EQL(T, MT) *).
 intros h0.
 assert (h1 := l143 h0).
 assert (h2 := l144 h0).
 apply t118. exact h1. exact h2.
Qed.
Notation p188 := (REL _MT _MT i62). (* REL(MT, MT, [0, 0]) *)
Lemma t119 : p188.
 refine (rel_refl _MT i62 _) ; finalize.
Qed.
Lemma l145 : s1 -> p188 (* REL(MT, MT, [0, 0]) *).
 intros h0.
 apply t119.
Qed.
Lemma t120 : p185 -> p188 -> p184.
 intros h0 h1.
 refine (rel_rewrite_1 _T _MT _MT i62 h0 h1) ; finalize.
Qed.
Lemma l141 : s1 -> p184 (* REL(T, MT, [0, 0]) *).
 intros h0.
 assert (h1 := l142 h0).
 assert (h2 := l145 h0).
 apply t120. exact h1. exact h2.
Qed.
Notation p189 := (REL _T _MT i111). (* REL(T, MT, [-0.5, 1]) *)
Lemma t121 : p181 -> p189 -> p180.
 intros h0 h1.
 refine (nzr_of_nzr_rel _T _MT i111 h0 h1 _) ; finalize.
Qed.
Lemma l138 : s1 -> p180 (* NZR(T) *).
 intros h0.
 assert (h1 := l139 h0).
 assert (h2 := l141 h0).
 apply t121. exact h1. refine (rel_subset _T _MT i62 i111 h2 _) ; finalize.
Qed.
Lemma t122 : p161 -> p180 -> p160.
 intros h0 h1.
 refine (mul_nzr r32 _T h0 h1) ; finalize.
Qed.
Lemma l125 : s1 -> p160 (* NZR(float<53,-1074,ne>(k * N) * T) *).
 intros h0.
 assert (h1 := l126 h0).
 assert (h2 := l138 h0).
 apply t122. exact h1. exact h2.
Qed.
Notation r99 := ((r30 - r31)%R).
Notation r98 := ((r99 / r31)%R).
Notation p190 := (BND r98 i106). (* BND((float<53,-1074,ne>(float<53,-1074,ne>(k * N) * T) - float<53,-1074,ne>(k * N) * T) / (float<53,-1074,ne>(k * N) * T), [-2.84217e-14, -5.55112e-17]) *)
Definition f144 := Float2 (-1) (-103).
Definition f145 := Float2 (-3) (-113).
Definition i118 := makepairF f144 f145.
Notation p191 := (BND r99 i118). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(k * N) * T) - float<53,-1074,ne>(k * N) * T, [-9.86076e-32, -2.88889e-34]) *)
Definition f146 := Float2 (42004372356007) (-103).
Definition i119 := makepairF f42 f146.
Notation p192 := (BND r31 i119). (* BND(float<53,-1074,ne>(k * N) * T, [4.14195e-18, 4.14195e-18]) *)
Lemma t123 : p45 -> p192 -> p191.
 intros h0 h1.
 refine (sub r30 r31 i35 i119 i118 h0 h1 _) ; finalize.
Qed.
Lemma l147 : s1 -> p191 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(k * N) * T) - float<53,-1074,ne>(k * N) * T, [-9.86076e-32, -2.88889e-34]) *).
 intros h0.
 assert (h1 := l40 h0).
 assert (h2 := l41 h0).
 apply t123. exact h1. refine (subset r31 i36 i119 h2 _) ; finalize.
Qed.
Definition f147 := Float2 (3) (-59).
Definition i120 := makepairF f39 f147.
Notation p193 := (BND r31 i120). (* BND(float<53,-1074,ne>(k * N) * T, [3.46945e-18, 5.20417e-18]) *)
Lemma t124 : p191 -> p193 -> p190.
 intros h0 h1.
 refine (div_np r99 r31 i118 i120 i106 h0 h1 _) ; finalize.
Qed.
Lemma l146 : s1 -> p190 (* BND((float<53,-1074,ne>(float<53,-1074,ne>(k * N) * T) - float<53,-1074,ne>(k * N) * T) / (float<53,-1074,ne>(k * N) * T), [-2.84217e-14, -5.55112e-17]) *).
 intros h0.
 assert (h1 := l147 h0).
 assert (h2 := l41 h0).
 apply t124. exact h1. refine (subset r31 i36 i120 h2 _) ; finalize.
Qed.
Lemma t125 : p160 -> p190 -> p159.
 intros h0 h1.
 refine (rel_of_nzr_bnd r30 r31 i106 h0 h1) ; finalize.
Qed.
Lemma l124 : s1 -> p159 (* REL(float<53,-1074,ne>(float<53,-1074,ne>(k * N) * T), float<53,-1074,ne>(k * N) * T, [-2.84217e-14, -5.55112e-17]) *).
 intros h0.
 assert (h1 := l125 h0).
 assert (h2 := l146 h0).
 apply t125. exact h1. exact h2.
Qed.
Definition f148 := Float2 (-1) (-56).
Definition i121 := makepairF f128 f148.
Notation p194 := (REL r31 r45 i121). (* REL(float<53,-1074,ne>(k * N) * T, Mk * MN * MT, [-2.84217e-14, -1.38778e-17]) *)
Notation p195 := (REL r32 r46 i121). (* REL(float<53,-1074,ne>(k * N), Mk * MN, [-2.84217e-14, -1.38778e-17]) *)
Notation p196 := (REL r33 r46 i108). (* REL(k * N, Mk * MN, [5.55112e-17, 7.63278e-17]) *)
Lemma t126 : p167 -> p111 -> p196.
 intros h0 h1.
 refine (mul_rr _k _Mk _N _MN i108 i62 i108 h0 h1 _) ; finalize.
Qed.
Lemma l150 : s1 -> p196 (* REL(k * N, Mk * MN, [5.55112e-17, 7.63278e-17]) *).
 intros h0.
 assert (h1 := l131 h0).
 assert (h2 := l92 h0).
 apply t126. exact h1. exact h2.
Qed.
Lemma t127 : p173 -> p196 -> p195.
 intros h0 h1.
 refine (compose r32 r33 r46 i112 i108 i121 h0 h1 _) ; finalize.
Qed.
Lemma l149 : s1 -> p195 (* REL(float<53,-1074,ne>(k * N), Mk * MN, [-2.84217e-14, -1.38778e-17]) *).
 intros h0.
 assert (h1 := l135 h0).
 assert (h2 := l150 h0).
 apply t127. exact h1. exact h2.
Qed.
Lemma t128 : p195 -> p184 -> p194.
 intros h0 h1.
 refine (mul_rr r32 r46 _T _MT i121 i62 i121 h0 h1 _) ; finalize.
Qed.
Lemma l148 : s1 -> p194 (* REL(float<53,-1074,ne>(k * N) * T, Mk * MN * MT, [-2.84217e-14, -1.38778e-17]) *).
 intros h0.
 assert (h1 := l149 h0).
 assert (h2 := l141 h0).
 apply t128. exact h1. exact h2.
Qed.
Lemma t129 : p159 -> p194 -> p158.
 intros h0 h1.
 refine (compose r30 r31 r45 i106 i121 i105 h0 h1 _) ; finalize.
Qed.
Lemma l123 : s1 -> p158 (* REL(float<53,-1074,ne>(float<53,-1074,ne>(k * N) * T), Mk * MN * MT, [-5.68434e-14, -5.55112e-17]) *).
 intros h0.
 assert (h1 := l124 h0).
 assert (h2 := l148 h0).
 apply t129. exact h1. exact h2.
Qed.
Definition f149 := Float2 (1) (-41).
Definition i122 := makepairF f39 f149.
Notation p197 := (BND r45 i122). (* BND(Mk * MN * MT, [3.46945e-18, 4.54747e-13]) *)
Definition f150 := Float2 (1) (-50).
Definition i123 := makepairF f141 f150.
Notation p198 := (BND r46 i123). (* BND(Mk * MN, [1.35525e-20, 8.88178e-16]) *)
Definition f151 := Float2 (133) (-83).
Definition f152 := Float2 (1) (-60).
Definition i124 := makepairF f151 f152.
Notation p199 := (BND _Mk i124). (* BND(Mk, [1.37519e-23, 8.67362e-19]) *)
Definition f153 := Float2 (31) (5).
Definition i125 := makepairF f153 f89.
Notation p200 := (BND _MN i125). (* BND(MN, [992, 1024]) *)
Lemma t130 : p199 -> p200 -> p198.
 intros h0 h1.
 refine (mul_pp _Mk _MN i124 i125 i123 h0 h1 _) ; finalize.
Qed.
Lemma l152 : s1 -> p198 (* BND(Mk * MN, [1.35525e-20, 8.88178e-16]) *).
 intros h0.
 assert (h1 := l45 h0).
 assert (h2 := l30 h0).
 apply t130. refine (subset _Mk i40 i124 h1 _) ; finalize. refine (subset _MN i4 i125 h2 _) ; finalize.
Qed.
Definition f154 := Float2 (1) (8).
Definition i126 := makepairF f154 f143.
Notation p201 := (BND _MT i126). (* BND(MT, [256, 512]) *)
Lemma t131 : p198 -> p201 -> p197.
 intros h0 h1.
 refine (mul_pp r46 _MT i123 i126 i122 h0 h1 _) ; finalize.
Qed.
Lemma l151 : s1 -> p197 (* BND(Mk * MN * MT, [3.46945e-18, 4.54747e-13]) *).
 intros h0.
 assert (h1 := l152 h0).
 assert (h2 := l47 h0).
 apply t131. exact h1. refine (subset _MT i1 i126 h2 _) ; finalize.
Qed.
Lemma t132 : p158 -> p197 -> p157.
 intros h0 h1.
 refine (error_of_rel_np r30 r45 i105 i122 i104 h0 h1 _) ; finalize.
Qed.
Lemma l122 : s1 -> p157 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(k * N) * T) - Mk * MN * MT, [-2.58494e-26, -1.92593e-34]) *).
 intros h0.
 assert (h1 := l123 h0).
 assert (h2 := l151 h0).
 apply t132. exact h1. exact h2.
Qed.
Lemma t133 : p58 -> p157 -> p57.
 intros h0 h1.
 refine (sub r51 r52 i45 i104 i44 h0 h1 _) ; finalize.
Qed.
Lemma l49 : s1 -> p57 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V))) * float<53,-1074,ne>(V - float<53,-1074,ne>(N * b))) - (Mp + Ma * (MN / MV) * (MN / MV)) * (MV - MN * Mb) - (float<53,-1074,ne>(float<53,-1074,ne>(k * N) * T) - Mk * MN * MT), [-2.23517e-08, 2.23887e-08]) *).
 intros h0.
 assert (h1 := l50 h0).
 assert (h2 := l122 h0).
 apply t133. exact h1. exact h2.
Qed.
Lemma t134 : p57 -> p56.
 intros h0.
 refine (sub_mibs _ _ _ _ i44 h0) ; finalize.
Qed.
Lemma l48 : s1 -> p56 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V))) * float<53,-1074,ne>(V - float<53,-1074,ne>(N * b))) - float<53,-1074,ne>(float<53,-1074,ne>(k * N) * T) - Mres, [-2.23517e-08, 2.23887e-08]) *).
 intros h0.
 assert (h1 := l49 h0).
 apply t134. exact h1.
Qed.
Lemma t135 : p11 -> p56 -> p10.
 intros h0 h1.
 refine (add r48 r49 i9 i44 i8 h0 h1 _) ; finalize.
Qed.
Lemma l6 : s1 -> p10 (* BND(res - (float<53,-1074,ne>(float<53,-1074,ne>(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V))) * float<53,-1074,ne>(V - float<53,-1074,ne>(N * b))) - float<53,-1074,ne>(float<53,-1074,ne>(k * N) * T)) + (float<53,-1074,ne>(float<53,-1074,ne>(p + float<53,-1074,ne>(float<53,-1074,ne>(a * float<53,-1074,ne>(N / V)) * float<53,-1074,ne>(N / V))) * float<53,-1074,ne>(V - float<53,-1074,ne>(N * b))) - float<53,-1074,ne>(float<53,-1074,ne>(k * N) * T) - Mres), [-2.6077e-08, 2.6114e-08]) *).
 intros h0.
 assert (h1 := l7 h0).
 assert (h2 := l48 h0).
 apply t135. exact h1. exact h2.
Qed.
Lemma t136 : p10 -> p9.
 intros h0.
 refine (sub_xals _ _ _ i8 h0) ; finalize.
Qed.
Lemma l5 : s1 -> p9 (* BND(res - Mres, [-2.6077e-08, 2.6114e-08]) *).
 intros h0.
 assert (h1 := l6 h0).
 apply t136. exact h1.
Qed.
Lemma t137 : p9 -> p8.
 intros h0.
 refine (abs_of_bnd_o r8 i8 i7 h0 _) ; finalize.
Qed.
Lemma l4 : s1 -> p8 (* ABS(res - Mres, [0, 2.6114e-08]) *).
 intros h0.
 assert (h1 := l5 h0).
 apply t137. exact h1.
Qed.
Lemma t138 : p8 -> p7.
 intros h0.
 refine (uabs_of_abs r8 i7 h0) ; finalize.
Qed.
Lemma l3 : s1 -> p7 (* BND(|res - Mres|, [0, 2.6114e-08]) *).
 intros h0.
 assert (h1 := l4 h0).
 apply t138. exact h1.
Qed.
Lemma l1 : s1 -> False.
 intros h0.
 assert (h1 := l2 h0).
 assert (h2 := l3 h0).
 refine (simplify (Tatom false (Abnd 0%nat i7)) Tfalse (Abnd 0%nat i7) (List.cons r7 List.nil) h2 h1 _) ; finalize.
Qed.
End Generated_by_Gappa.
Require Import Flocq.Core.Fcore.
Require Import Gappa.Gappa_library.
Section Generated_by_Gappa.
Variable _Mx1 : R.
Definition f1 := Float2 (-15) (0).
Definition f2 := Float2 (15) (0).
Definition i1 := makepairF f1 f2.
Notation p1 := (BND _Mx1 i1). (* BND(Mx1, [-15, 15]) *)
Variable _Mx2 : R.
Notation p2 := (BND _Mx2 i1). (* BND(Mx2, [-15, 15]) *)
Definition s3 := (p1 /\ p2).
Variable _Mx3 : R.
Notation p3 := (BND _Mx3 i1). (* BND(Mx3, [-15, 15]) *)
Definition s2 := (s3 /\ p3).
Notation _x1 := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  _Mx1).
Notation r14 := ((- _x1)%R).
Notation _x2 := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  _Mx2).
Notation r13 := ((r14 * _x2)%R).
Notation r12 := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  r13).
Notation r21 := (Float1 (2)).
Notation r20 := ((r21 * _x2)%R).
Notation r19 := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  r20).
Notation _x3 := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  _Mx3).
Notation r18 := ((r19 * _x3)%R).
Notation r17 := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  r18).
Notation r11 := ((r12 - r17)%R).
Notation r10 := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  r11).
Notation r9 := ((r10 - _x1)%R).
Notation r8 := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  r9).
Notation r7 := ((r8 - _x3)%R).
Notation _r1 := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  r7).
Notation r27 := ((- _Mx1)%R).
Notation r26 := ((r27 * _Mx2)%R).
Notation r29 := ((r21 * _Mx2)%R).
Notation r28 := ((r29 * _Mx3)%R).
Notation r25 := ((r26 - r28)%R).
Notation r24 := ((r25 - _Mx1)%R).
Notation _Mr1 := ((r24 - _Mx3)%R).
Notation r5 := ((_r1 - _Mr1)%R).
Notation r4 := ((Rabs r5)%R).
Definition f3 := Float2 (0) (0).
Definition f4 := Float2 (83) (-48).
Definition i2 := makepairF f3 f4.
Notation p4 := (BND r4 i2). (* BND(|r1 - Mr1|, [0, 2.94875e-13]) *)
Definition s4 := (not p4).
Definition s1 := (s2 /\ s4).
Lemma l2 : s1 -> s4.
 intros h0.
 assert (h1 := h0).
 exact (proj2 h1).
Qed.
Notation p5 := (ABS r5 i2). (* ABS(r1 - Mr1, [0, 2.94875e-13]) *)
Definition f5 := Float2 (-83) (-48).
Definition i3 := makepairF f5 f4.
Notation p6 := (BND r5 i3). (* BND(r1 - Mr1, [-2.94875e-13, 2.94875e-13]) *)
Notation r31 := ((_r1 - r7)%R).
Notation r32 := ((r7 - _Mr1)%R).
Notation r30 := ((r31 + r32)%R).
Notation p7 := (BND r30 i3). (* BND(r1 - (float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3)) - x1) - x3) + (float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3)) - x1) - x3 - Mr1), [-2.94875e-13, 2.94875e-13]) *)
Definition f6 := Float2 (-1) (-44).
Definition f7 := Float2 (1) (-44).
Definition i4 := makepairF f6 f7.
Notation p8 := (BND r31 i4). (* BND(r1 - (float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3)) - x1) - x3), [-5.68434e-14, 5.68434e-14]) *)
Definition f8 := Float2 (1) (10).
Definition i5 := makepairF f3 f8.
Notation p9 := (ABS r7 i5). (* ABS(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3)) - x1) - x3, [0, 1024]) *)
Definition f9 := Float2 (3) (8).
Definition i6 := makepairF f3 f9.
Notation p10 := (ABS r8 i6). (* ABS(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3)) - x1), [0, 768]) *)
Definition f10 := Float2 (-3) (8).
Definition i7 := makepairF f10 f9.
Notation p11 := (BND r8 i7). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3)) - x1), [-768, 768]) *)
Notation p12 := (BND r9 i7). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3)) - x1, [-768, 768]) *)
Definition f11 := Float2 (-11) (6).
Definition f12 := Float2 (11) (6).
Definition i8 := makepairF f11 f12.
Notation p13 := (BND r10 i8). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3)), [-704, 704]) *)
Notation p14 := (BND r11 i8). (* BND(float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3), [-704, 704]) *)
Definition f13 := Float2 (-15) (4).
Definition f14 := Float2 (15) (4).
Definition i9 := makepairF f13 f14.
Notation p15 := (BND r12 i9). (* BND(float<53,-1074,ne>(-x1 * x2), [-240, 240]) *)
Notation p16 := (BND r13 i9). (* BND(-x1 * x2, [-240, 240]) *)
Notation p17 := (BND r14 i1). (* BND(-x1, [-15, 15]) *)
Notation p18 := (BND _x1 i1). (* BND(x1, [-15, 15]) *)
Lemma l20 : s1 -> s2.
 intros h0.
 assert (h1 := h0).
 exact (proj1 h1).
Qed.
Lemma l19 : s1 -> s3.
 intros h0.
 assert (h1 := l20 h0).
 exact (proj1 h1).
Qed.
Lemma l18 : s1 -> p1 (* BND(Mx1, [-15, 15]) *).
 intros h0.
 assert (h1 := l19 h0).
 exact (proj1 h1).
Qed.
Lemma t1 : p1 -> p18.
 intros h0.
 refine (float_round_ne _ _ _Mx1 i1 i1 h0 _) ; finalize.
Qed.
Lemma l17 : s1 -> p18 (* BND(x1, [-15, 15]) *).
 intros h0.
 assert (h1 := l18 h0).
 apply t1. exact h1.
Qed.
Lemma t2 : p18 -> p17.
 intros h0.
 refine (neg _x1 i1 i1 h0 _) ; finalize.
Qed.
Lemma l16 : s1 -> p17 (* BND(-x1, [-15, 15]) *).
 intros h0.
 assert (h1 := l17 h0).
 apply t2. exact h1.
Qed.
Notation p19 := (BND _x2 i1). (* BND(x2, [-15, 15]) *)
Lemma l22 : s1 -> p2 (* BND(Mx2, [-15, 15]) *).
 intros h0.
 assert (h1 := l19 h0).
 exact (proj2 h1).
Qed.
Lemma t3 : p2 -> p19.
 intros h0.
 refine (float_round_ne _ _ _Mx2 i1 i1 h0 _) ; finalize.
Qed.
Lemma l21 : s1 -> p19 (* BND(x2, [-15, 15]) *).
 intros h0.
 assert (h1 := l22 h0).
 apply t3. exact h1.
Qed.
Definition f15 := Float2 (-1) (4).
Definition f16 := Float2 (1) (4).
Definition i10 := makepairF f15 f16.
Notation p20 := (BND r14 i10). (* BND(-x1, [-16, 16]) *)
Lemma t4 : p20 -> p19 -> p16.
 intros h0 h1.
 refine (mul_oo r14 _x2 i10 i1 i9 h0 h1 _) ; finalize.
Qed.
Lemma l15 : s1 -> p16 (* BND(-x1 * x2, [-240, 240]) *).
 intros h0.
 assert (h1 := l16 h0).
 assert (h2 := l21 h0).
 apply t4. refine (subset r14 i1 i10 h1 _) ; finalize. exact h2.
Qed.
Lemma t5 : p16 -> p15.
 intros h0.
 refine (float_round_ne _ _ r13 i9 i9 h0 _) ; finalize.
Qed.
Lemma l14 : s1 -> p15 (* BND(float<53,-1074,ne>(-x1 * x2), [-240, 240]) *).
 intros h0.
 assert (h1 := l15 h0).
 apply t5. exact h1.
Qed.
Definition f17 := Float2 (-29) (4).
Definition f18 := Float2 (29) (4).
Definition i11 := makepairF f17 f18.
Notation p21 := (BND r17 i11). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3), [-464, 464]) *)
Notation p22 := (BND r18 i11). (* BND(float<53,-1074,ne>(2 * x2) * x3, [-464, 464]) *)
Definition f19 := Float2 (-15) (1).
Definition f20 := Float2 (15) (1).
Definition i12 := makepairF f19 f20.
Notation p23 := (BND r19 i12). (* BND(float<53,-1074,ne>(2 * x2), [-30, 30]) *)
Notation p24 := (BND r20 i12). (* BND(2 * x2, [-30, 30]) *)
Definition f21 := Float2 (1) (1).
Definition i13 := makepairF f21 f21.
Notation p25 := (BND r21 i13). (* BND(2, [2, 2]) *)
Lemma t6 : p25.
 refine (constant1 _ i13 _) ; finalize.
Qed.
Lemma l27 : s1 -> p25 (* BND(2, [2, 2]) *).
 intros h0.
 apply t6.
Qed.
Definition f22 := Float2 (1) (0).
Definition i14 := makepairF f22 f21.
Notation p26 := (BND r21 i14). (* BND(2, [1, 2]) *)
Lemma t7 : p26 -> p19 -> p24.
 intros h0 h1.
 refine (mul_po r21 _x2 i14 i1 i12 h0 h1 _) ; finalize.
Qed.
Lemma l26 : s1 -> p24 (* BND(2 * x2, [-30, 30]) *).
 intros h0.
 assert (h1 := l27 h0).
 assert (h2 := l21 h0).
 apply t7. refine (subset r21 i13 i14 h1 _) ; finalize. exact h2.
Qed.
Lemma t8 : p24 -> p23.
 intros h0.
 refine (float_round_ne _ _ r20 i12 i12 h0 _) ; finalize.
Qed.
Lemma l25 : s1 -> p23 (* BND(float<53,-1074,ne>(2 * x2), [-30, 30]) *).
 intros h0.
 assert (h1 := l26 h0).
 apply t8. exact h1.
Qed.
Notation p27 := (BND _x3 i1). (* BND(x3, [-15, 15]) *)
Lemma l29 : s1 -> p3 (* BND(Mx3, [-15, 15]) *).
 intros h0.
 assert (h1 := l20 h0).
 exact (proj2 h1).
Qed.
Lemma t9 : p3 -> p27.
 intros h0.
 refine (float_round_ne _ _ _Mx3 i1 i1 h0 _) ; finalize.
Qed.
Lemma l28 : s1 -> p27 (* BND(x3, [-15, 15]) *).
 intros h0.
 assert (h1 := l29 h0).
 apply t9. exact h1.
Qed.
Lemma t10 : p23 -> p27 -> p22.
 intros h0 h1.
 refine (mul_oo r19 _x3 i12 i1 i11 h0 h1 _) ; finalize.
Qed.
Lemma l24 : s1 -> p22 (* BND(float<53,-1074,ne>(2 * x2) * x3, [-464, 464]) *).
 intros h0.
 assert (h1 := l25 h0).
 assert (h2 := l28 h0).
 apply t10. exact h1. exact h2.
Qed.
Lemma t11 : p22 -> p21.
 intros h0.
 refine (float_round_ne _ _ r18 i11 i11 h0 _) ; finalize.
Qed.
Lemma l23 : s1 -> p21 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3), [-464, 464]) *).
 intros h0.
 assert (h1 := l24 h0).
 apply t11. exact h1.
Qed.
Lemma t12 : p15 -> p21 -> p14.
 intros h0 h1.
 refine (sub r12 r17 i9 i11 i8 h0 h1 _) ; finalize.
Qed.
Lemma l13 : s1 -> p14 (* BND(float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3), [-704, 704]) *).
 intros h0.
 assert (h1 := l14 h0).
 assert (h2 := l23 h0).
 apply t12. exact h1. exact h2.
Qed.
Lemma t13 : p14 -> p13.
 intros h0.
 refine (float_round_ne _ _ r11 i8 i8 h0 _) ; finalize.
Qed.
Lemma l12 : s1 -> p13 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3)), [-704, 704]) *).
 intros h0.
 assert (h1 := l13 h0).
 apply t13. exact h1.
Qed.
Notation p28 := (BND _x1 i10). (* BND(x1, [-16, 16]) *)
Lemma t14 : p13 -> p28 -> p12.
 intros h0 h1.
 refine (sub r10 _x1 i8 i10 i7 h0 h1 _) ; finalize.
Qed.
Lemma l11 : s1 -> p12 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3)) - x1, [-768, 768]) *).
 intros h0.
 assert (h1 := l12 h0).
 assert (h2 := l17 h0).
 apply t14. exact h1. refine (subset _x1 i1 i10 h2 _) ; finalize.
Qed.
Lemma t15 : p12 -> p11.
 intros h0.
 refine (float_round_ne _ _ r9 i7 i7 h0 _) ; finalize.
Qed.
Lemma l10 : s1 -> p11 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3)) - x1), [-768, 768]) *).
 intros h0.
 assert (h1 := l11 h0).
 apply t15. exact h1.
Qed.
Lemma t16 : p11 -> p10.
 intros h0.
 refine (abs_of_bnd_o r8 i7 i6 h0 _) ; finalize.
Qed.
Lemma l9 : s1 -> p10 (* ABS(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3)) - x1), [0, 768]) *).
 intros h0.
 assert (h1 := l10 h0).
 apply t16. exact h1.
Qed.
Definition i15 := makepairF f3 f16.
Notation p29 := (ABS _x3 i15). (* ABS(x3, [0, 16]) *)
Notation p30 := (BND _x3 i10). (* BND(x3, [-16, 16]) *)
Lemma t17 : p30 -> p29.
 intros h0.
 refine (abs_of_bnd_o _x3 i10 i15 h0 _) ; finalize.
Qed.
Lemma l30 : s1 -> p29 (* ABS(x3, [0, 16]) *).
 intros h0.
 assert (h1 := l28 h0).
 apply t17. refine (subset _x3 i1 i10 h1 _) ; finalize.
Qed.
Lemma t18 : p10 -> p29 -> p9.
 intros h0 h1.
 refine (sub_aa_o r8 _x3 i6 i15 i5 h0 h1 _) ; finalize.
Qed.
Lemma l8 : s1 -> p9 (* ABS(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3)) - x1) - x3, [0, 1024]) *).
 intros h0.
 assert (h1 := l9 h0).
 assert (h2 := l30 h0).
 apply t18. exact h1. exact h2.
Qed.
Lemma t19 : p9 -> p8.
 intros h0.
 refine (float_absolute_wide_ne _ _ r7 i5 i4 h0 _) ; finalize.
Qed.
Lemma l7 : s1 -> p8 (* BND(r1 - (float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3)) - x1) - x3), [-5.68434e-14, 5.68434e-14]) *).
 intros h0.
 assert (h1 := l8 h0).
 apply t19. exact h1.
Qed.
Definition f23 := Float2 (-67) (-48).
Definition f24 := Float2 (67) (-48).
Definition i16 := makepairF f23 f24.
Notation p31 := (BND r32 i16). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3)) - x1) - x3 - Mr1, [-2.38032e-13, 2.38032e-13]) *)
Notation r34 := ((r8 - r24)%R).
Notation r35 := ((_x3 - _Mx3)%R).
Notation r33 := ((r34 - r35)%R).
Notation p32 := (BND r33 i16). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3)) - x1) - (-Mx1 * Mx2 - 2 * Mx2 * Mx3 - Mx1) - (x3 - Mx3), [-2.38032e-13, 2.38032e-13]) *)
Definition f25 := Float2 (-267) (-50).
Definition f26 := Float2 (267) (-50).
Definition i17 := makepairF f25 f26.
Notation p33 := (BND r34 i17). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3)) - x1) - (-Mx1 * Mx2 - 2 * Mx2 * Mx3 - Mx1), [-2.37144e-13, 2.37144e-13]) *)
Notation r37 := ((r8 - r9)%R).
Notation r38 := ((r9 - r24)%R).
Notation r36 := ((r37 + r38)%R).
Notation p34 := (BND r36 i17). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3)) - x1) - (float<53,-1074,ne>(float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3)) - x1) + (float<53,-1074,ne>(float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3)) - x1 - (-Mx1 * Mx2 - 2 * Mx2 * Mx3 - Mx1)), [-2.37144e-13, 2.37144e-13]) *)
Notation p35 := (BND r37 i4). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3)) - x1) - (float<53,-1074,ne>(float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3)) - x1), [-5.68434e-14, 5.68434e-14]) *)
Notation p36 := (ABS r9 i5). (* ABS(float<53,-1074,ne>(float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3)) - x1, [0, 1024]) *)
Notation p37 := (ABS r10 i6). (* ABS(float<53,-1074,ne>(float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3)), [0, 768]) *)
Notation p38 := (BND r10 i7). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3)), [-768, 768]) *)
Lemma t20 : p38 -> p37.
 intros h0.
 refine (abs_of_bnd_o r10 i7 i6 h0 _) ; finalize.
Qed.
Lemma l37 : s1 -> p37 (* ABS(float<53,-1074,ne>(float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3)), [0, 768]) *).
 intros h0.
 assert (h1 := l12 h0).
 apply t20. refine (subset r10 i8 i7 h1 _) ; finalize.
Qed.
Notation p39 := (ABS _x1 i15). (* ABS(x1, [0, 16]) *)
Lemma t21 : p28 -> p39.
 intros h0.
 refine (abs_of_bnd_o _x1 i10 i15 h0 _) ; finalize.
Qed.
Lemma l38 : s1 -> p39 (* ABS(x1, [0, 16]) *).
 intros h0.
 assert (h1 := l17 h0).
 apply t21. refine (subset _x1 i1 i10 h1 _) ; finalize.
Qed.
Lemma t22 : p37 -> p39 -> p36.
 intros h0 h1.
 refine (sub_aa_o r10 _x1 i6 i15 i5 h0 h1 _) ; finalize.
Qed.
Lemma l36 : s1 -> p36 (* ABS(float<53,-1074,ne>(float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3)) - x1, [0, 1024]) *).
 intros h0.
 assert (h1 := l37 h0).
 assert (h2 := l38 h0).
 apply t22. exact h1. exact h2.
Qed.
Lemma t23 : p36 -> p35.
 intros h0.
 refine (float_absolute_wide_ne _ _ r9 i5 i4 h0 _) ; finalize.
Qed.
Lemma l35 : s1 -> p35 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3)) - x1) - (float<53,-1074,ne>(float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3)) - x1), [-5.68434e-14, 5.68434e-14]) *).
 intros h0.
 assert (h1 := l36 h0).
 apply t23. exact h1.
Qed.
Definition f27 := Float2 (-203) (-50).
Definition f28 := Float2 (203) (-50).
Definition i18 := makepairF f27 f28.
Notation p40 := (BND r38 i18). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3)) - x1 - (-Mx1 * Mx2 - 2 * Mx2 * Mx3 - Mx1), [-1.803e-13, 1.803e-13]) *)
Notation r40 := ((r10 - r25)%R).
Notation r41 := ((_x1 - _Mx1)%R).
Notation r39 := ((r40 - r41)%R).
Notation p41 := (BND r39 i18). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3)) - (-Mx1 * Mx2 - 2 * Mx2 * Mx3) - (x1 - Mx1), [-1.803e-13, 1.803e-13]) *)
Definition f29 := Float2 (-101) (-49).
Definition f30 := Float2 (101) (-49).
Definition i19 := makepairF f29 f30.
Notation p42 := (BND r40 i19). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3)) - (-Mx1 * Mx2 - 2 * Mx2 * Mx3), [-1.79412e-13, 1.79412e-13]) *)
Notation r43 := ((r10 - r11)%R).
Notation r44 := ((r11 - r25)%R).
Notation r42 := ((r43 + r44)%R).
Notation p43 := (BND r42 i19). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3)) - (float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3)) + (float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3) - (-Mx1 * Mx2 - 2 * Mx2 * Mx3)), [-1.79412e-13, 1.79412e-13]) *)
Notation p44 := (BND r43 i4). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3)) - (float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3)), [-5.68434e-14, 5.68434e-14]) *)
Notation p45 := (ABS r11 i5). (* ABS(float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3), [0, 1024]) *)
Definition f31 := Float2 (1) (8).
Definition i20 := makepairF f3 f31.
Notation p46 := (ABS r12 i20). (* ABS(float<53,-1074,ne>(-x1 * x2), [0, 256]) *)
Definition f32 := Float2 (-1) (8).
Definition i21 := makepairF f32 f31.
Notation p47 := (BND r12 i21). (* BND(float<53,-1074,ne>(-x1 * x2), [-256, 256]) *)
Lemma t24 : p47 -> p46.
 intros h0.
 refine (abs_of_bnd_o r12 i21 i20 h0 _) ; finalize.
Qed.
Lemma l45 : s1 -> p46 (* ABS(float<53,-1074,ne>(-x1 * x2), [0, 256]) *).
 intros h0.
 assert (h1 := l14 h0).
 apply t24. refine (subset r12 i9 i21 h1 _) ; finalize.
Qed.
Definition f33 := Float2 (1) (9).
Definition i22 := makepairF f3 f33.
Notation p48 := (ABS r17 i22). (* ABS(float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3), [0, 512]) *)
Definition f34 := Float2 (-1) (9).
Definition i23 := makepairF f34 f33.
Notation p49 := (BND r17 i23). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3), [-512, 512]) *)
Lemma t25 : p49 -> p48.
 intros h0.
 refine (abs_of_bnd_o r17 i23 i22 h0 _) ; finalize.
Qed.
Lemma l46 : s1 -> p48 (* ABS(float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3), [0, 512]) *).
 intros h0.
 assert (h1 := l23 h0).
 apply t25. refine (subset r17 i11 i23 h1 _) ; finalize.
Qed.
Lemma t26 : p46 -> p48 -> p45.
 intros h0 h1.
 refine (sub_aa_o r12 r17 i20 i22 i5 h0 h1 _) ; finalize.
Qed.
Lemma l44 : s1 -> p45 (* ABS(float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3), [0, 1024]) *).
 intros h0.
 assert (h1 := l45 h0).
 assert (h2 := l46 h0).
 apply t26. exact h1. exact h2.
Qed.
Lemma t27 : p45 -> p44.
 intros h0.
 refine (float_absolute_wide_ne _ _ r11 i5 i4 h0 _) ; finalize.
Qed.
Lemma l43 : s1 -> p44 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3)) - (float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3)), [-5.68434e-14, 5.68434e-14]) *).
 intros h0.
 assert (h1 := l44 h0).
 apply t27. exact h1.
Qed.
Definition f35 := Float2 (-69) (-49).
Definition f36 := Float2 (69) (-49).
Definition i24 := makepairF f35 f36.
Notation p50 := (BND r44 i24). (* BND(float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3) - (-Mx1 * Mx2 - 2 * Mx2 * Mx3), [-1.22569e-13, 1.22569e-13]) *)
Notation r46 := ((r12 - r26)%R).
Notation r47 := ((r17 - r28)%R).
Notation r45 := ((r46 - r47)%R).
Notation p51 := (BND r45 i24). (* BND(float<53,-1074,ne>(-x1 * x2) - -Mx1 * Mx2 - (float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3) - 2 * Mx2 * Mx3), [-1.22569e-13, 1.22569e-13]) *)
Definition f37 := Float2 (-23) (-49).
Definition f38 := Float2 (23) (-49).
Definition i25 := makepairF f37 f38.
Notation p52 := (BND r46 i25). (* BND(float<53,-1074,ne>(-x1 * x2) - -Mx1 * Mx2, [-4.08562e-14, 4.08562e-14]) *)
Notation r49 := ((r12 - r13)%R).
Notation r50 := ((r13 - r26)%R).
Notation r48 := ((r49 + r50)%R).
Notation p53 := (BND r48 i25). (* BND(float<53,-1074,ne>(-x1 * x2) - -x1 * x2 + (-x1 * x2 - -Mx1 * Mx2), [-4.08562e-14, 4.08562e-14]) *)
Definition f39 := Float2 (-1) (-46).
Definition f40 := Float2 (1) (-46).
Definition i26 := makepairF f39 f40.
Notation p54 := (BND r49 i26). (* BND(float<53,-1074,ne>(-x1 * x2) - -x1 * x2, [-1.42109e-14, 1.42109e-14]) *)
Notation p55 := (ABS r13 i20). (* ABS(-x1 * x2, [0, 256]) *)
Notation p56 := (ABS r14 i15). (* ABS(-x1, [0, 16]) *)
Lemma t28 : p39 -> p56.
 intros h0.
 refine (neg_a _x1 i15 h0) ; finalize.
Qed.
Lemma l53 : s1 -> p56 (* ABS(-x1, [0, 16]) *).
 intros h0.
 assert (h1 := l38 h0).
 apply t28. exact h1.
Qed.
Notation p57 := (ABS _x2 i15). (* ABS(x2, [0, 16]) *)
Notation p58 := (BND _x2 i10). (* BND(x2, [-16, 16]) *)
Lemma t29 : p58 -> p57.
 intros h0.
 refine (abs_of_bnd_o _x2 i10 i15 h0 _) ; finalize.
Qed.
Lemma l54 : s1 -> p57 (* ABS(x2, [0, 16]) *).
 intros h0.
 assert (h1 := l21 h0).
 apply t29. refine (subset _x2 i1 i10 h1 _) ; finalize.
Qed.
Lemma t30 : p56 -> p57 -> p55.
 intros h0 h1.
 refine (mul_aa r14 _x2 i15 i15 i20 h0 h1 _) ; finalize.
Qed.
Lemma l52 : s1 -> p55 (* ABS(-x1 * x2, [0, 256]) *).
 intros h0.
 assert (h1 := l53 h0).
 assert (h2 := l54 h0).
 apply t30. exact h1. exact h2.
Qed.
Lemma t31 : p55 -> p54.
 intros h0.
 refine (float_absolute_wide_ne _ _ r13 i20 i26 h0 _) ; finalize.
Qed.
Lemma l51 : s1 -> p54 (* BND(float<53,-1074,ne>(-x1 * x2) - -x1 * x2, [-1.42109e-14, 1.42109e-14]) *).
 intros h0.
 assert (h1 := l52 h0).
 apply t31. exact h1.
Qed.
Definition f41 := Float2 (-15) (-49).
Definition f42 := Float2 (15) (-49).
Definition i27 := makepairF f41 f42.
Notation p59 := (BND r50 i27). (* BND(-x1 * x2 - -Mx1 * Mx2, [-2.66454e-14, 2.66454e-14]) *)
Notation r53 := ((_x2 - _Mx2)%R).
Notation r52 := ((r14 * r53)%R).
Notation r55 := ((r14 - r27)%R).
Notation r54 := ((r55 * _Mx2)%R).
Notation r51 := ((r52 + r54)%R).
Notation p60 := (BND r51 i27). (* BND(-x1 * (x2 - Mx2) + (-x1 - -Mx1) * Mx2, [-2.66454e-14, 2.66454e-14]) *)
Definition f43 := Float2 (-15) (-50).
Definition f44 := Float2 (15) (-50).
Definition i28 := makepairF f43 f44.
Notation p61 := (BND r52 i28). (* BND(-x1 * (x2 - Mx2), [-1.33227e-14, 1.33227e-14]) *)
Definition f45 := Float2 (-1) (-50).
Definition f46 := Float2 (1) (-50).
Definition i29 := makepairF f45 f46.
Notation p62 := (BND r53 i29). (* BND(x2 - Mx2, [-8.88178e-16, 8.88178e-16]) *)
Notation p63 := (ABS _Mx2 i15). (* ABS(Mx2, [0, 16]) *)
Notation p64 := (BND _Mx2 i10). (* BND(Mx2, [-16, 16]) *)
Lemma t32 : p64 -> p63.
 intros h0.
 refine (abs_of_bnd_o _Mx2 i10 i15 h0 _) ; finalize.
Qed.
Lemma l59 : s1 -> p63 (* ABS(Mx2, [0, 16]) *).
 intros h0.
 assert (h1 := l22 h0).
 apply t32. refine (subset _Mx2 i1 i10 h1 _) ; finalize.
Qed.
Lemma t33 : p63 -> p62.
 intros h0.
 refine (float_absolute_wide_ne _ _ _Mx2 i15 i29 h0 _) ; finalize.
Qed.
Lemma l58 : s1 -> p62 (* BND(x2 - Mx2, [-8.88178e-16, 8.88178e-16]) *).
 intros h0.
 assert (h1 := l59 h0).
 apply t33. exact h1.
Qed.
Lemma t34 : p17 -> p62 -> p61.
 intros h0 h1.
 refine (mul_oo r14 r53 i1 i29 i28 h0 h1 _) ; finalize.
Qed.
Lemma l57 : s1 -> p61 (* BND(-x1 * (x2 - Mx2), [-1.33227e-14, 1.33227e-14]) *).
 intros h0.
 assert (h1 := l16 h0).
 assert (h2 := l58 h0).
 apply t34. exact h1. exact h2.
Qed.
Notation p65 := (BND r54 i28). (* BND((-x1 - -Mx1) * Mx2, [-1.33227e-14, 1.33227e-14]) *)
Notation p66 := (BND r55 i29). (* BND(-x1 - -Mx1, [-8.88178e-16, 8.88178e-16]) *)
Notation r56 := ((- r41)%R).
Notation p67 := (BND r56 i29). (* BND(-(x1 - Mx1), [-8.88178e-16, 8.88178e-16]) *)
Notation p68 := (BND r41 i29). (* BND(x1 - Mx1, [-8.88178e-16, 8.88178e-16]) *)
Notation p69 := (ABS _Mx1 i15). (* ABS(Mx1, [0, 16]) *)
Notation p70 := (BND _Mx1 i10). (* BND(Mx1, [-16, 16]) *)
Lemma t35 : p70 -> p69.
 intros h0.
 refine (abs_of_bnd_o _Mx1 i10 i15 h0 _) ; finalize.
Qed.
Lemma l64 : s1 -> p69 (* ABS(Mx1, [0, 16]) *).
 intros h0.
 assert (h1 := l18 h0).
 apply t35. refine (subset _Mx1 i1 i10 h1 _) ; finalize.
Qed.
Lemma t36 : p69 -> p68.
 intros h0.
 refine (float_absolute_wide_ne _ _ _Mx1 i15 i29 h0 _) ; finalize.
Qed.
Lemma l63 : s1 -> p68 (* BND(x1 - Mx1, [-8.88178e-16, 8.88178e-16]) *).
 intros h0.
 assert (h1 := l64 h0).
 apply t36. exact h1.
Qed.
Lemma t37 : p68 -> p67.
 intros h0.
 refine (neg r41 i29 i29 h0 _) ; finalize.
Qed.
Lemma l62 : s1 -> p67 (* BND(-(x1 - Mx1), [-8.88178e-16, 8.88178e-16]) *).
 intros h0.
 assert (h1 := l63 h0).
 apply t37. exact h1.
Qed.
Lemma t38 : p67 -> p66.
 intros h0.
 refine (opp_mibs _ _ i29 h0) ; finalize.
Qed.
Lemma l61 : s1 -> p66 (* BND(-x1 - -Mx1, [-8.88178e-16, 8.88178e-16]) *).
 intros h0.
 assert (h1 := l62 h0).
 apply t38. exact h1.
Qed.
Lemma t39 : p66 -> p2 -> p65.
 intros h0 h1.
 refine (mul_oo r55 _Mx2 i29 i1 i28 h0 h1 _) ; finalize.
Qed.
Lemma l60 : s1 -> p65 (* BND((-x1 - -Mx1) * Mx2, [-1.33227e-14, 1.33227e-14]) *).
 intros h0.
 assert (h1 := l61 h0).
 assert (h2 := l22 h0).
 apply t39. exact h1. exact h2.
Qed.
Lemma t40 : p61 -> p65 -> p60.
 intros h0 h1.
 refine (add r52 r54 i28 i28 i27 h0 h1 _) ; finalize.
Qed.
Lemma l56 : s1 -> p60 (* BND(-x1 * (x2 - Mx2) + (-x1 - -Mx1) * Mx2, [-2.66454e-14, 2.66454e-14]) *).
 intros h0.
 assert (h1 := l57 h0).
 assert (h2 := l60 h0).
 apply t40. exact h1. exact h2.
Qed.
Lemma t41 : p60 -> p59.
 intros h0.
 refine (mul_mars _ _ _ _ i27 h0) ; finalize.
Qed.
Lemma l55 : s1 -> p59 (* BND(-x1 * x2 - -Mx1 * Mx2, [-2.66454e-14, 2.66454e-14]) *).
 intros h0.
 assert (h1 := l56 h0).
 apply t41. exact h1.
Qed.
Lemma t42 : p54 -> p59 -> p53.
 intros h0 h1.
 refine (add r49 r50 i26 i27 i25 h0 h1 _) ; finalize.
Qed.
Lemma l50 : s1 -> p53 (* BND(float<53,-1074,ne>(-x1 * x2) - -x1 * x2 + (-x1 * x2 - -Mx1 * Mx2), [-4.08562e-14, 4.08562e-14]) *).
 intros h0.
 assert (h1 := l51 h0).
 assert (h2 := l55 h0).
 apply t42. exact h1. exact h2.
Qed.
Lemma t43 : p53 -> p52.
 intros h0.
 refine (sub_xals _ _ _ i25 h0) ; finalize.
Qed.
Lemma l49 : s1 -> p52 (* BND(float<53,-1074,ne>(-x1 * x2) - -Mx1 * Mx2, [-4.08562e-14, 4.08562e-14]) *).
 intros h0.
 assert (h1 := l50 h0).
 apply t43. exact h1.
Qed.
Definition f47 := Float2 (-23) (-48).
Definition f48 := Float2 (23) (-48).
Definition i30 := makepairF f47 f48.
Notation p71 := (BND r47 i30). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3) - 2 * Mx2 * Mx3, [-8.17124e-14, 8.17124e-14]) *)
Notation r58 := ((r17 - r18)%R).
Notation r59 := ((r18 - r28)%R).
Notation r57 := ((r58 + r59)%R).
Notation p72 := (BND r57 i30). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3) - float<53,-1074,ne>(2 * x2) * x3 + (float<53,-1074,ne>(2 * x2) * x3 - 2 * Mx2 * Mx3), [-8.17124e-14, 8.17124e-14]) *)
Definition f49 := Float2 (-1) (-45).
Definition f50 := Float2 (1) (-45).
Definition i31 := makepairF f49 f50.
Notation p73 := (BND r58 i31). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3) - float<53,-1074,ne>(2 * x2) * x3, [-2.84217e-14, 2.84217e-14]) *)
Notation p74 := (ABS r18 i22). (* ABS(float<53,-1074,ne>(2 * x2) * x3, [0, 512]) *)
Definition f51 := Float2 (1) (5).
Definition i32 := makepairF f3 f51.
Notation p75 := (ABS r19 i32). (* ABS(float<53,-1074,ne>(2 * x2), [0, 32]) *)
Definition f52 := Float2 (-1) (5).
Definition i33 := makepairF f52 f51.
Notation p76 := (BND r19 i33). (* BND(float<53,-1074,ne>(2 * x2), [-32, 32]) *)
Lemma t44 : p76 -> p75.
 intros h0.
 refine (abs_of_bnd_o r19 i33 i32 h0 _) ; finalize.
Qed.
Lemma l69 : s1 -> p75 (* ABS(float<53,-1074,ne>(2 * x2), [0, 32]) *).
 intros h0.
 assert (h1 := l25 h0).
 apply t44. refine (subset r19 i12 i33 h1 _) ; finalize.
Qed.
Lemma t45 : p75 -> p29 -> p74.
 intros h0 h1.
 refine (mul_aa r19 _x3 i32 i15 i22 h0 h1 _) ; finalize.
Qed.
Lemma l68 : s1 -> p74 (* ABS(float<53,-1074,ne>(2 * x2) * x3, [0, 512]) *).
 intros h0.
 assert (h1 := l69 h0).
 assert (h2 := l30 h0).
 apply t45. exact h1. exact h2.
Qed.
Lemma t46 : p74 -> p73.
 intros h0.
 refine (float_absolute_wide_ne _ _ r18 i22 i31 h0 _) ; finalize.
Qed.
Lemma l67 : s1 -> p73 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3) - float<53,-1074,ne>(2 * x2) * x3, [-2.84217e-14, 2.84217e-14]) *).
 intros h0.
 assert (h1 := l68 h0).
 apply t46. exact h1.
Qed.
Definition f53 := Float2 (-15) (-48).
Definition f54 := Float2 (15) (-48).
Definition i34 := makepairF f53 f54.
Notation p77 := (BND r59 i34). (* BND(float<53,-1074,ne>(2 * x2) * x3 - 2 * Mx2 * Mx3, [-5.32907e-14, 5.32907e-14]) *)
Notation r61 := ((r19 * r35)%R).
Notation r63 := ((r19 - r29)%R).
Notation r62 := ((r63 * _Mx3)%R).
Notation r60 := ((r61 + r62)%R).
Notation p78 := (BND r60 i34). (* BND(float<53,-1074,ne>(2 * x2) * (x3 - Mx3) + (float<53,-1074,ne>(2 * x2) - 2 * Mx2) * Mx3, [-5.32907e-14, 5.32907e-14]) *)
Notation p79 := (BND r61 i27). (* BND(float<53,-1074,ne>(2 * x2) * (x3 - Mx3), [-2.66454e-14, 2.66454e-14]) *)
Notation p80 := (BND r35 i29). (* BND(x3 - Mx3, [-8.88178e-16, 8.88178e-16]) *)
Notation p81 := (ABS _Mx3 i15). (* ABS(Mx3, [0, 16]) *)
Notation p82 := (BND _Mx3 i10). (* BND(Mx3, [-16, 16]) *)
Lemma t47 : p82 -> p81.
 intros h0.
 refine (abs_of_bnd_o _Mx3 i10 i15 h0 _) ; finalize.
Qed.
Lemma l74 : s1 -> p81 (* ABS(Mx3, [0, 16]) *).
 intros h0.
 assert (h1 := l29 h0).
 apply t47. refine (subset _Mx3 i1 i10 h1 _) ; finalize.
Qed.
Lemma t48 : p81 -> p80.
 intros h0.
 refine (float_absolute_wide_ne _ _ _Mx3 i15 i29 h0 _) ; finalize.
Qed.
Lemma l73 : s1 -> p80 (* BND(x3 - Mx3, [-8.88178e-16, 8.88178e-16]) *).
 intros h0.
 assert (h1 := l74 h0).
 apply t48. exact h1.
Qed.
Lemma t49 : p23 -> p80 -> p79.
 intros h0 h1.
 refine (mul_oo r19 r35 i12 i29 i27 h0 h1 _) ; finalize.
Qed.
Lemma l72 : s1 -> p79 (* BND(float<53,-1074,ne>(2 * x2) * (x3 - Mx3), [-2.66454e-14, 2.66454e-14]) *).
 intros h0.
 assert (h1 := l25 h0).
 assert (h2 := l73 h0).
 apply t49. exact h1. exact h2.
Qed.
Notation p83 := (BND r62 i27). (* BND((float<53,-1074,ne>(2 * x2) - 2 * Mx2) * Mx3, [-2.66454e-14, 2.66454e-14]) *)
Definition f55 := Float2 (-1) (-49).
Definition f56 := Float2 (1) (-49).
Definition i35 := makepairF f55 f56.
Notation p84 := (BND r63 i35). (* BND(float<53,-1074,ne>(2 * x2) - 2 * Mx2, [-1.77636e-15, 1.77636e-15]) *)
Notation r65 := ((r19 - r20)%R).
Notation r66 := ((r20 - r29)%R).
Notation r64 := ((r65 + r66)%R).
Notation p85 := (BND r64 i35). (* BND(float<53,-1074,ne>(2 * x2) - 2 * x2 + (2 * x2 - 2 * Mx2), [-1.77636e-15, 1.77636e-15]) *)
Definition i36 := makepairF f3 f3.
Notation p86 := (BND r65 i36). (* BND(float<53,-1074,ne>(2 * x2) - 2 * x2, [0, 0]) *)
Notation p87 := (r19 = r20). (* EQL(float<53,-1074,ne>(2 * x2), 2 * x2) *)
Notation p88 := (FIX r20 (-1073)). (* FIX(2 * x2, -1073) *)
Notation p89 := (FIX r21 (1)). (* FIX(2, 1) *)
Notation p90 := (ABS r21 i13). (* ABS(2, [2, 2]) *)
Lemma t50 : p25 -> p90.
 intros h0.
 refine (abs_of_bnd_p r21 i13 i13 h0 _) ; finalize.
Qed.
Lemma l82 : s1 -> p90 (* ABS(2, [2, 2]) *).
 intros h0.
 assert (h1 := l27 h0).
 apply t50. exact h1.
Qed.
Lemma t51 : p90 -> p89.
 intros h0.
 refine (fix_of_singleton_bnd r21 i13 (1) h0 _) ; finalize.
Qed.
Lemma l81 : s1 -> p89 (* FIX(2, 1) *).
 intros h0.
 assert (h1 := l82 h0).
 apply t51. exact h1.
Qed.
Notation p91 := (FIX _x2 (-1074)). (* FIX(x2, -1074) *)
Lemma t52 : p91.
 refine (fix_of_float _ _ _ _ (-1074) _) ; finalize.
Qed.
Lemma l83 : s1 -> p91 (* FIX(x2, -1074) *).
 intros h0.
 apply t52.
Qed.
Lemma t53 : p89 -> p91 -> p88.
 intros h0 h1.
 refine (mul_fix r21 _x2 (1) (-1074) (-1073) h0 h1 _) ; finalize.
Qed.
Lemma l80 : s1 -> p88 (* FIX(2 * x2, -1073) *).
 intros h0.
 assert (h1 := l81 h0).
 assert (h2 := l83 h0).
 apply t53. exact h1. exact h2.
Qed.
Notation p92 := (FLT r20 (53)). (* FLT(2 * x2, 53) *)
Notation p93 := (FLT r21 (1)). (* FLT(2, 1) *)
Lemma t54 : p90 -> p93.
 intros h0.
 refine (flt_of_singleton_bnd r21 i13 (1) h0 _) ; finalize.
Qed.
Lemma l85 : s1 -> p93 (* FLT(2, 1) *).
 intros h0.
 assert (h1 := l82 h0).
 apply t54. exact h1.
Qed.
Notation p94 := (FLT _x2 (53)). (* FLT(x2, 53) *)
Lemma t55 : p94.
 refine (flt_of_float _ _ _ (53) _ _) ; finalize.
Qed.
Lemma l86 : s1 -> p94 (* FLT(x2, 53) *).
 intros h0.
 apply t55.
Qed.
Lemma t56 : p93 -> p94 -> p92.
 intros h0 h1.
 refine (mul_flt r21 _x2 (1) (53) (53) h0 h1 _) ; finalize.
Qed.
Lemma l84 : s1 -> p92 (* FLT(2 * x2, 53) *).
 intros h0.
 assert (h1 := l85 h0).
 assert (h2 := l86 h0).
 apply t56. exact h1. exact h2.
Qed.
Lemma t57 : p88 -> p92 -> p87.
 intros h0 h1.
 refine (float_of_fix_flt _ r20 (-1073) _ (53) _ h0 h1 _) ; finalize.
Qed.
Lemma l79 : s1 -> p87 (* EQL(float<53,-1074,ne>(2 * x2), 2 * x2) *).
 intros h0.
 assert (h1 := l80 h0).
 assert (h2 := l84 h0).
 apply t57. exact h1. exact h2.
Qed.
Lemma t58 : p87 -> p86.
 intros h0.
 refine (sub_of_eql r19 r20 i36 h0 _) ; finalize.
Qed.
Lemma l78 : s1 -> p86 (* BND(float<53,-1074,ne>(2 * x2) - 2 * x2, [0, 0]) *).
 intros h0.
 assert (h1 := l79 h0).
 apply t58. exact h1.
Qed.
Notation p95 := (BND r66 i35). (* BND(2 * x2 - 2 * Mx2, [-1.77636e-15, 1.77636e-15]) *)
Notation r67 := ((r21 * r53)%R).
Notation p96 := (BND r67 i35). (* BND(2 * (x2 - Mx2), [-1.77636e-15, 1.77636e-15]) *)
Lemma t59 : p26 -> p62 -> p96.
 intros h0 h1.
 refine (mul_po r21 r53 i14 i29 i35 h0 h1 _) ; finalize.
Qed.
Lemma l88 : s1 -> p96 (* BND(2 * (x2 - Mx2), [-1.77636e-15, 1.77636e-15]) *).
 intros h0.
 assert (h1 := l27 h0).
 assert (h2 := l58 h0).
 apply t59. refine (subset r21 i13 i14 h1 _) ; finalize. exact h2.
Qed.
Lemma t60 : p96 -> p95.
 intros h0.
 refine (mul_fils _ _ _ i35 h0) ; finalize.
Qed.
Lemma l87 : s1 -> p95 (* BND(2 * x2 - 2 * Mx2, [-1.77636e-15, 1.77636e-15]) *).
 intros h0.
 assert (h1 := l88 h0).
 apply t60. exact h1.
Qed.
Lemma t61 : p86 -> p95 -> p85.
 intros h0 h1.
 refine (add r65 r66 i36 i35 i35 h0 h1 _) ; finalize.
Qed.
Lemma l77 : s1 -> p85 (* BND(float<53,-1074,ne>(2 * x2) - 2 * x2 + (2 * x2 - 2 * Mx2), [-1.77636e-15, 1.77636e-15]) *).
 intros h0.
 assert (h1 := l78 h0).
 assert (h2 := l87 h0).
 apply t61. exact h1. exact h2.
Qed.
Lemma t62 : p85 -> p84.
 intros h0.
 refine (sub_xals _ _ _ i35 h0) ; finalize.
Qed.
Lemma l76 : s1 -> p84 (* BND(float<53,-1074,ne>(2 * x2) - 2 * Mx2, [-1.77636e-15, 1.77636e-15]) *).
 intros h0.
 assert (h1 := l77 h0).
 apply t62. exact h1.
Qed.
Lemma t63 : p84 -> p3 -> p83.
 intros h0 h1.
 refine (mul_oo r63 _Mx3 i35 i1 i27 h0 h1 _) ; finalize.
Qed.
Lemma l75 : s1 -> p83 (* BND((float<53,-1074,ne>(2 * x2) - 2 * Mx2) * Mx3, [-2.66454e-14, 2.66454e-14]) *).
 intros h0.
 assert (h1 := l76 h0).
 assert (h2 := l29 h0).
 apply t63. exact h1. exact h2.
Qed.
Lemma t64 : p79 -> p83 -> p78.
 intros h0 h1.
 refine (add r61 r62 i27 i27 i34 h0 h1 _) ; finalize.
Qed.
Lemma l71 : s1 -> p78 (* BND(float<53,-1074,ne>(2 * x2) * (x3 - Mx3) + (float<53,-1074,ne>(2 * x2) - 2 * Mx2) * Mx3, [-5.32907e-14, 5.32907e-14]) *).
 intros h0.
 assert (h1 := l72 h0).
 assert (h2 := l75 h0).
 apply t64. exact h1. exact h2.
Qed.
Lemma t65 : p78 -> p77.
 intros h0.
 refine (mul_mars _ _ _ _ i34 h0) ; finalize.
Qed.
Lemma l70 : s1 -> p77 (* BND(float<53,-1074,ne>(2 * x2) * x3 - 2 * Mx2 * Mx3, [-5.32907e-14, 5.32907e-14]) *).
 intros h0.
 assert (h1 := l71 h0).
 apply t65. exact h1.
Qed.
Lemma t66 : p73 -> p77 -> p72.
 intros h0 h1.
 refine (add r58 r59 i31 i34 i30 h0 h1 _) ; finalize.
Qed.
Lemma l66 : s1 -> p72 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3) - float<53,-1074,ne>(2 * x2) * x3 + (float<53,-1074,ne>(2 * x2) * x3 - 2 * Mx2 * Mx3), [-8.17124e-14, 8.17124e-14]) *).
 intros h0.
 assert (h1 := l67 h0).
 assert (h2 := l70 h0).
 apply t66. exact h1. exact h2.
Qed.
Lemma t67 : p72 -> p71.
 intros h0.
 refine (sub_xals _ _ _ i30 h0) ; finalize.
Qed.
Lemma l65 : s1 -> p71 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3) - 2 * Mx2 * Mx3, [-8.17124e-14, 8.17124e-14]) *).
 intros h0.
 assert (h1 := l66 h0).
 apply t67. exact h1.
Qed.
Lemma t68 : p52 -> p71 -> p51.
 intros h0 h1.
 refine (sub r46 r47 i25 i30 i24 h0 h1 _) ; finalize.
Qed.
Lemma l48 : s1 -> p51 (* BND(float<53,-1074,ne>(-x1 * x2) - -Mx1 * Mx2 - (float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3) - 2 * Mx2 * Mx3), [-1.22569e-13, 1.22569e-13]) *).
 intros h0.
 assert (h1 := l49 h0).
 assert (h2 := l65 h0).
 apply t68. exact h1. exact h2.
Qed.
Lemma t69 : p51 -> p50.
 intros h0.
 refine (sub_mibs _ _ _ _ i24 h0) ; finalize.
Qed.
Lemma l47 : s1 -> p50 (* BND(float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3) - (-Mx1 * Mx2 - 2 * Mx2 * Mx3), [-1.22569e-13, 1.22569e-13]) *).
 intros h0.
 assert (h1 := l48 h0).
 apply t69. exact h1.
Qed.
Lemma t70 : p44 -> p50 -> p43.
 intros h0 h1.
 refine (add r43 r44 i4 i24 i19 h0 h1 _) ; finalize.
Qed.
Lemma l42 : s1 -> p43 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3)) - (float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3)) + (float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3) - (-Mx1 * Mx2 - 2 * Mx2 * Mx3)), [-1.79412e-13, 1.79412e-13]) *).
 intros h0.
 assert (h1 := l43 h0).
 assert (h2 := l47 h0).
 apply t70. exact h1. exact h2.
Qed.
Lemma t71 : p43 -> p42.
 intros h0.
 refine (sub_xals _ _ _ i19 h0) ; finalize.
Qed.
Lemma l41 : s1 -> p42 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3)) - (-Mx1 * Mx2 - 2 * Mx2 * Mx3), [-1.79412e-13, 1.79412e-13]) *).
 intros h0.
 assert (h1 := l42 h0).
 apply t71. exact h1.
Qed.
Lemma t72 : p42 -> p68 -> p41.
 intros h0 h1.
 refine (sub r40 r41 i19 i29 i18 h0 h1 _) ; finalize.
Qed.
Lemma l40 : s1 -> p41 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3)) - (-Mx1 * Mx2 - 2 * Mx2 * Mx3) - (x1 - Mx1), [-1.803e-13, 1.803e-13]) *).
 intros h0.
 assert (h1 := l41 h0).
 assert (h2 := l63 h0).
 apply t72. exact h1. exact h2.
Qed.
Lemma t73 : p41 -> p40.
 intros h0.
 refine (sub_mibs _ _ _ _ i18 h0) ; finalize.
Qed.
Lemma l39 : s1 -> p40 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3)) - x1 - (-Mx1 * Mx2 - 2 * Mx2 * Mx3 - Mx1), [-1.803e-13, 1.803e-13]) *).
 intros h0.
 assert (h1 := l40 h0).
 apply t73. exact h1.
Qed.
Lemma t74 : p35 -> p40 -> p34.
 intros h0 h1.
 refine (add r37 r38 i4 i18 i17 h0 h1 _) ; finalize.
Qed.
Lemma l34 : s1 -> p34 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3)) - x1) - (float<53,-1074,ne>(float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3)) - x1) + (float<53,-1074,ne>(float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3)) - x1 - (-Mx1 * Mx2 - 2 * Mx2 * Mx3 - Mx1)), [-2.37144e-13, 2.37144e-13]) *).
 intros h0.
 assert (h1 := l35 h0).
 assert (h2 := l39 h0).
 apply t74. exact h1. exact h2.
Qed.
Lemma t75 : p34 -> p33.
 intros h0.
 refine (sub_xals _ _ _ i17 h0) ; finalize.
Qed.
Lemma l33 : s1 -> p33 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3)) - x1) - (-Mx1 * Mx2 - 2 * Mx2 * Mx3 - Mx1), [-2.37144e-13, 2.37144e-13]) *).
 intros h0.
 assert (h1 := l34 h0).
 apply t75. exact h1.
Qed.
Lemma t76 : p33 -> p80 -> p32.
 intros h0 h1.
 refine (sub r34 r35 i17 i29 i16 h0 h1 _) ; finalize.
Qed.
Lemma l32 : s1 -> p32 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3)) - x1) - (-Mx1 * Mx2 - 2 * Mx2 * Mx3 - Mx1) - (x3 - Mx3), [-2.38032e-13, 2.38032e-13]) *).
 intros h0.
 assert (h1 := l33 h0).
 assert (h2 := l73 h0).
 apply t76. exact h1. exact h2.
Qed.
Lemma t77 : p32 -> p31.
 intros h0.
 refine (sub_mibs _ _ _ _ i16 h0) ; finalize.
Qed.
Lemma l31 : s1 -> p31 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3)) - x1) - x3 - Mr1, [-2.38032e-13, 2.38032e-13]) *).
 intros h0.
 assert (h1 := l32 h0).
 apply t77. exact h1.
Qed.
Lemma t78 : p8 -> p31 -> p7.
 intros h0 h1.
 refine (add r31 r32 i4 i16 i3 h0 h1 _) ; finalize.
Qed.
Lemma l6 : s1 -> p7 (* BND(r1 - (float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3)) - x1) - x3) + (float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(-x1 * x2) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x2) * x3)) - x1) - x3 - Mr1), [-2.94875e-13, 2.94875e-13]) *).
 intros h0.
 assert (h1 := l7 h0).
 assert (h2 := l31 h0).
 apply t78. exact h1. exact h2.
Qed.
Lemma t79 : p7 -> p6.
 intros h0.
 refine (sub_xals _ _ _ i3 h0) ; finalize.
Qed.
Lemma l5 : s1 -> p6 (* BND(r1 - Mr1, [-2.94875e-13, 2.94875e-13]) *).
 intros h0.
 assert (h1 := l6 h0).
 apply t79. exact h1.
Qed.
Lemma t80 : p6 -> p5.
 intros h0.
 refine (abs_of_bnd_o r5 i3 i2 h0 _) ; finalize.
Qed.
Lemma l4 : s1 -> p5 (* ABS(r1 - Mr1, [0, 2.94875e-13]) *).
 intros h0.
 assert (h1 := l5 h0).
 apply t80. exact h1.
Qed.
Lemma t81 : p5 -> p4.
 intros h0.
 refine (uabs_of_abs r5 i2 h0) ; finalize.
Qed.
Lemma l3 : s1 -> p4 (* BND(|r1 - Mr1|, [0, 2.94875e-13]) *).
 intros h0.
 assert (h1 := l4 h0).
 apply t81. exact h1.
Qed.
Lemma l1 : s1 -> False.
 intros h0.
 assert (h1 := l2 h0).
 assert (h2 := l3 h0).
 refine (simplify (Tatom false (Abnd 0%nat i2)) Tfalse (Abnd 0%nat i2) (List.cons r4 List.nil) h2 h1 _) ; finalize.
Qed.
End Generated_by_Gappa.
Require Import Flocq.Core.Fcore.
Require Import Gappa.Gappa_library.
Section Generated_by_Gappa.
Variable _Mx1 : R.
Definition f1 := Float2 (-15) (0).
Definition f2 := Float2 (15) (0).
Definition i1 := makepairF f1 f2.
Notation p1 := (BND _Mx1 i1). (* BND(Mx1, [-15, 15]) *)
Variable _Mx2 : R.
Notation p2 := (BND _Mx2 i1). (* BND(Mx2, [-15, 15]) *)
Definition s3 := (p1 /\ p2).
Variable _Mx3 : R.
Notation p3 := (BND _Mx3 i1). (* BND(Mx3, [-15, 15]) *)
Definition s2 := (s3 /\ p3).
Notation r20 := (Float1 (2)).
Notation _x1 := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  _Mx1).
Notation r19 := ((r20 * _x1)%R).
Notation r18 := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  r19).
Notation _x2 := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  _Mx2).
Notation r17 := ((r18 * _x2)%R).
Notation r16 := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  r17).
Notation _x3 := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  _Mx3).
Notation r15 := ((r16 * _x3)%R).
Notation r14 := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  r15).
Notation r28 := (Float1 (3)).
Notation r27 := ((r28 * _x3)%R).
Notation r26 := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  r27).
Notation r25 := ((r26 * _x3)%R).
Notation r24 := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  r25).
Notation r13 := ((r14 + r24)%R).
Notation r12 := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  r13).
Notation r34 := ((_x2 * _x1)%R).
Notation r33 := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  r34).
Notation r32 := ((r33 * _x2)%R).
Notation r31 := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  r32).
Notation r30 := ((r31 * _x3)%R).
Notation r29 := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  r30).
Notation r11 := ((r12 - r29)%R).
Notation r10 := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  r11).
Notation r9 := ((r10 + r24)%R).
Notation r8 := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  r9).
Notation r7 := ((r8 - _x2)%R).
Notation _r2 := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  r7).
Notation r41 := ((r20 * _Mx1)%R).
Notation r40 := ((r41 * _Mx2)%R).
Notation r39 := ((r40 * _Mx3)%R).
Notation r43 := ((r28 * _Mx3)%R).
Notation r42 := ((r43 * _Mx3)%R).
Notation r38 := ((r39 + r42)%R).
Notation r46 := ((_Mx2 * _Mx1)%R).
Notation r45 := ((r46 * _Mx2)%R).
Notation r44 := ((r45 * _Mx3)%R).
Notation r37 := ((r38 - r44)%R).
Notation r36 := ((r37 + r42)%R).
Notation _Mr2 := ((r36 - _Mx2)%R).
Notation r5 := ((_r2 - _Mr2)%R).
Notation r4 := ((Rabs r5)%R).
Definition f3 := Float2 (0) (0).
Definition f4 := Float2 (40607) (-50).
Definition i2 := makepairF f3 f4.
Notation p4 := (BND r4 i2). (* BND(|r2 - Mr2|, [0, 3.60663e-11]) *)
Definition s4 := (not p4).
Definition s1 := (s2 /\ s4).
Lemma l2 : s1 -> s4.
 intros h0.
 assert (h1 := h0).
 exact (proj2 h1).
Qed.
Notation p5 := (ABS r5 i2). (* ABS(r2 - Mr2, [0, 3.60663e-11]) *)
Definition f5 := Float2 (-40607) (-50).
Definition i3 := makepairF f5 f4.
Notation p6 := (BND r5 i3). (* BND(r2 - Mr2, [-3.60663e-11, 3.60663e-11]) *)
Notation r48 := ((_r2 - r7)%R).
Notation r49 := ((r7 - _Mr2)%R).
Notation r47 := ((r48 + r49)%R).
Notation p7 := (BND r47 i3). (* BND(r2 - (float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3)) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - x2) + (float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3)) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - x2 - Mr2), [-3.60663e-11, 3.60663e-11]) *)
Definition f6 := Float2 (-1) (-38).
Definition f7 := Float2 (1) (-38).
Definition i4 := makepairF f6 f7.
Notation p8 := (BND r48 i4). (* BND(r2 - (float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3)) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - x2), [-3.63798e-12, 3.63798e-12]) *)
Definition f8 := Float2 (1) (16).
Definition i5 := makepairF f3 f8.
Notation p9 := (ABS r7 i5). (* ABS(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3)) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - x2, [0, 65536]) *)
Definition f9 := Float2 (15) (12).
Definition i6 := makepairF f3 f9.
Notation p10 := (ABS r8 i6). (* ABS(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3)) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)), [0, 61440]) *)
Definition f10 := Float2 (-15) (12).
Definition i7 := makepairF f10 f9.
Notation p11 := (BND r8 i7). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3)) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)), [-61440, 61440]) *)
Notation p12 := (BND r9 i7). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3)) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3), [-61440, 61440]) *)
Definition f11 := Float2 (-29) (11).
Definition f12 := Float2 (29) (11).
Definition i8 := makepairF f11 f12.
Notation p13 := (BND r10 i8). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3)), [-59392, 59392]) *)
Notation p14 := (BND r11 i8). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3), [-59392, 59392]) *)
Definition f13 := Float2 (-1) (13).
Definition f14 := Float2 (1) (13).
Definition i9 := makepairF f13 f14.
Notation p15 := (BND r12 i9). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)), [-8192, 8192]) *)
Notation p16 := (BND r13 i9). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3), [-8192, 8192]) *)
Definition f15 := Float2 (-7) (10).
Definition f16 := Float2 (7) (10).
Definition i10 := makepairF f15 f16.
Notation p17 := (BND r14 i10). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3), [-7168, 7168]) *)
Notation p18 := (BND r15 i10). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3, [-7168, 7168]) *)
Definition f17 := Float2 (-225) (1).
Definition f18 := Float2 (225) (1).
Definition i11 := makepairF f17 f18.
Notation p19 := (BND r16 i11). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2), [-450, 450]) *)
Notation p20 := (BND r17 i11). (* BND(float<53,-1074,ne>(2 * x1) * x2, [-450, 450]) *)
Definition f19 := Float2 (-15) (1).
Definition f20 := Float2 (15) (1).
Definition i12 := makepairF f19 f20.
Notation p21 := (BND r18 i12). (* BND(float<53,-1074,ne>(2 * x1), [-30, 30]) *)
Notation p22 := (BND r19 i12). (* BND(2 * x1, [-30, 30]) *)
Definition f21 := Float2 (1) (1).
Definition i13 := makepairF f21 f21.
Notation p23 := (BND r20 i13). (* BND(2, [2, 2]) *)
Lemma t1 : p23.
 refine (constant1 _ i13 _) ; finalize.
Qed.
Lemma l22 : s1 -> p23 (* BND(2, [2, 2]) *).
 intros h0.
 apply t1.
Qed.
Notation p24 := (BND _x1 i1). (* BND(x1, [-15, 15]) *)
Lemma l26 : s1 -> s2.
 intros h0.
 assert (h1 := h0).
 exact (proj1 h1).
Qed.
Lemma l25 : s1 -> s3.
 intros h0.
 assert (h1 := l26 h0).
 exact (proj1 h1).
Qed.
Lemma l24 : s1 -> p1 (* BND(Mx1, [-15, 15]) *).
 intros h0.
 assert (h1 := l25 h0).
 exact (proj1 h1).
Qed.
Lemma t2 : p1 -> p24.
 intros h0.
 refine (float_round_ne _ _ _Mx1 i1 i1 h0 _) ; finalize.
Qed.
Lemma l23 : s1 -> p24 (* BND(x1, [-15, 15]) *).
 intros h0.
 assert (h1 := l24 h0).
 apply t2. exact h1.
Qed.
Definition f22 := Float2 (1) (0).
Definition i14 := makepairF f22 f21.
Notation p25 := (BND r20 i14). (* BND(2, [1, 2]) *)
Lemma t3 : p25 -> p24 -> p22.
 intros h0 h1.
 refine (mul_po r20 _x1 i14 i1 i12 h0 h1 _) ; finalize.
Qed.
Lemma l21 : s1 -> p22 (* BND(2 * x1, [-30, 30]) *).
 intros h0.
 assert (h1 := l22 h0).
 assert (h2 := l23 h0).
 apply t3. refine (subset r20 i13 i14 h1 _) ; finalize. exact h2.
Qed.
Lemma t4 : p22 -> p21.
 intros h0.
 refine (float_round_ne _ _ r19 i12 i12 h0 _) ; finalize.
Qed.
Lemma l20 : s1 -> p21 (* BND(float<53,-1074,ne>(2 * x1), [-30, 30]) *).
 intros h0.
 assert (h1 := l21 h0).
 apply t4. exact h1.
Qed.
Notation p26 := (BND _x2 i1). (* BND(x2, [-15, 15]) *)
Lemma l28 : s1 -> p2 (* BND(Mx2, [-15, 15]) *).
 intros h0.
 assert (h1 := l25 h0).
 exact (proj2 h1).
Qed.
Lemma t5 : p2 -> p26.
 intros h0.
 refine (float_round_ne _ _ _Mx2 i1 i1 h0 _) ; finalize.
Qed.
Lemma l27 : s1 -> p26 (* BND(x2, [-15, 15]) *).
 intros h0.
 assert (h1 := l28 h0).
 apply t5. exact h1.
Qed.
Lemma t6 : p21 -> p26 -> p20.
 intros h0 h1.
 refine (mul_oo r18 _x2 i12 i1 i11 h0 h1 _) ; finalize.
Qed.
Lemma l19 : s1 -> p20 (* BND(float<53,-1074,ne>(2 * x1) * x2, [-450, 450]) *).
 intros h0.
 assert (h1 := l20 h0).
 assert (h2 := l27 h0).
 apply t6. exact h1. exact h2.
Qed.
Lemma t7 : p20 -> p19.
 intros h0.
 refine (float_round_ne _ _ r17 i11 i11 h0 _) ; finalize.
Qed.
Lemma l18 : s1 -> p19 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2), [-450, 450]) *).
 intros h0.
 assert (h1 := l19 h0).
 apply t7. exact h1.
Qed.
Notation p27 := (BND _x3 i1). (* BND(x3, [-15, 15]) *)
Lemma l30 : s1 -> p3 (* BND(Mx3, [-15, 15]) *).
 intros h0.
 assert (h1 := l26 h0).
 exact (proj2 h1).
Qed.
Lemma t8 : p3 -> p27.
 intros h0.
 refine (float_round_ne _ _ _Mx3 i1 i1 h0 _) ; finalize.
Qed.
Lemma l29 : s1 -> p27 (* BND(x3, [-15, 15]) *).
 intros h0.
 assert (h1 := l30 h0).
 apply t8. exact h1.
Qed.
Definition f23 := Float2 (-29) (4).
Definition f24 := Float2 (29) (4).
Definition i15 := makepairF f23 f24.
Notation p28 := (BND r16 i15). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2), [-464, 464]) *)
Lemma t9 : p28 -> p27 -> p18.
 intros h0 h1.
 refine (mul_oo r16 _x3 i15 i1 i10 h0 h1 _) ; finalize.
Qed.
Lemma l17 : s1 -> p18 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3, [-7168, 7168]) *).
 intros h0.
 assert (h1 := l18 h0).
 assert (h2 := l29 h0).
 apply t9. refine (subset r16 i11 i15 h1 _) ; finalize. exact h2.
Qed.
Lemma t10 : p18 -> p17.
 intros h0.
 refine (float_round_ne _ _ r15 i10 i10 h0 _) ; finalize.
Qed.
Lemma l16 : s1 -> p17 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3), [-7168, 7168]) *).
 intros h0.
 assert (h1 := l17 h0).
 apply t10. exact h1.
Qed.
Definition f25 := Float2 (-1) (10).
Definition f26 := Float2 (1) (10).
Definition i16 := makepairF f25 f26.
Notation p29 := (BND r24 i16). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3), [-1024, 1024]) *)
Notation p30 := (BND r25 i16). (* BND(float<53,-1074,ne>(3 * x3) * x3, [-1024, 1024]) *)
Definition f27 := Float2 (-45) (0).
Definition f28 := Float2 (45) (0).
Definition i17 := makepairF f27 f28.
Notation p31 := (BND r26 i17). (* BND(float<53,-1074,ne>(3 * x3), [-45, 45]) *)
Notation p32 := (BND r27 i17). (* BND(3 * x3, [-45, 45]) *)
Definition f29 := Float2 (3) (0).
Definition i18 := makepairF f22 f29.
Notation p33 := (BND r28 i18). (* BND(3, [1, 3]) *)
Lemma t11 : p33.
 refine (constant1 _ i18 _) ; finalize.
Qed.
Lemma l35 : s1 -> p33 (* BND(3, [1, 3]) *).
 intros h0.
 apply t11.
Qed.
Lemma t12 : p33 -> p27 -> p32.
 intros h0 h1.
 refine (mul_po r28 _x3 i18 i1 i17 h0 h1 _) ; finalize.
Qed.
Lemma l34 : s1 -> p32 (* BND(3 * x3, [-45, 45]) *).
 intros h0.
 assert (h1 := l35 h0).
 assert (h2 := l29 h0).
 apply t12. exact h1. exact h2.
Qed.
Lemma t13 : p32 -> p31.
 intros h0.
 refine (float_round_ne _ _ r27 i17 i17 h0 _) ; finalize.
Qed.
Lemma l33 : s1 -> p31 (* BND(float<53,-1074,ne>(3 * x3), [-45, 45]) *).
 intros h0.
 assert (h1 := l34 h0).
 apply t13. exact h1.
Qed.
Definition f30 := Float2 (-1) (6).
Definition f31 := Float2 (1) (6).
Definition i19 := makepairF f30 f31.
Notation p34 := (BND r26 i19). (* BND(float<53,-1074,ne>(3 * x3), [-64, 64]) *)
Definition f32 := Float2 (-1) (4).
Definition f33 := Float2 (1) (4).
Definition i20 := makepairF f32 f33.
Notation p35 := (BND _x3 i20). (* BND(x3, [-16, 16]) *)
Lemma t14 : p34 -> p35 -> p30.
 intros h0 h1.
 refine (mul_oo r26 _x3 i19 i20 i16 h0 h1 _) ; finalize.
Qed.
Lemma l32 : s1 -> p30 (* BND(float<53,-1074,ne>(3 * x3) * x3, [-1024, 1024]) *).
 intros h0.
 assert (h1 := l33 h0).
 assert (h2 := l29 h0).
 apply t14. refine (subset r26 i17 i19 h1 _) ; finalize. refine (subset _x3 i1 i20 h2 _) ; finalize.
Qed.
Lemma t15 : p30 -> p29.
 intros h0.
 refine (float_round_ne _ _ r25 i16 i16 h0 _) ; finalize.
Qed.
Lemma l31 : s1 -> p29 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3), [-1024, 1024]) *).
 intros h0.
 assert (h1 := l32 h0).
 apply t15. exact h1.
Qed.
Lemma t16 : p17 -> p29 -> p16.
 intros h0 h1.
 refine (add r14 r24 i10 i16 i9 h0 h1 _) ; finalize.
Qed.
Lemma l15 : s1 -> p16 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3), [-8192, 8192]) *).
 intros h0.
 assert (h1 := l16 h0).
 assert (h2 := l31 h0).
 apply t16. exact h1. exact h2.
Qed.
Lemma t17 : p16 -> p15.
 intros h0.
 refine (float_round_ne _ _ r13 i9 i9 h0 _) ; finalize.
Qed.
Lemma l14 : s1 -> p15 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)), [-8192, 8192]) *).
 intros h0.
 assert (h1 := l15 h0).
 apply t17. exact h1.
Qed.
Definition f34 := Float2 (-25) (11).
Definition f35 := Float2 (25) (11).
Definition i21 := makepairF f34 f35.
Notation p36 := (BND r29 i21). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3), [-51200, 51200]) *)
Notation p37 := (BND r30 i21). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3, [-51200, 51200]) *)
Definition f36 := Float2 (-3375) (0).
Definition f37 := Float2 (3375) (0).
Definition i22 := makepairF f36 f37.
Notation p38 := (BND r31 i22). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2), [-3375, 3375]) *)
Notation p39 := (BND r32 i22). (* BND(float<53,-1074,ne>(x2 * x1) * x2, [-3375, 3375]) *)
Definition f38 := Float2 (-225) (0).
Definition f39 := Float2 (225) (0).
Definition i23 := makepairF f38 f39.
Notation p40 := (BND r33 i23). (* BND(float<53,-1074,ne>(x2 * x1), [-225, 225]) *)
Notation p41 := (BND r34 i23). (* BND(x2 * x1, [-225, 225]) *)
Lemma t18 : p26 -> p24 -> p41.
 intros h0 h1.
 refine (mul_oo _x2 _x1 i1 i1 i23 h0 h1 _) ; finalize.
Qed.
Lemma l41 : s1 -> p41 (* BND(x2 * x1, [-225, 225]) *).
 intros h0.
 assert (h1 := l27 h0).
 assert (h2 := l23 h0).
 apply t18. exact h1. exact h2.
Qed.
Lemma t19 : p41 -> p40.
 intros h0.
 refine (float_round_ne _ _ r34 i23 i23 h0 _) ; finalize.
Qed.
Lemma l40 : s1 -> p40 (* BND(float<53,-1074,ne>(x2 * x1), [-225, 225]) *).
 intros h0.
 assert (h1 := l41 h0).
 apply t19. exact h1.
Qed.
Lemma t20 : p40 -> p26 -> p39.
 intros h0 h1.
 refine (mul_oo r33 _x2 i23 i1 i22 h0 h1 _) ; finalize.
Qed.
Lemma l39 : s1 -> p39 (* BND(float<53,-1074,ne>(x2 * x1) * x2, [-3375, 3375]) *).
 intros h0.
 assert (h1 := l40 h0).
 assert (h2 := l27 h0).
 apply t20. exact h1. exact h2.
Qed.
Lemma t21 : p39 -> p38.
 intros h0.
 refine (float_round_ne _ _ r32 i22 i22 h0 _) ; finalize.
Qed.
Lemma l38 : s1 -> p38 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2), [-3375, 3375]) *).
 intros h0.
 assert (h1 := l39 h0).
 apply t21. exact h1.
Qed.
Definition f40 := Float2 (-53) (6).
Definition f41 := Float2 (53) (6).
Definition i24 := makepairF f40 f41.
Notation p42 := (BND r31 i24). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2), [-3392, 3392]) *)
Lemma t22 : p42 -> p27 -> p37.
 intros h0 h1.
 refine (mul_oo r31 _x3 i24 i1 i21 h0 h1 _) ; finalize.
Qed.
Lemma l37 : s1 -> p37 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3, [-51200, 51200]) *).
 intros h0.
 assert (h1 := l38 h0).
 assert (h2 := l29 h0).
 apply t22. refine (subset r31 i22 i24 h1 _) ; finalize. exact h2.
Qed.
Lemma t23 : p37 -> p36.
 intros h0.
 refine (float_round_ne _ _ r30 i21 i21 h0 _) ; finalize.
Qed.
Lemma l36 : s1 -> p36 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3), [-51200, 51200]) *).
 intros h0.
 assert (h1 := l37 h0).
 apply t23. exact h1.
Qed.
Lemma t24 : p15 -> p36 -> p14.
 intros h0 h1.
 refine (sub r12 r29 i9 i21 i8 h0 h1 _) ; finalize.
Qed.
Lemma l13 : s1 -> p14 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3), [-59392, 59392]) *).
 intros h0.
 assert (h1 := l14 h0).
 assert (h2 := l36 h0).
 apply t24. exact h1. exact h2.
Qed.
Lemma t25 : p14 -> p13.
 intros h0.
 refine (float_round_ne _ _ r11 i8 i8 h0 _) ; finalize.
Qed.
Lemma l12 : s1 -> p13 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3)), [-59392, 59392]) *).
 intros h0.
 assert (h1 := l13 h0).
 apply t25. exact h1.
Qed.
Lemma t26 : p13 -> p29 -> p12.
 intros h0 h1.
 refine (add r10 r24 i8 i16 i7 h0 h1 _) ; finalize.
Qed.
Lemma l11 : s1 -> p12 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3)) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3), [-61440, 61440]) *).
 intros h0.
 assert (h1 := l12 h0).
 assert (h2 := l31 h0).
 apply t26. exact h1. exact h2.
Qed.
Lemma t27 : p12 -> p11.
 intros h0.
 refine (float_round_ne _ _ r9 i7 i7 h0 _) ; finalize.
Qed.
Lemma l10 : s1 -> p11 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3)) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)), [-61440, 61440]) *).
 intros h0.
 assert (h1 := l11 h0).
 apply t27. exact h1.
Qed.
Lemma t28 : p11 -> p10.
 intros h0.
 refine (abs_of_bnd_o r8 i7 i6 h0 _) ; finalize.
Qed.
Lemma l9 : s1 -> p10 (* ABS(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3)) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)), [0, 61440]) *).
 intros h0.
 assert (h1 := l10 h0).
 apply t28. exact h1.
Qed.
Definition i25 := makepairF f3 f33.
Notation p43 := (ABS _x2 i25). (* ABS(x2, [0, 16]) *)
Notation p44 := (BND _x2 i20). (* BND(x2, [-16, 16]) *)
Lemma t29 : p44 -> p43.
 intros h0.
 refine (abs_of_bnd_o _x2 i20 i25 h0 _) ; finalize.
Qed.
Lemma l42 : s1 -> p43 (* ABS(x2, [0, 16]) *).
 intros h0.
 assert (h1 := l27 h0).
 apply t29. refine (subset _x2 i1 i20 h1 _) ; finalize.
Qed.
Lemma t30 : p10 -> p43 -> p9.
 intros h0 h1.
 refine (sub_aa_o r8 _x2 i6 i25 i5 h0 h1 _) ; finalize.
Qed.
Lemma l8 : s1 -> p9 (* ABS(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3)) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - x2, [0, 65536]) *).
 intros h0.
 assert (h1 := l9 h0).
 assert (h2 := l42 h0).
 apply t30. exact h1. exact h2.
Qed.
Lemma t31 : p9 -> p8.
 intros h0.
 refine (float_absolute_wide_ne _ _ r7 i5 i4 h0 _) ; finalize.
Qed.
Lemma l7 : s1 -> p8 (* BND(r2 - (float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3)) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - x2), [-3.63798e-12, 3.63798e-12]) *).
 intros h0.
 assert (h1 := l8 h0).
 apply t31. exact h1.
Qed.
Definition f42 := Float2 (-36511) (-50).
Definition f43 := Float2 (36511) (-50).
Definition i26 := makepairF f42 f43.
Notation p45 := (BND r49 i26). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3)) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - x2 - Mr2, [-3.24283e-11, 3.24283e-11]) *)
Notation r51 := ((r8 - r36)%R).
Notation r52 := ((_x2 - _Mx2)%R).
Notation r50 := ((r51 - r52)%R).
Notation p46 := (BND r50 i26). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3)) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - (2 * Mx1 * Mx2 * Mx3 + 3 * Mx3 * Mx3 - Mx2 * Mx1 * Mx2 * Mx3 + 3 * Mx3 * Mx3) - (x2 - Mx2), [-3.24283e-11, 3.24283e-11]) *)
Definition f44 := Float2 (-18255) (-49).
Definition f45 := Float2 (18255) (-49).
Definition i27 := makepairF f44 f45.
Notation p47 := (BND r51 i27). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3)) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - (2 * Mx1 * Mx2 * Mx3 + 3 * Mx3 * Mx3 - Mx2 * Mx1 * Mx2 * Mx3 + 3 * Mx3 * Mx3), [-3.24274e-11, 3.24274e-11]) *)
Notation r54 := ((r8 - r9)%R).
Notation r55 := ((r9 - r36)%R).
Notation r53 := ((r54 + r55)%R).
Notation p48 := (BND r53 i27). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3)) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - (float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3)) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) + (float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3)) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3) - (2 * Mx1 * Mx2 * Mx3 + 3 * Mx3 * Mx3 - Mx2 * Mx1 * Mx2 * Mx3 + 3 * Mx3 * Mx3)), [-3.24274e-11, 3.24274e-11]) *)
Notation p49 := (BND r54 i4). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3)) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - (float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3)) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)), [-3.63798e-12, 3.63798e-12]) *)
Notation p50 := (ABS r9 i5). (* ABS(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3)) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3), [0, 65536]) *)
Definition f46 := Float2 (-1) (16).
Definition i28 := makepairF f46 f8.
Notation p51 := (BND r9 i28). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3)) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3), [-65536, 65536]) *)
Lemma t32 : p51 -> p50.
 intros h0.
 refine (abs_of_bnd_o r9 i28 i5 h0 _) ; finalize.
Qed.
Lemma l48 : s1 -> p50 (* ABS(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3)) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3), [0, 65536]) *).
 intros h0.
 assert (h1 := l11 h0).
 apply t32. refine (subset r9 i7 i28 h1 _) ; finalize.
Qed.
Lemma t33 : p50 -> p49.
 intros h0.
 refine (float_absolute_wide_ne _ _ r9 i5 i4 h0 _) ; finalize.
Qed.
Lemma l47 : s1 -> p49 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3)) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - (float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3)) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)), [-3.63798e-12, 3.63798e-12]) *).
 intros h0.
 assert (h1 := l48 h0).
 apply t33. exact h1.
Qed.
Definition f47 := Float2 (-16207) (-49).
Definition f48 := Float2 (16207) (-49).
Definition i29 := makepairF f47 f48.
Notation p52 := (BND r55 i29). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3)) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3) - (2 * Mx1 * Mx2 * Mx3 + 3 * Mx3 * Mx3 - Mx2 * Mx1 * Mx2 * Mx3 + 3 * Mx3 * Mx3), [-2.87894e-11, 2.87894e-11]) *)
Notation r57 := ((r10 - r37)%R).
Notation r58 := ((r24 - r42)%R).
Notation r56 := ((r57 + r58)%R).
Notation p53 := (BND r56 i29). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3)) - (2 * Mx1 * Mx2 * Mx3 + 3 * Mx3 * Mx3 - Mx2 * Mx1 * Mx2 * Mx3) + (float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3) - 3 * Mx3 * Mx3), [-2.87894e-11, 2.87894e-11]) *)
Definition f49 := Float2 (-4025) (-47).
Definition f50 := Float2 (4025) (-47).
Definition i30 := makepairF f49 f50.
Notation p54 := (BND r57 i30). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3)) - (2 * Mx1 * Mx2 * Mx3 + 3 * Mx3 * Mx3 - Mx2 * Mx1 * Mx2 * Mx3), [-2.85993e-11, 2.85993e-11]) *)
Notation r60 := ((r10 - r11)%R).
Notation r61 := ((r11 - r37)%R).
Notation r59 := ((r60 + r61)%R).
Notation p55 := (BND r59 i30). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3)) - (float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3)) + (float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3) - (2 * Mx1 * Mx2 * Mx3 + 3 * Mx3 * Mx3 - Mx2 * Mx1 * Mx2 * Mx3)), [-2.85993e-11, 2.85993e-11]) *)
Notation p56 := (BND r60 i4). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3)) - (float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3)), [-3.63798e-12, 3.63798e-12]) *)
Notation p57 := (ABS r11 i5). (* ABS(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3), [0, 65536]) *)
Definition i31 := makepairF f3 f14.
Notation p58 := (ABS r12 i31). (* ABS(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)), [0, 8192]) *)
Lemma t34 : p15 -> p58.
 intros h0.
 refine (abs_of_bnd_o r12 i9 i31 h0 _) ; finalize.
Qed.
Lemma l55 : s1 -> p58 (* ABS(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)), [0, 8192]) *).
 intros h0.
 assert (h1 := l14 h0).
 apply t34. exact h1.
Qed.
Definition f51 := Float2 (7) (13).
Definition i32 := makepairF f3 f51.
Notation p59 := (ABS r29 i32). (* ABS(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3), [0, 57344]) *)
Definition f52 := Float2 (-7) (13).
Definition i33 := makepairF f52 f51.
Notation p60 := (BND r29 i33). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3), [-57344, 57344]) *)
Lemma t35 : p60 -> p59.
 intros h0.
 refine (abs_of_bnd_o r29 i33 i32 h0 _) ; finalize.
Qed.
Lemma l56 : s1 -> p59 (* ABS(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3), [0, 57344]) *).
 intros h0.
 assert (h1 := l36 h0).
 apply t35. refine (subset r29 i21 i33 h1 _) ; finalize.
Qed.
Lemma t36 : p58 -> p59 -> p57.
 intros h0 h1.
 refine (sub_aa_o r12 r29 i31 i32 i5 h0 h1 _) ; finalize.
Qed.
Lemma l54 : s1 -> p57 (* ABS(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3), [0, 65536]) *).
 intros h0.
 assert (h1 := l55 h0).
 assert (h2 := l56 h0).
 apply t36. exact h1. exact h2.
Qed.
Lemma t37 : p57 -> p56.
 intros h0.
 refine (float_absolute_wide_ne _ _ r11 i5 i4 h0 _) ; finalize.
Qed.
Lemma l53 : s1 -> p56 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3)) - (float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3)), [-3.63798e-12, 3.63798e-12]) *).
 intros h0.
 assert (h1 := l54 h0).
 apply t37. exact h1.
Qed.
Definition f53 := Float2 (-3513) (-47).
Definition f54 := Float2 (3513) (-47).
Definition i34 := makepairF f53 f54.
Notation p61 := (BND r61 i34). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3) - (2 * Mx1 * Mx2 * Mx3 + 3 * Mx3 * Mx3 - Mx2 * Mx1 * Mx2 * Mx3), [-2.49614e-11, 2.49614e-11]) *)
Notation r63 := ((r12 - r38)%R).
Notation r64 := ((r29 - r44)%R).
Notation r62 := ((r63 - r64)%R).
Notation p62 := (BND r62 i34). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - (2 * Mx1 * Mx2 * Mx3 + 3 * Mx3 * Mx3) - (float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3) - Mx2 * Mx1 * Mx2 * Mx3), [-2.49614e-11, 2.49614e-11]) *)
Definition f55 := Float2 (-767) (-48).
Definition f56 := Float2 (767) (-48).
Definition i35 := makepairF f55 f56.
Notation p63 := (BND r63 i35). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - (2 * Mx1 * Mx2 * Mx3 + 3 * Mx3 * Mx3), [-2.72493e-12, 2.72493e-12]) *)
Notation r66 := ((r12 - r13)%R).
Notation r67 := ((r13 - r38)%R).
Notation r65 := ((r66 + r67)%R).
Notation p64 := (BND r65 i35). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - (float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) + (float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3) - (2 * Mx1 * Mx2 * Mx3 + 3 * Mx3 * Mx3)), [-2.72493e-12, 2.72493e-12]) *)
Definition f57 := Float2 (-1) (-41).
Definition f58 := Float2 (1) (-41).
Definition i36 := makepairF f57 f58.
Notation p65 := (BND r66 i36). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - (float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)), [-4.54747e-13, 4.54747e-13]) *)
Notation p66 := (ABS r13 i31). (* ABS(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3), [0, 8192]) *)
Definition i37 := makepairF f3 f16.
Notation p67 := (ABS r14 i37). (* ABS(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3), [0, 7168]) *)
Lemma t38 : p17 -> p67.
 intros h0.
 refine (abs_of_bnd_o r14 i10 i37 h0 _) ; finalize.
Qed.
Lemma l63 : s1 -> p67 (* ABS(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3), [0, 7168]) *).
 intros h0.
 assert (h1 := l16 h0).
 apply t38. exact h1.
Qed.
Definition i38 := makepairF f3 f26.
Notation p68 := (ABS r24 i38). (* ABS(float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3), [0, 1024]) *)
Lemma t39 : p29 -> p68.
 intros h0.
 refine (abs_of_bnd_o r24 i16 i38 h0 _) ; finalize.
Qed.
Lemma l64 : s1 -> p68 (* ABS(float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3), [0, 1024]) *).
 intros h0.
 assert (h1 := l31 h0).
 apply t39. exact h1.
Qed.
Lemma t40 : p67 -> p68 -> p66.
 intros h0 h1.
 refine (add_aa_o r14 r24 i37 i38 i31 h0 h1 _) ; finalize.
Qed.
Lemma l62 : s1 -> p66 (* ABS(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3), [0, 8192]) *).
 intros h0.
 assert (h1 := l63 h0).
 assert (h2 := l64 h0).
 apply t40. exact h1. exact h2.
Qed.
Lemma t41 : p66 -> p65.
 intros h0.
 refine (float_absolute_wide_ne _ _ r13 i31 i36 h0 _) ; finalize.
Qed.
Lemma l61 : s1 -> p65 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - (float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)), [-4.54747e-13, 4.54747e-13]) *).
 intros h0.
 assert (h1 := l62 h0).
 apply t41. exact h1.
Qed.
Definition f59 := Float2 (-639) (-48).
Definition f60 := Float2 (639) (-48).
Definition i39 := makepairF f59 f60.
Notation p69 := (BND r67 i39). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3) - (2 * Mx1 * Mx2 * Mx3 + 3 * Mx3 * Mx3), [-2.27018e-12, 2.27018e-12]) *)
Notation r69 := ((r14 - r39)%R).
Notation r68 := ((r69 + r58)%R).
Notation p70 := (BND r68 i39). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) - 2 * Mx1 * Mx2 * Mx3 + (float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3) - 3 * Mx3 * Mx3), [-2.27018e-12, 2.27018e-12]) *)
Definition f61 := Float2 (-1171) (-49).
Definition f62 := Float2 (1171) (-49).
Definition i40 := makepairF f61 f62.
Notation p71 := (BND r69 i40). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) - 2 * Mx1 * Mx2 * Mx3, [-2.08011e-12, 2.08011e-12]) *)
Notation r71 := ((r14 - r15)%R).
Notation r72 := ((r15 - r39)%R).
Notation r70 := ((r71 + r72)%R).
Notation p72 := (BND r70 i40). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3 + (float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3 - 2 * Mx1 * Mx2 * Mx3), [-2.08011e-12, 2.08011e-12]) *)
Notation p73 := (BND r71 i36). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3, [-4.54747e-13, 4.54747e-13]) *)
Notation p74 := (ABS r15 i31). (* ABS(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3, [0, 8192]) *)
Definition f63 := Float2 (1) (9).
Definition i41 := makepairF f3 f63.
Notation p75 := (ABS r16 i41). (* ABS(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2), [0, 512]) *)
Definition f64 := Float2 (-1) (9).
Definition i42 := makepairF f64 f63.
Notation p76 := (BND r16 i42). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2), [-512, 512]) *)
Lemma t42 : p76 -> p75.
 intros h0.
 refine (abs_of_bnd_o r16 i42 i41 h0 _) ; finalize.
Qed.
Lemma l71 : s1 -> p75 (* ABS(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2), [0, 512]) *).
 intros h0.
 assert (h1 := l18 h0).
 apply t42. refine (subset r16 i11 i42 h1 _) ; finalize.
Qed.
Notation p77 := (ABS _x3 i25). (* ABS(x3, [0, 16]) *)
Lemma t43 : p35 -> p77.
 intros h0.
 refine (abs_of_bnd_o _x3 i20 i25 h0 _) ; finalize.
Qed.
Lemma l72 : s1 -> p77 (* ABS(x3, [0, 16]) *).
 intros h0.
 assert (h1 := l29 h0).
 apply t43. refine (subset _x3 i1 i20 h1 _) ; finalize.
Qed.
Lemma t44 : p75 -> p77 -> p74.
 intros h0 h1.
 refine (mul_aa r16 _x3 i41 i25 i31 h0 h1 _) ; finalize.
Qed.
Lemma l70 : s1 -> p74 (* ABS(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3, [0, 8192]) *).
 intros h0.
 assert (h1 := l71 h0).
 assert (h2 := l72 h0).
 apply t44. exact h1. exact h2.
Qed.
Lemma t45 : p74 -> p73.
 intros h0.
 refine (float_absolute_wide_ne _ _ r15 i31 i36 h0 _) ; finalize.
Qed.
Lemma l69 : s1 -> p73 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3, [-4.54747e-13, 4.54747e-13]) *).
 intros h0.
 assert (h1 := l70 h0).
 apply t45. exact h1.
Qed.
Definition f65 := Float2 (-915) (-49).
Definition f66 := Float2 (915) (-49).
Definition i43 := makepairF f65 f66.
Notation p78 := (BND r72 i43). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3 - 2 * Mx1 * Mx2 * Mx3, [-1.62537e-12, 1.62537e-12]) *)
Notation r75 := ((_x3 - _Mx3)%R).
Notation r74 := ((r16 * r75)%R).
Notation r77 := ((r16 - r40)%R).
Notation r76 := ((r77 * _Mx3)%R).
Notation r73 := ((r74 + r76)%R).
Notation p79 := (BND r73 i43). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * (x3 - Mx3) + (float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) - 2 * Mx1 * Mx2) * Mx3, [-1.62537e-12, 1.62537e-12]) *)
Definition f67 := Float2 (-225) (-49).
Definition f68 := Float2 (225) (-49).
Definition i44 := makepairF f67 f68.
Notation p80 := (BND r74 i44). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * (x3 - Mx3), [-3.9968e-13, 3.9968e-13]) *)
Definition f69 := Float2 (-1) (-50).
Definition f70 := Float2 (1) (-50).
Definition i45 := makepairF f69 f70.
Notation p81 := (BND r75 i45). (* BND(x3 - Mx3, [-8.88178e-16, 8.88178e-16]) *)
Notation p82 := (ABS _Mx3 i25). (* ABS(Mx3, [0, 16]) *)
Notation p83 := (BND _Mx3 i20). (* BND(Mx3, [-16, 16]) *)
Lemma t46 : p83 -> p82.
 intros h0.
 refine (abs_of_bnd_o _Mx3 i20 i25 h0 _) ; finalize.
Qed.
Lemma l77 : s1 -> p82 (* ABS(Mx3, [0, 16]) *).
 intros h0.
 assert (h1 := l30 h0).
 apply t46. refine (subset _Mx3 i1 i20 h1 _) ; finalize.
Qed.
Lemma t47 : p82 -> p81.
 intros h0.
 refine (float_absolute_wide_ne _ _ _Mx3 i25 i45 h0 _) ; finalize.
Qed.
Lemma l76 : s1 -> p81 (* BND(x3 - Mx3, [-8.88178e-16, 8.88178e-16]) *).
 intros h0.
 assert (h1 := l77 h0).
 apply t47. exact h1.
Qed.
Lemma t48 : p19 -> p81 -> p80.
 intros h0 h1.
 refine (mul_oo r16 r75 i11 i45 i44 h0 h1 _) ; finalize.
Qed.
Lemma l75 : s1 -> p80 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * (x3 - Mx3), [-3.9968e-13, 3.9968e-13]) *).
 intros h0.
 assert (h1 := l18 h0).
 assert (h2 := l76 h0).
 apply t48. exact h1. exact h2.
Qed.
Definition f71 := Float2 (-345) (-48).
Definition f72 := Float2 (345) (-48).
Definition i46 := makepairF f71 f72.
Notation p84 := (BND r76 i46). (* BND((float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) - 2 * Mx1 * Mx2) * Mx3, [-1.22569e-12, 1.22569e-12]) *)
Definition f73 := Float2 (-23) (-48).
Definition f74 := Float2 (23) (-48).
Definition i47 := makepairF f73 f74.
Notation p85 := (BND r77 i47). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) - 2 * Mx1 * Mx2, [-8.17124e-14, 8.17124e-14]) *)
Notation r79 := ((r16 - r17)%R).
Notation r80 := ((r17 - r40)%R).
Notation r78 := ((r79 + r80)%R).
Notation p86 := (BND r78 i47). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) - float<53,-1074,ne>(2 * x1) * x2 + (float<53,-1074,ne>(2 * x1) * x2 - 2 * Mx1 * Mx2), [-8.17124e-14, 8.17124e-14]) *)
Definition f75 := Float2 (-1) (-45).
Definition f76 := Float2 (1) (-45).
Definition i48 := makepairF f75 f76.
Notation p87 := (BND r79 i48). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) - float<53,-1074,ne>(2 * x1) * x2, [-2.84217e-14, 2.84217e-14]) *)
Notation p88 := (ABS r17 i41). (* ABS(float<53,-1074,ne>(2 * x1) * x2, [0, 512]) *)
Definition f77 := Float2 (1) (5).
Definition i49 := makepairF f3 f77.
Notation p89 := (ABS r18 i49). (* ABS(float<53,-1074,ne>(2 * x1), [0, 32]) *)
Definition f78 := Float2 (-1) (5).
Definition i50 := makepairF f78 f77.
Notation p90 := (BND r18 i50). (* BND(float<53,-1074,ne>(2 * x1), [-32, 32]) *)
Lemma t49 : p90 -> p89.
 intros h0.
 refine (abs_of_bnd_o r18 i50 i49 h0 _) ; finalize.
Qed.
Lemma l83 : s1 -> p89 (* ABS(float<53,-1074,ne>(2 * x1), [0, 32]) *).
 intros h0.
 assert (h1 := l20 h0).
 apply t49. refine (subset r18 i12 i50 h1 _) ; finalize.
Qed.
Lemma t50 : p89 -> p43 -> p88.
 intros h0 h1.
 refine (mul_aa r18 _x2 i49 i25 i41 h0 h1 _) ; finalize.
Qed.
Lemma l82 : s1 -> p88 (* ABS(float<53,-1074,ne>(2 * x1) * x2, [0, 512]) *).
 intros h0.
 assert (h1 := l83 h0).
 assert (h2 := l42 h0).
 apply t50. exact h1. exact h2.
Qed.
Lemma t51 : p88 -> p87.
 intros h0.
 refine (float_absolute_wide_ne _ _ r17 i41 i48 h0 _) ; finalize.
Qed.
Lemma l81 : s1 -> p87 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) - float<53,-1074,ne>(2 * x1) * x2, [-2.84217e-14, 2.84217e-14]) *).
 intros h0.
 assert (h1 := l82 h0).
 apply t51. exact h1.
Qed.
Definition f79 := Float2 (-15) (-48).
Definition f80 := Float2 (15) (-48).
Definition i51 := makepairF f79 f80.
Notation p91 := (BND r80 i51). (* BND(float<53,-1074,ne>(2 * x1) * x2 - 2 * Mx1 * Mx2, [-5.32907e-14, 5.32907e-14]) *)
Notation r82 := ((r18 * r52)%R).
Notation r84 := ((r18 - r41)%R).
Notation r83 := ((r84 * _Mx2)%R).
Notation r81 := ((r82 + r83)%R).
Notation p92 := (BND r81 i51). (* BND(float<53,-1074,ne>(2 * x1) * (x2 - Mx2) + (float<53,-1074,ne>(2 * x1) - 2 * Mx1) * Mx2, [-5.32907e-14, 5.32907e-14]) *)
Definition f81 := Float2 (-15) (-49).
Definition f82 := Float2 (15) (-49).
Definition i52 := makepairF f81 f82.
Notation p93 := (BND r82 i52). (* BND(float<53,-1074,ne>(2 * x1) * (x2 - Mx2), [-2.66454e-14, 2.66454e-14]) *)
Notation p94 := (BND r52 i45). (* BND(x2 - Mx2, [-8.88178e-16, 8.88178e-16]) *)
Notation p95 := (ABS _Mx2 i25). (* ABS(Mx2, [0, 16]) *)
Notation p96 := (BND _Mx2 i20). (* BND(Mx2, [-16, 16]) *)
Lemma t52 : p96 -> p95.
 intros h0.
 refine (abs_of_bnd_o _Mx2 i20 i25 h0 _) ; finalize.
Qed.
Lemma l88 : s1 -> p95 (* ABS(Mx2, [0, 16]) *).
 intros h0.
 assert (h1 := l28 h0).
 apply t52. refine (subset _Mx2 i1 i20 h1 _) ; finalize.
Qed.
Lemma t53 : p95 -> p94.
 intros h0.
 refine (float_absolute_wide_ne _ _ _Mx2 i25 i45 h0 _) ; finalize.
Qed.
Lemma l87 : s1 -> p94 (* BND(x2 - Mx2, [-8.88178e-16, 8.88178e-16]) *).
 intros h0.
 assert (h1 := l88 h0).
 apply t53. exact h1.
Qed.
Lemma t54 : p21 -> p94 -> p93.
 intros h0 h1.
 refine (mul_oo r18 r52 i12 i45 i52 h0 h1 _) ; finalize.
Qed.
Lemma l86 : s1 -> p93 (* BND(float<53,-1074,ne>(2 * x1) * (x2 - Mx2), [-2.66454e-14, 2.66454e-14]) *).
 intros h0.
 assert (h1 := l20 h0).
 assert (h2 := l87 h0).
 apply t54. exact h1. exact h2.
Qed.
Notation p97 := (BND r83 i52). (* BND((float<53,-1074,ne>(2 * x1) - 2 * Mx1) * Mx2, [-2.66454e-14, 2.66454e-14]) *)
Definition f83 := Float2 (-1) (-49).
Definition f84 := Float2 (1) (-49).
Definition i53 := makepairF f83 f84.
Notation p98 := (BND r84 i53). (* BND(float<53,-1074,ne>(2 * x1) - 2 * Mx1, [-1.77636e-15, 1.77636e-15]) *)
Notation r86 := ((r18 - r19)%R).
Notation r87 := ((r19 - r41)%R).
Notation r85 := ((r86 + r87)%R).
Notation p99 := (BND r85 i53). (* BND(float<53,-1074,ne>(2 * x1) - 2 * x1 + (2 * x1 - 2 * Mx1), [-1.77636e-15, 1.77636e-15]) *)
Definition i54 := makepairF f3 f3.
Notation p100 := (BND r86 i54). (* BND(float<53,-1074,ne>(2 * x1) - 2 * x1, [0, 0]) *)
Notation p101 := (r18 = r19). (* EQL(float<53,-1074,ne>(2 * x1), 2 * x1) *)
Notation p102 := (FIX r19 (-1073)). (* FIX(2 * x1, -1073) *)
Notation p103 := (FIX r20 (1)). (* FIX(2, 1) *)
Notation p104 := (ABS r20 i13). (* ABS(2, [2, 2]) *)
Lemma t55 : p23 -> p104.
 intros h0.
 refine (abs_of_bnd_p r20 i13 i13 h0 _) ; finalize.
Qed.
Lemma l96 : s1 -> p104 (* ABS(2, [2, 2]) *).
 intros h0.
 assert (h1 := l22 h0).
 apply t55. exact h1.
Qed.
Lemma t56 : p104 -> p103.
 intros h0.
 refine (fix_of_singleton_bnd r20 i13 (1) h0 _) ; finalize.
Qed.
Lemma l95 : s1 -> p103 (* FIX(2, 1) *).
 intros h0.
 assert (h1 := l96 h0).
 apply t56. exact h1.
Qed.
Notation p105 := (FIX _x1 (-1074)). (* FIX(x1, -1074) *)
Lemma t57 : p105.
 refine (fix_of_float _ _ _ _ (-1074) _) ; finalize.
Qed.
Lemma l97 : s1 -> p105 (* FIX(x1, -1074) *).
 intros h0.
 apply t57.
Qed.
Lemma t58 : p103 -> p105 -> p102.
 intros h0 h1.
 refine (mul_fix r20 _x1 (1) (-1074) (-1073) h0 h1 _) ; finalize.
Qed.
Lemma l94 : s1 -> p102 (* FIX(2 * x1, -1073) *).
 intros h0.
 assert (h1 := l95 h0).
 assert (h2 := l97 h0).
 apply t58. exact h1. exact h2.
Qed.
Notation p106 := (FLT r19 (53)). (* FLT(2 * x1, 53) *)
Notation p107 := (FLT r20 (1)). (* FLT(2, 1) *)
Lemma t59 : p104 -> p107.
 intros h0.
 refine (flt_of_singleton_bnd r20 i13 (1) h0 _) ; finalize.
Qed.
Lemma l99 : s1 -> p107 (* FLT(2, 1) *).
 intros h0.
 assert (h1 := l96 h0).
 apply t59. exact h1.
Qed.
Notation p108 := (FLT _x1 (53)). (* FLT(x1, 53) *)
Lemma t60 : p108.
 refine (flt_of_float _ _ _ (53) _ _) ; finalize.
Qed.
Lemma l100 : s1 -> p108 (* FLT(x1, 53) *).
 intros h0.
 apply t60.
Qed.
Lemma t61 : p107 -> p108 -> p106.
 intros h0 h1.
 refine (mul_flt r20 _x1 (1) (53) (53) h0 h1 _) ; finalize.
Qed.
Lemma l98 : s1 -> p106 (* FLT(2 * x1, 53) *).
 intros h0.
 assert (h1 := l99 h0).
 assert (h2 := l100 h0).
 apply t61. exact h1. exact h2.
Qed.
Lemma t62 : p102 -> p106 -> p101.
 intros h0 h1.
 refine (float_of_fix_flt _ r19 (-1073) _ (53) _ h0 h1 _) ; finalize.
Qed.
Lemma l93 : s1 -> p101 (* EQL(float<53,-1074,ne>(2 * x1), 2 * x1) *).
 intros h0.
 assert (h1 := l94 h0).
 assert (h2 := l98 h0).
 apply t62. exact h1. exact h2.
Qed.
Lemma t63 : p101 -> p100.
 intros h0.
 refine (sub_of_eql r18 r19 i54 h0 _) ; finalize.
Qed.
Lemma l92 : s1 -> p100 (* BND(float<53,-1074,ne>(2 * x1) - 2 * x1, [0, 0]) *).
 intros h0.
 assert (h1 := l93 h0).
 apply t63. exact h1.
Qed.
Notation p109 := (BND r87 i53). (* BND(2 * x1 - 2 * Mx1, [-1.77636e-15, 1.77636e-15]) *)
Notation r89 := ((_x1 - _Mx1)%R).
Notation r88 := ((r20 * r89)%R).
Notation p110 := (BND r88 i53). (* BND(2 * (x1 - Mx1), [-1.77636e-15, 1.77636e-15]) *)
Notation p111 := (BND r89 i45). (* BND(x1 - Mx1, [-8.88178e-16, 8.88178e-16]) *)
Notation p112 := (ABS _Mx1 i25). (* ABS(Mx1, [0, 16]) *)
Notation p113 := (BND _Mx1 i20). (* BND(Mx1, [-16, 16]) *)
Lemma t64 : p113 -> p112.
 intros h0.
 refine (abs_of_bnd_o _Mx1 i20 i25 h0 _) ; finalize.
Qed.
Lemma l104 : s1 -> p112 (* ABS(Mx1, [0, 16]) *).
 intros h0.
 assert (h1 := l24 h0).
 apply t64. refine (subset _Mx1 i1 i20 h1 _) ; finalize.
Qed.
Lemma t65 : p112 -> p111.
 intros h0.
 refine (float_absolute_wide_ne _ _ _Mx1 i25 i45 h0 _) ; finalize.
Qed.
Lemma l103 : s1 -> p111 (* BND(x1 - Mx1, [-8.88178e-16, 8.88178e-16]) *).
 intros h0.
 assert (h1 := l104 h0).
 apply t65. exact h1.
Qed.
Lemma t66 : p25 -> p111 -> p110.
 intros h0 h1.
 refine (mul_po r20 r89 i14 i45 i53 h0 h1 _) ; finalize.
Qed.
Lemma l102 : s1 -> p110 (* BND(2 * (x1 - Mx1), [-1.77636e-15, 1.77636e-15]) *).
 intros h0.
 assert (h1 := l22 h0).
 assert (h2 := l103 h0).
 apply t66. refine (subset r20 i13 i14 h1 _) ; finalize. exact h2.
Qed.
Lemma t67 : p110 -> p109.
 intros h0.
 refine (mul_fils _ _ _ i53 h0) ; finalize.
Qed.
Lemma l101 : s1 -> p109 (* BND(2 * x1 - 2 * Mx1, [-1.77636e-15, 1.77636e-15]) *).
 intros h0.
 assert (h1 := l102 h0).
 apply t67. exact h1.
Qed.
Lemma t68 : p100 -> p109 -> p99.
 intros h0 h1.
 refine (add r86 r87 i54 i53 i53 h0 h1 _) ; finalize.
Qed.
Lemma l91 : s1 -> p99 (* BND(float<53,-1074,ne>(2 * x1) - 2 * x1 + (2 * x1 - 2 * Mx1), [-1.77636e-15, 1.77636e-15]) *).
 intros h0.
 assert (h1 := l92 h0).
 assert (h2 := l101 h0).
 apply t68. exact h1. exact h2.
Qed.
Lemma t69 : p99 -> p98.
 intros h0.
 refine (sub_xals _ _ _ i53 h0) ; finalize.
Qed.
Lemma l90 : s1 -> p98 (* BND(float<53,-1074,ne>(2 * x1) - 2 * Mx1, [-1.77636e-15, 1.77636e-15]) *).
 intros h0.
 assert (h1 := l91 h0).
 apply t69. exact h1.
Qed.
Lemma t70 : p98 -> p2 -> p97.
 intros h0 h1.
 refine (mul_oo r84 _Mx2 i53 i1 i52 h0 h1 _) ; finalize.
Qed.
Lemma l89 : s1 -> p97 (* BND((float<53,-1074,ne>(2 * x1) - 2 * Mx1) * Mx2, [-2.66454e-14, 2.66454e-14]) *).
 intros h0.
 assert (h1 := l90 h0).
 assert (h2 := l28 h0).
 apply t70. exact h1. exact h2.
Qed.
Lemma t71 : p93 -> p97 -> p92.
 intros h0 h1.
 refine (add r82 r83 i52 i52 i51 h0 h1 _) ; finalize.
Qed.
Lemma l85 : s1 -> p92 (* BND(float<53,-1074,ne>(2 * x1) * (x2 - Mx2) + (float<53,-1074,ne>(2 * x1) - 2 * Mx1) * Mx2, [-5.32907e-14, 5.32907e-14]) *).
 intros h0.
 assert (h1 := l86 h0).
 assert (h2 := l89 h0).
 apply t71. exact h1. exact h2.
Qed.
Lemma t72 : p92 -> p91.
 intros h0.
 refine (mul_mars _ _ _ _ i51 h0) ; finalize.
Qed.
Lemma l84 : s1 -> p91 (* BND(float<53,-1074,ne>(2 * x1) * x2 - 2 * Mx1 * Mx2, [-5.32907e-14, 5.32907e-14]) *).
 intros h0.
 assert (h1 := l85 h0).
 apply t72. exact h1.
Qed.
Lemma t73 : p87 -> p91 -> p86.
 intros h0 h1.
 refine (add r79 r80 i48 i51 i47 h0 h1 _) ; finalize.
Qed.
Lemma l80 : s1 -> p86 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) - float<53,-1074,ne>(2 * x1) * x2 + (float<53,-1074,ne>(2 * x1) * x2 - 2 * Mx1 * Mx2), [-8.17124e-14, 8.17124e-14]) *).
 intros h0.
 assert (h1 := l81 h0).
 assert (h2 := l84 h0).
 apply t73. exact h1. exact h2.
Qed.
Lemma t74 : p86 -> p85.
 intros h0.
 refine (sub_xals _ _ _ i47 h0) ; finalize.
Qed.
Lemma l79 : s1 -> p85 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) - 2 * Mx1 * Mx2, [-8.17124e-14, 8.17124e-14]) *).
 intros h0.
 assert (h1 := l80 h0).
 apply t74. exact h1.
Qed.
Lemma t75 : p85 -> p3 -> p84.
 intros h0 h1.
 refine (mul_oo r77 _Mx3 i47 i1 i46 h0 h1 _) ; finalize.
Qed.
Lemma l78 : s1 -> p84 (* BND((float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) - 2 * Mx1 * Mx2) * Mx3, [-1.22569e-12, 1.22569e-12]) *).
 intros h0.
 assert (h1 := l79 h0).
 assert (h2 := l30 h0).
 apply t75. exact h1. exact h2.
Qed.
Lemma t76 : p80 -> p84 -> p79.
 intros h0 h1.
 refine (add r74 r76 i44 i46 i43 h0 h1 _) ; finalize.
Qed.
Lemma l74 : s1 -> p79 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * (x3 - Mx3) + (float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) - 2 * Mx1 * Mx2) * Mx3, [-1.62537e-12, 1.62537e-12]) *).
 intros h0.
 assert (h1 := l75 h0).
 assert (h2 := l78 h0).
 apply t76. exact h1. exact h2.
Qed.
Lemma t77 : p79 -> p78.
 intros h0.
 refine (mul_mars _ _ _ _ i43 h0) ; finalize.
Qed.
Lemma l73 : s1 -> p78 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3 - 2 * Mx1 * Mx2 * Mx3, [-1.62537e-12, 1.62537e-12]) *).
 intros h0.
 assert (h1 := l74 h0).
 apply t77. exact h1.
Qed.
Lemma t78 : p73 -> p78 -> p72.
 intros h0 h1.
 refine (add r71 r72 i36 i43 i40 h0 h1 _) ; finalize.
Qed.
Lemma l68 : s1 -> p72 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) - float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3 + (float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3 - 2 * Mx1 * Mx2 * Mx3), [-2.08011e-12, 2.08011e-12]) *).
 intros h0.
 assert (h1 := l69 h0).
 assert (h2 := l73 h0).
 apply t78. exact h1. exact h2.
Qed.
Lemma t79 : p72 -> p71.
 intros h0.
 refine (sub_xals _ _ _ i40 h0) ; finalize.
Qed.
Lemma l67 : s1 -> p71 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) - 2 * Mx1 * Mx2 * Mx3, [-2.08011e-12, 2.08011e-12]) *).
 intros h0.
 assert (h1 := l68 h0).
 apply t79. exact h1.
Qed.
Definition f85 := Float2 (-107) (-49).
Definition f86 := Float2 (107) (-49).
Definition i55 := makepairF f85 f86.
Notation p114 := (BND r58 i55). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3) - 3 * Mx3 * Mx3, [-1.9007e-13, 1.9007e-13]) *)
Notation r91 := ((r24 - r25)%R).
Notation r92 := ((r25 - r42)%R).
Notation r90 := ((r91 + r92)%R).
Notation p115 := (BND r90 i55). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3) - float<53,-1074,ne>(3 * x3) * x3 + (float<53,-1074,ne>(3 * x3) * x3 - 3 * Mx3 * Mx3), [-1.9007e-13, 1.9007e-13]) *)
Definition f87 := Float2 (-1) (-44).
Definition f88 := Float2 (1) (-44).
Definition i56 := makepairF f87 f88.
Notation p116 := (BND r91 i56). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3) - float<53,-1074,ne>(3 * x3) * x3, [-5.68434e-14, 5.68434e-14]) *)
Notation p117 := (ABS r25 i38). (* ABS(float<53,-1074,ne>(3 * x3) * x3, [0, 1024]) *)
Definition i57 := makepairF f3 f31.
Notation p118 := (ABS r26 i57). (* ABS(float<53,-1074,ne>(3 * x3), [0, 64]) *)
Lemma t80 : p34 -> p118.
 intros h0.
 refine (abs_of_bnd_o r26 i19 i57 h0 _) ; finalize.
Qed.
Lemma l109 : s1 -> p118 (* ABS(float<53,-1074,ne>(3 * x3), [0, 64]) *).
 intros h0.
 assert (h1 := l33 h0).
 apply t80. refine (subset r26 i17 i19 h1 _) ; finalize.
Qed.
Lemma t81 : p118 -> p77 -> p117.
 intros h0 h1.
 refine (mul_aa r26 _x3 i57 i25 i38 h0 h1 _) ; finalize.
Qed.
Lemma l108 : s1 -> p117 (* ABS(float<53,-1074,ne>(3 * x3) * x3, [0, 1024]) *).
 intros h0.
 assert (h1 := l109 h0).
 assert (h2 := l72 h0).
 apply t81. exact h1. exact h2.
Qed.
Lemma t82 : p117 -> p116.
 intros h0.
 refine (float_absolute_wide_ne _ _ r25 i38 i56 h0 _) ; finalize.
Qed.
Lemma l107 : s1 -> p116 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3) - float<53,-1074,ne>(3 * x3) * x3, [-5.68434e-14, 5.68434e-14]) *).
 intros h0.
 assert (h1 := l108 h0).
 apply t82. exact h1.
Qed.
Definition f89 := Float2 (-75) (-49).
Definition f90 := Float2 (75) (-49).
Definition i58 := makepairF f89 f90.
Notation p119 := (BND r92 i58). (* BND(float<53,-1074,ne>(3 * x3) * x3 - 3 * Mx3 * Mx3, [-1.33227e-13, 1.33227e-13]) *)
Notation r94 := ((r26 * r75)%R).
Notation r96 := ((r26 - r43)%R).
Notation r95 := ((r96 * _Mx3)%R).
Notation r93 := ((r94 + r95)%R).
Notation p120 := (BND r93 i58). (* BND(float<53,-1074,ne>(3 * x3) * (x3 - Mx3) + (float<53,-1074,ne>(3 * x3) - 3 * Mx3) * Mx3, [-1.33227e-13, 1.33227e-13]) *)
Definition f91 := Float2 (-45) (-50).
Definition f92 := Float2 (45) (-50).
Definition i59 := makepairF f91 f92.
Notation p121 := (BND r94 i59). (* BND(float<53,-1074,ne>(3 * x3) * (x3 - Mx3), [-3.9968e-14, 3.9968e-14]) *)
Lemma t83 : p31 -> p81 -> p121.
 intros h0 h1.
 refine (mul_oo r26 r75 i17 i45 i59 h0 h1 _) ; finalize.
Qed.
Lemma l112 : s1 -> p121 (* BND(float<53,-1074,ne>(3 * x3) * (x3 - Mx3), [-3.9968e-14, 3.9968e-14]) *).
 intros h0.
 assert (h1 := l33 h0).
 assert (h2 := l76 h0).
 apply t83. exact h1. exact h2.
Qed.
Definition f93 := Float2 (-105) (-50).
Definition f94 := Float2 (105) (-50).
Definition i60 := makepairF f93 f94.
Notation p122 := (BND r95 i60). (* BND((float<53,-1074,ne>(3 * x3) - 3 * Mx3) * Mx3, [-9.32587e-14, 9.32587e-14]) *)
Definition f95 := Float2 (-7) (-50).
Definition f96 := Float2 (7) (-50).
Definition i61 := makepairF f95 f96.
Notation p123 := (BND r96 i61). (* BND(float<53,-1074,ne>(3 * x3) - 3 * Mx3, [-6.21725e-15, 6.21725e-15]) *)
Notation r98 := ((r26 - r27)%R).
Notation r99 := ((r27 - r43)%R).
Notation r97 := ((r98 + r99)%R).
Notation p124 := (BND r97 i61). (* BND(float<53,-1074,ne>(3 * x3) - 3 * x3 + (3 * x3 - 3 * Mx3), [-6.21725e-15, 6.21725e-15]) *)
Definition f97 := Float2 (-1) (-48).
Definition f98 := Float2 (1) (-48).
Definition i62 := makepairF f97 f98.
Notation p125 := (BND r98 i62). (* BND(float<53,-1074,ne>(3 * x3) - 3 * x3, [-3.55271e-15, 3.55271e-15]) *)
Notation p126 := (ABS r27 i57). (* ABS(3 * x3, [0, 64]) *)
Definition f99 := Float2 (1) (2).
Definition i63 := makepairF f22 f99.
Notation p127 := (ABS r28 i63). (* ABS(3, [1, 4]) *)
Notation p128 := (BND r28 i63). (* BND(3, [1, 4]) *)
Lemma t84 : p128 -> p127.
 intros h0.
 refine (abs_of_bnd_p r28 i63 i63 h0 _) ; finalize.
Qed.
Lemma l118 : s1 -> p127 (* ABS(3, [1, 4]) *).
 intros h0.
 assert (h1 := l35 h0).
 apply t84. refine (subset r28 i18 i63 h1 _) ; finalize.
Qed.
Lemma t85 : p127 -> p77 -> p126.
 intros h0 h1.
 refine (mul_aa r28 _x3 i63 i25 i57 h0 h1 _) ; finalize.
Qed.
Lemma l117 : s1 -> p126 (* ABS(3 * x3, [0, 64]) *).
 intros h0.
 assert (h1 := l118 h0).
 assert (h2 := l72 h0).
 apply t85. exact h1. exact h2.
Qed.
Lemma t86 : p126 -> p125.
 intros h0.
 refine (float_absolute_wide_ne _ _ r27 i57 i62 h0 _) ; finalize.
Qed.
Lemma l116 : s1 -> p125 (* BND(float<53,-1074,ne>(3 * x3) - 3 * x3, [-3.55271e-15, 3.55271e-15]) *).
 intros h0.
 assert (h1 := l117 h0).
 apply t86. exact h1.
Qed.
Definition f100 := Float2 (-3) (-50).
Definition f101 := Float2 (3) (-50).
Definition i64 := makepairF f100 f101.
Notation p129 := (BND r99 i64). (* BND(3 * x3 - 3 * Mx3, [-2.66454e-15, 2.66454e-15]) *)
Notation r100 := ((r28 * r75)%R).
Notation p130 := (BND r100 i64). (* BND(3 * (x3 - Mx3), [-2.66454e-15, 2.66454e-15]) *)
Lemma t87 : p33 -> p81 -> p130.
 intros h0 h1.
 refine (mul_po r28 r75 i18 i45 i64 h0 h1 _) ; finalize.
Qed.
Lemma l120 : s1 -> p130 (* BND(3 * (x3 - Mx3), [-2.66454e-15, 2.66454e-15]) *).
 intros h0.
 assert (h1 := l35 h0).
 assert (h2 := l76 h0).
 apply t87. exact h1. exact h2.
Qed.
Lemma t88 : p130 -> p129.
 intros h0.
 refine (mul_fils _ _ _ i64 h0) ; finalize.
Qed.
Lemma l119 : s1 -> p129 (* BND(3 * x3 - 3 * Mx3, [-2.66454e-15, 2.66454e-15]) *).
 intros h0.
 assert (h1 := l120 h0).
 apply t88. exact h1.
Qed.
Lemma t89 : p125 -> p129 -> p124.
 intros h0 h1.
 refine (add r98 r99 i62 i64 i61 h0 h1 _) ; finalize.
Qed.
Lemma l115 : s1 -> p124 (* BND(float<53,-1074,ne>(3 * x3) - 3 * x3 + (3 * x3 - 3 * Mx3), [-6.21725e-15, 6.21725e-15]) *).
 intros h0.
 assert (h1 := l116 h0).
 assert (h2 := l119 h0).
 apply t89. exact h1. exact h2.
Qed.
Lemma t90 : p124 -> p123.
 intros h0.
 refine (sub_xals _ _ _ i61 h0) ; finalize.
Qed.
Lemma l114 : s1 -> p123 (* BND(float<53,-1074,ne>(3 * x3) - 3 * Mx3, [-6.21725e-15, 6.21725e-15]) *).
 intros h0.
 assert (h1 := l115 h0).
 apply t90. exact h1.
Qed.
Lemma t91 : p123 -> p3 -> p122.
 intros h0 h1.
 refine (mul_oo r96 _Mx3 i61 i1 i60 h0 h1 _) ; finalize.
Qed.
Lemma l113 : s1 -> p122 (* BND((float<53,-1074,ne>(3 * x3) - 3 * Mx3) * Mx3, [-9.32587e-14, 9.32587e-14]) *).
 intros h0.
 assert (h1 := l114 h0).
 assert (h2 := l30 h0).
 apply t91. exact h1. exact h2.
Qed.
Lemma t92 : p121 -> p122 -> p120.
 intros h0 h1.
 refine (add r94 r95 i59 i60 i58 h0 h1 _) ; finalize.
Qed.
Lemma l111 : s1 -> p120 (* BND(float<53,-1074,ne>(3 * x3) * (x3 - Mx3) + (float<53,-1074,ne>(3 * x3) - 3 * Mx3) * Mx3, [-1.33227e-13, 1.33227e-13]) *).
 intros h0.
 assert (h1 := l112 h0).
 assert (h2 := l113 h0).
 apply t92. exact h1. exact h2.
Qed.
Lemma t93 : p120 -> p119.
 intros h0.
 refine (mul_mars _ _ _ _ i58 h0) ; finalize.
Qed.
Lemma l110 : s1 -> p119 (* BND(float<53,-1074,ne>(3 * x3) * x3 - 3 * Mx3 * Mx3, [-1.33227e-13, 1.33227e-13]) *).
 intros h0.
 assert (h1 := l111 h0).
 apply t93. exact h1.
Qed.
Lemma t94 : p116 -> p119 -> p115.
 intros h0 h1.
 refine (add r91 r92 i56 i58 i55 h0 h1 _) ; finalize.
Qed.
Lemma l106 : s1 -> p115 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3) - float<53,-1074,ne>(3 * x3) * x3 + (float<53,-1074,ne>(3 * x3) * x3 - 3 * Mx3 * Mx3), [-1.9007e-13, 1.9007e-13]) *).
 intros h0.
 assert (h1 := l107 h0).
 assert (h2 := l110 h0).
 apply t94. exact h1. exact h2.
Qed.
Lemma t95 : p115 -> p114.
 intros h0.
 refine (sub_xals _ _ _ i55 h0) ; finalize.
Qed.
Lemma l105 : s1 -> p114 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3) - 3 * Mx3 * Mx3, [-1.9007e-13, 1.9007e-13]) *).
 intros h0.
 assert (h1 := l106 h0).
 apply t95. exact h1.
Qed.
Lemma t96 : p71 -> p114 -> p70.
 intros h0 h1.
 refine (add r69 r58 i40 i55 i39 h0 h1 _) ; finalize.
Qed.
Lemma l66 : s1 -> p70 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) - 2 * Mx1 * Mx2 * Mx3 + (float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3) - 3 * Mx3 * Mx3), [-2.27018e-12, 2.27018e-12]) *).
 intros h0.
 assert (h1 := l67 h0).
 assert (h2 := l105 h0).
 apply t96. exact h1. exact h2.
Qed.
Lemma t97 : p70 -> p69.
 intros h0.
 refine (add_mibs _ _ _ _ i39 h0) ; finalize.
Qed.
Lemma l65 : s1 -> p69 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3) - (2 * Mx1 * Mx2 * Mx3 + 3 * Mx3 * Mx3), [-2.27018e-12, 2.27018e-12]) *).
 intros h0.
 assert (h1 := l66 h0).
 apply t97. exact h1.
Qed.
Lemma t98 : p65 -> p69 -> p64.
 intros h0 h1.
 refine (add r66 r67 i36 i39 i35 h0 h1 _) ; finalize.
Qed.
Lemma l60 : s1 -> p64 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - (float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) + (float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3) - (2 * Mx1 * Mx2 * Mx3 + 3 * Mx3 * Mx3)), [-2.72493e-12, 2.72493e-12]) *).
 intros h0.
 assert (h1 := l61 h0).
 assert (h2 := l65 h0).
 apply t98. exact h1. exact h2.
Qed.
Lemma t99 : p64 -> p63.
 intros h0.
 refine (sub_xals _ _ _ i35 h0) ; finalize.
Qed.
Lemma l59 : s1 -> p63 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - (2 * Mx1 * Mx2 * Mx3 + 3 * Mx3 * Mx3), [-2.72493e-12, 2.72493e-12]) *).
 intros h0.
 assert (h1 := l60 h0).
 apply t99. exact h1.
Qed.
Definition f102 := Float2 (-6259) (-48).
Definition f103 := Float2 (6259) (-48).
Definition i65 := makepairF f102 f103.
Notation p131 := (BND r64 i65). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3) - Mx2 * Mx1 * Mx2 * Mx3, [-2.22364e-11, 2.22364e-11]) *)
Notation r102 := ((r29 - r30)%R).
Notation r103 := ((r30 - r44)%R).
Notation r101 := ((r102 + r103)%R).
Notation p132 := (BND r101 i65). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3) - float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3 + (float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3 - Mx2 * Mx1 * Mx2 * Mx3), [-2.22364e-11, 2.22364e-11]) *)
Notation p133 := (BND r102 i4). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3) - float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3, [-3.63798e-12, 3.63798e-12]) *)
Notation p134 := (ABS r30 i5). (* ABS(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3, [0, 65536]) *)
Definition f104 := Float2 (1) (12).
Definition i66 := makepairF f3 f104.
Notation p135 := (ABS r31 i66). (* ABS(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2), [0, 4096]) *)
Definition f105 := Float2 (-1) (12).
Definition i67 := makepairF f105 f104.
Notation p136 := (BND r31 i67). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2), [-4096, 4096]) *)
Lemma t100 : p136 -> p135.
 intros h0.
 refine (abs_of_bnd_o r31 i67 i66 h0 _) ; finalize.
Qed.
Lemma l125 : s1 -> p135 (* ABS(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2), [0, 4096]) *).
 intros h0.
 assert (h1 := l38 h0).
 apply t100. refine (subset r31 i22 i67 h1 _) ; finalize.
Qed.
Lemma t101 : p135 -> p77 -> p134.
 intros h0 h1.
 refine (mul_aa r31 _x3 i66 i25 i5 h0 h1 _) ; finalize.
Qed.
Lemma l124 : s1 -> p134 (* ABS(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3, [0, 65536]) *).
 intros h0.
 assert (h1 := l125 h0).
 assert (h2 := l72 h0).
 apply t101. exact h1. exact h2.
Qed.
Lemma t102 : p134 -> p133.
 intros h0.
 refine (float_absolute_wide_ne _ _ r30 i5 i4 h0 _) ; finalize.
Qed.
Lemma l123 : s1 -> p133 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3) - float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3, [-3.63798e-12, 3.63798e-12]) *).
 intros h0.
 assert (h1 := l124 h0).
 apply t102. exact h1.
Qed.
Definition f106 := Float2 (-5235) (-48).
Definition f107 := Float2 (5235) (-48).
Definition i68 := makepairF f106 f107.
Notation p137 := (BND r103 i68). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3 - Mx2 * Mx1 * Mx2 * Mx3, [-1.85985e-11, 1.85985e-11]) *)
Notation r105 := ((r31 * r75)%R).
Notation r107 := ((r31 - r45)%R).
Notation r106 := ((r107 * _Mx3)%R).
Notation r104 := ((r105 + r106)%R).
Notation p138 := (BND r104 i68). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * (x3 - Mx3) + (float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) - Mx2 * Mx1 * Mx2) * Mx3, [-1.85985e-11, 1.85985e-11]) *)
Definition f108 := Float2 (-3375) (-50).
Definition f109 := Float2 (3375) (-50).
Definition i69 := makepairF f108 f109.
Notation p139 := (BND r105 i69). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * (x3 - Mx3), [-2.9976e-12, 2.9976e-12]) *)
Lemma t103 : p38 -> p81 -> p139.
 intros h0 h1.
 refine (mul_oo r31 r75 i22 i45 i69 h0 h1 _) ; finalize.
Qed.
Lemma l128 : s1 -> p139 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * (x3 - Mx3), [-2.9976e-12, 2.9976e-12]) *).
 intros h0.
 assert (h1 := l38 h0).
 assert (h2 := l76 h0).
 apply t103. exact h1. exact h2.
Qed.
Definition f110 := Float2 (-17565) (-50).
Definition f111 := Float2 (17565) (-50).
Definition i70 := makepairF f110 f111.
Notation p140 := (BND r106 i70). (* BND((float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) - Mx2 * Mx1 * Mx2) * Mx3, [-1.56009e-11, 1.56009e-11]) *)
Definition f112 := Float2 (-1171) (-50).
Definition f113 := Float2 (1171) (-50).
Definition i71 := makepairF f112 f113.
Notation p141 := (BND r107 i71). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) - Mx2 * Mx1 * Mx2, [-1.04006e-12, 1.04006e-12]) *)
Notation r109 := ((r31 - r32)%R).
Notation r110 := ((r32 - r45)%R).
Notation r108 := ((r109 + r110)%R).
Notation p142 := (BND r108 i71). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) - float<53,-1074,ne>(x2 * x1) * x2 + (float<53,-1074,ne>(x2 * x1) * x2 - Mx2 * Mx1 * Mx2), [-1.04006e-12, 1.04006e-12]) *)
Definition f114 := Float2 (-1) (-42).
Definition f115 := Float2 (1) (-42).
Definition i72 := makepairF f114 f115.
Notation p143 := (BND r109 i72). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) - float<53,-1074,ne>(x2 * x1) * x2, [-2.27374e-13, 2.27374e-13]) *)
Notation p144 := (ABS r32 i66). (* ABS(float<53,-1074,ne>(x2 * x1) * x2, [0, 4096]) *)
Definition f116 := Float2 (1) (8).
Definition i73 := makepairF f3 f116.
Notation p145 := (ABS r33 i73). (* ABS(float<53,-1074,ne>(x2 * x1), [0, 256]) *)
Definition f117 := Float2 (-1) (8).
Definition i74 := makepairF f117 f116.
Notation p146 := (BND r33 i74). (* BND(float<53,-1074,ne>(x2 * x1), [-256, 256]) *)
Lemma t104 : p146 -> p145.
 intros h0.
 refine (abs_of_bnd_o r33 i74 i73 h0 _) ; finalize.
Qed.
Lemma l134 : s1 -> p145 (* ABS(float<53,-1074,ne>(x2 * x1), [0, 256]) *).
 intros h0.
 assert (h1 := l40 h0).
 apply t104. refine (subset r33 i23 i74 h1 _) ; finalize.
Qed.
Lemma t105 : p145 -> p43 -> p144.
 intros h0 h1.
 refine (mul_aa r33 _x2 i73 i25 i66 h0 h1 _) ; finalize.
Qed.
Lemma l133 : s1 -> p144 (* ABS(float<53,-1074,ne>(x2 * x1) * x2, [0, 4096]) *).
 intros h0.
 assert (h1 := l134 h0).
 assert (h2 := l42 h0).
 apply t105. exact h1. exact h2.
Qed.
Lemma t106 : p144 -> p143.
 intros h0.
 refine (float_absolute_wide_ne _ _ r32 i66 i72 h0 _) ; finalize.
Qed.
Lemma l132 : s1 -> p143 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) - float<53,-1074,ne>(x2 * x1) * x2, [-2.27374e-13, 2.27374e-13]) *).
 intros h0.
 assert (h1 := l133 h0).
 apply t106. exact h1.
Qed.
Definition f118 := Float2 (-915) (-50).
Definition f119 := Float2 (915) (-50).
Definition i75 := makepairF f118 f119.
Notation p147 := (BND r110 i75). (* BND(float<53,-1074,ne>(x2 * x1) * x2 - Mx2 * Mx1 * Mx2, [-8.12683e-13, 8.12683e-13]) *)
Notation r112 := ((r33 * r52)%R).
Notation r114 := ((r33 - r46)%R).
Notation r113 := ((r114 * _Mx2)%R).
Notation r111 := ((r112 + r113)%R).
Notation p148 := (BND r111 i75). (* BND(float<53,-1074,ne>(x2 * x1) * (x2 - Mx2) + (float<53,-1074,ne>(x2 * x1) - Mx2 * Mx1) * Mx2, [-8.12683e-13, 8.12683e-13]) *)
Definition f120 := Float2 (-225) (-50).
Definition f121 := Float2 (225) (-50).
Definition i76 := makepairF f120 f121.
Notation p149 := (BND r112 i76). (* BND(float<53,-1074,ne>(x2 * x1) * (x2 - Mx2), [-1.9984e-13, 1.9984e-13]) *)
Lemma t107 : p40 -> p94 -> p149.
 intros h0 h1.
 refine (mul_oo r33 r52 i23 i45 i76 h0 h1 _) ; finalize.
Qed.
Lemma l137 : s1 -> p149 (* BND(float<53,-1074,ne>(x2 * x1) * (x2 - Mx2), [-1.9984e-13, 1.9984e-13]) *).
 intros h0.
 assert (h1 := l40 h0).
 assert (h2 := l87 h0).
 apply t107. exact h1. exact h2.
Qed.
Definition f122 := Float2 (-345) (-49).
Definition f123 := Float2 (345) (-49).
Definition i77 := makepairF f122 f123.
Notation p150 := (BND r113 i77). (* BND((float<53,-1074,ne>(x2 * x1) - Mx2 * Mx1) * Mx2, [-6.12843e-13, 6.12843e-13]) *)
Definition f124 := Float2 (-23) (-49).
Definition f125 := Float2 (23) (-49).
Definition i78 := makepairF f124 f125.
Notation p151 := (BND r114 i78). (* BND(float<53,-1074,ne>(x2 * x1) - Mx2 * Mx1, [-4.08562e-14, 4.08562e-14]) *)
Notation r116 := ((r33 - r34)%R).
Notation r117 := ((r34 - r46)%R).
Notation r115 := ((r116 + r117)%R).
Notation p152 := (BND r115 i78). (* BND(float<53,-1074,ne>(x2 * x1) - x2 * x1 + (x2 * x1 - Mx2 * Mx1), [-4.08562e-14, 4.08562e-14]) *)
Definition f126 := Float2 (-1) (-46).
Definition f127 := Float2 (1) (-46).
Definition i79 := makepairF f126 f127.
Notation p153 := (BND r116 i79). (* BND(float<53,-1074,ne>(x2 * x1) - x2 * x1, [-1.42109e-14, 1.42109e-14]) *)
Notation p154 := (ABS r34 i73). (* ABS(x2 * x1, [0, 256]) *)
Notation p155 := (ABS _x1 i25). (* ABS(x1, [0, 16]) *)
Notation p156 := (BND _x1 i20). (* BND(x1, [-16, 16]) *)
Lemma t108 : p156 -> p155.
 intros h0.
 refine (abs_of_bnd_o _x1 i20 i25 h0 _) ; finalize.
Qed.
Lemma l143 : s1 -> p155 (* ABS(x1, [0, 16]) *).
 intros h0.
 assert (h1 := l23 h0).
 apply t108. refine (subset _x1 i1 i20 h1 _) ; finalize.
Qed.
Lemma t109 : p43 -> p155 -> p154.
 intros h0 h1.
 refine (mul_aa _x2 _x1 i25 i25 i73 h0 h1 _) ; finalize.
Qed.
Lemma l142 : s1 -> p154 (* ABS(x2 * x1, [0, 256]) *).
 intros h0.
 assert (h1 := l42 h0).
 assert (h2 := l143 h0).
 apply t109. exact h1. exact h2.
Qed.
Lemma t110 : p154 -> p153.
 intros h0.
 refine (float_absolute_wide_ne _ _ r34 i73 i79 h0 _) ; finalize.
Qed.
Lemma l141 : s1 -> p153 (* BND(float<53,-1074,ne>(x2 * x1) - x2 * x1, [-1.42109e-14, 1.42109e-14]) *).
 intros h0.
 assert (h1 := l142 h0).
 apply t110. exact h1.
Qed.
Notation p157 := (BND r117 i52). (* BND(x2 * x1 - Mx2 * Mx1, [-2.66454e-14, 2.66454e-14]) *)
Notation r119 := ((_x2 * r89)%R).
Notation r120 := ((r52 * _Mx1)%R).
Notation r118 := ((r119 + r120)%R).
Notation p158 := (BND r118 i52). (* BND(x2 * (x1 - Mx1) + (x2 - Mx2) * Mx1, [-2.66454e-14, 2.66454e-14]) *)
Definition f128 := Float2 (-15) (-50).
Definition f129 := Float2 (15) (-50).
Definition i80 := makepairF f128 f129.
Notation p159 := (BND r119 i80). (* BND(x2 * (x1 - Mx1), [-1.33227e-14, 1.33227e-14]) *)
Lemma t111 : p26 -> p111 -> p159.
 intros h0 h1.
 refine (mul_oo _x2 r89 i1 i45 i80 h0 h1 _) ; finalize.
Qed.
Lemma l146 : s1 -> p159 (* BND(x2 * (x1 - Mx1), [-1.33227e-14, 1.33227e-14]) *).
 intros h0.
 assert (h1 := l27 h0).
 assert (h2 := l103 h0).
 apply t111. exact h1. exact h2.
Qed.
Notation p160 := (BND r120 i80). (* BND((x2 - Mx2) * Mx1, [-1.33227e-14, 1.33227e-14]) *)
Lemma t112 : p94 -> p1 -> p160.
 intros h0 h1.
 refine (mul_oo r52 _Mx1 i45 i1 i80 h0 h1 _) ; finalize.
Qed.
Lemma l147 : s1 -> p160 (* BND((x2 - Mx2) * Mx1, [-1.33227e-14, 1.33227e-14]) *).
 intros h0.
 assert (h1 := l87 h0).
 assert (h2 := l24 h0).
 apply t112. exact h1. exact h2.
Qed.
Lemma t113 : p159 -> p160 -> p158.
 intros h0 h1.
 refine (add r119 r120 i80 i80 i52 h0 h1 _) ; finalize.
Qed.
Lemma l145 : s1 -> p158 (* BND(x2 * (x1 - Mx1) + (x2 - Mx2) * Mx1, [-2.66454e-14, 2.66454e-14]) *).
 intros h0.
 assert (h1 := l146 h0).
 assert (h2 := l147 h0).
 apply t113. exact h1. exact h2.
Qed.
Lemma t114 : p158 -> p157.
 intros h0.
 refine (mul_mars _ _ _ _ i52 h0) ; finalize.
Qed.
Lemma l144 : s1 -> p157 (* BND(x2 * x1 - Mx2 * Mx1, [-2.66454e-14, 2.66454e-14]) *).
 intros h0.
 assert (h1 := l145 h0).
 apply t114. exact h1.
Qed.
Lemma t115 : p153 -> p157 -> p152.
 intros h0 h1.
 refine (add r116 r117 i79 i52 i78 h0 h1 _) ; finalize.
Qed.
Lemma l140 : s1 -> p152 (* BND(float<53,-1074,ne>(x2 * x1) - x2 * x1 + (x2 * x1 - Mx2 * Mx1), [-4.08562e-14, 4.08562e-14]) *).
 intros h0.
 assert (h1 := l141 h0).
 assert (h2 := l144 h0).
 apply t115. exact h1. exact h2.
Qed.
Lemma t116 : p152 -> p151.
 intros h0.
 refine (sub_xals _ _ _ i78 h0) ; finalize.
Qed.
Lemma l139 : s1 -> p151 (* BND(float<53,-1074,ne>(x2 * x1) - Mx2 * Mx1, [-4.08562e-14, 4.08562e-14]) *).
 intros h0.
 assert (h1 := l140 h0).
 apply t116. exact h1.
Qed.
Lemma t117 : p151 -> p2 -> p150.
 intros h0 h1.
 refine (mul_oo r114 _Mx2 i78 i1 i77 h0 h1 _) ; finalize.
Qed.
Lemma l138 : s1 -> p150 (* BND((float<53,-1074,ne>(x2 * x1) - Mx2 * Mx1) * Mx2, [-6.12843e-13, 6.12843e-13]) *).
 intros h0.
 assert (h1 := l139 h0).
 assert (h2 := l28 h0).
 apply t117. exact h1. exact h2.
Qed.
Lemma t118 : p149 -> p150 -> p148.
 intros h0 h1.
 refine (add r112 r113 i76 i77 i75 h0 h1 _) ; finalize.
Qed.
Lemma l136 : s1 -> p148 (* BND(float<53,-1074,ne>(x2 * x1) * (x2 - Mx2) + (float<53,-1074,ne>(x2 * x1) - Mx2 * Mx1) * Mx2, [-8.12683e-13, 8.12683e-13]) *).
 intros h0.
 assert (h1 := l137 h0).
 assert (h2 := l138 h0).
 apply t118. exact h1. exact h2.
Qed.
Lemma t119 : p148 -> p147.
 intros h0.
 refine (mul_mars _ _ _ _ i75 h0) ; finalize.
Qed.
Lemma l135 : s1 -> p147 (* BND(float<53,-1074,ne>(x2 * x1) * x2 - Mx2 * Mx1 * Mx2, [-8.12683e-13, 8.12683e-13]) *).
 intros h0.
 assert (h1 := l136 h0).
 apply t119. exact h1.
Qed.
Lemma t120 : p143 -> p147 -> p142.
 intros h0 h1.
 refine (add r109 r110 i72 i75 i71 h0 h1 _) ; finalize.
Qed.
Lemma l131 : s1 -> p142 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) - float<53,-1074,ne>(x2 * x1) * x2 + (float<53,-1074,ne>(x2 * x1) * x2 - Mx2 * Mx1 * Mx2), [-1.04006e-12, 1.04006e-12]) *).
 intros h0.
 assert (h1 := l132 h0).
 assert (h2 := l135 h0).
 apply t120. exact h1. exact h2.
Qed.
Lemma t121 : p142 -> p141.
 intros h0.
 refine (sub_xals _ _ _ i71 h0) ; finalize.
Qed.
Lemma l130 : s1 -> p141 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) - Mx2 * Mx1 * Mx2, [-1.04006e-12, 1.04006e-12]) *).
 intros h0.
 assert (h1 := l131 h0).
 apply t121. exact h1.
Qed.
Lemma t122 : p141 -> p3 -> p140.
 intros h0 h1.
 refine (mul_oo r107 _Mx3 i71 i1 i70 h0 h1 _) ; finalize.
Qed.
Lemma l129 : s1 -> p140 (* BND((float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) - Mx2 * Mx1 * Mx2) * Mx3, [-1.56009e-11, 1.56009e-11]) *).
 intros h0.
 assert (h1 := l130 h0).
 assert (h2 := l30 h0).
 apply t122. exact h1. exact h2.
Qed.
Lemma t123 : p139 -> p140 -> p138.
 intros h0 h1.
 refine (add r105 r106 i69 i70 i68 h0 h1 _) ; finalize.
Qed.
Lemma l127 : s1 -> p138 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * (x3 - Mx3) + (float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) - Mx2 * Mx1 * Mx2) * Mx3, [-1.85985e-11, 1.85985e-11]) *).
 intros h0.
 assert (h1 := l128 h0).
 assert (h2 := l129 h0).
 apply t123. exact h1. exact h2.
Qed.
Lemma t124 : p138 -> p137.
 intros h0.
 refine (mul_mars _ _ _ _ i68 h0) ; finalize.
Qed.
Lemma l126 : s1 -> p137 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3 - Mx2 * Mx1 * Mx2 * Mx3, [-1.85985e-11, 1.85985e-11]) *).
 intros h0.
 assert (h1 := l127 h0).
 apply t124. exact h1.
Qed.
Lemma t125 : p133 -> p137 -> p132.
 intros h0 h1.
 refine (add r102 r103 i4 i68 i65 h0 h1 _) ; finalize.
Qed.
Lemma l122 : s1 -> p132 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3) - float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3 + (float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3 - Mx2 * Mx1 * Mx2 * Mx3), [-2.22364e-11, 2.22364e-11]) *).
 intros h0.
 assert (h1 := l123 h0).
 assert (h2 := l126 h0).
 apply t125. exact h1. exact h2.
Qed.
Lemma t126 : p132 -> p131.
 intros h0.
 refine (sub_xals _ _ _ i65 h0) ; finalize.
Qed.
Lemma l121 : s1 -> p131 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3) - Mx2 * Mx1 * Mx2 * Mx3, [-2.22364e-11, 2.22364e-11]) *).
 intros h0.
 assert (h1 := l122 h0).
 apply t126. exact h1.
Qed.
Lemma t127 : p63 -> p131 -> p62.
 intros h0 h1.
 refine (sub r63 r64 i35 i65 i34 h0 h1 _) ; finalize.
Qed.
Lemma l58 : s1 -> p62 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - (2 * Mx1 * Mx2 * Mx3 + 3 * Mx3 * Mx3) - (float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3) - Mx2 * Mx1 * Mx2 * Mx3), [-2.49614e-11, 2.49614e-11]) *).
 intros h0.
 assert (h1 := l59 h0).
 assert (h2 := l121 h0).
 apply t127. exact h1. exact h2.
Qed.
Lemma t128 : p62 -> p61.
 intros h0.
 refine (sub_mibs _ _ _ _ i34 h0) ; finalize.
Qed.
Lemma l57 : s1 -> p61 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3) - (2 * Mx1 * Mx2 * Mx3 + 3 * Mx3 * Mx3 - Mx2 * Mx1 * Mx2 * Mx3), [-2.49614e-11, 2.49614e-11]) *).
 intros h0.
 assert (h1 := l58 h0).
 apply t128. exact h1.
Qed.
Lemma t129 : p56 -> p61 -> p55.
 intros h0 h1.
 refine (add r60 r61 i4 i34 i30 h0 h1 _) ; finalize.
Qed.
Lemma l52 : s1 -> p55 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3)) - (float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3)) + (float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3) - (2 * Mx1 * Mx2 * Mx3 + 3 * Mx3 * Mx3 - Mx2 * Mx1 * Mx2 * Mx3)), [-2.85993e-11, 2.85993e-11]) *).
 intros h0.
 assert (h1 := l53 h0).
 assert (h2 := l57 h0).
 apply t129. exact h1. exact h2.
Qed.
Lemma t130 : p55 -> p54.
 intros h0.
 refine (sub_xals _ _ _ i30 h0) ; finalize.
Qed.
Lemma l51 : s1 -> p54 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3)) - (2 * Mx1 * Mx2 * Mx3 + 3 * Mx3 * Mx3 - Mx2 * Mx1 * Mx2 * Mx3), [-2.85993e-11, 2.85993e-11]) *).
 intros h0.
 assert (h1 := l52 h0).
 apply t130. exact h1.
Qed.
Lemma t131 : p54 -> p114 -> p53.
 intros h0 h1.
 refine (add r57 r58 i30 i55 i29 h0 h1 _) ; finalize.
Qed.
Lemma l50 : s1 -> p53 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3)) - (2 * Mx1 * Mx2 * Mx3 + 3 * Mx3 * Mx3 - Mx2 * Mx1 * Mx2 * Mx3) + (float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3) - 3 * Mx3 * Mx3), [-2.87894e-11, 2.87894e-11]) *).
 intros h0.
 assert (h1 := l51 h0).
 assert (h2 := l105 h0).
 apply t131. exact h1. exact h2.
Qed.
Lemma t132 : p53 -> p52.
 intros h0.
 refine (add_mibs _ _ _ _ i29 h0) ; finalize.
Qed.
Lemma l49 : s1 -> p52 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3)) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3) - (2 * Mx1 * Mx2 * Mx3 + 3 * Mx3 * Mx3 - Mx2 * Mx1 * Mx2 * Mx3 + 3 * Mx3 * Mx3), [-2.87894e-11, 2.87894e-11]) *).
 intros h0.
 assert (h1 := l50 h0).
 apply t132. exact h1.
Qed.
Lemma t133 : p49 -> p52 -> p48.
 intros h0 h1.
 refine (add r54 r55 i4 i29 i27 h0 h1 _) ; finalize.
Qed.
Lemma l46 : s1 -> p48 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3)) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - (float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3)) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) + (float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3)) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3) - (2 * Mx1 * Mx2 * Mx3 + 3 * Mx3 * Mx3 - Mx2 * Mx1 * Mx2 * Mx3 + 3 * Mx3 * Mx3)), [-3.24274e-11, 3.24274e-11]) *).
 intros h0.
 assert (h1 := l47 h0).
 assert (h2 := l49 h0).
 apply t133. exact h1. exact h2.
Qed.
Lemma t134 : p48 -> p47.
 intros h0.
 refine (sub_xals _ _ _ i27 h0) ; finalize.
Qed.
Lemma l45 : s1 -> p47 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3)) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - (2 * Mx1 * Mx2 * Mx3 + 3 * Mx3 * Mx3 - Mx2 * Mx1 * Mx2 * Mx3 + 3 * Mx3 * Mx3), [-3.24274e-11, 3.24274e-11]) *).
 intros h0.
 assert (h1 := l46 h0).
 apply t134. exact h1.
Qed.
Lemma t135 : p47 -> p94 -> p46.
 intros h0 h1.
 refine (sub r51 r52 i27 i45 i26 h0 h1 _) ; finalize.
Qed.
Lemma l44 : s1 -> p46 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3)) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - (2 * Mx1 * Mx2 * Mx3 + 3 * Mx3 * Mx3 - Mx2 * Mx1 * Mx2 * Mx3 + 3 * Mx3 * Mx3) - (x2 - Mx2), [-3.24283e-11, 3.24283e-11]) *).
 intros h0.
 assert (h1 := l45 h0).
 assert (h2 := l87 h0).
 apply t135. exact h1. exact h2.
Qed.
Lemma t136 : p46 -> p45.
 intros h0.
 refine (sub_mibs _ _ _ _ i26 h0) ; finalize.
Qed.
Lemma l43 : s1 -> p45 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3)) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - x2 - Mr2, [-3.24283e-11, 3.24283e-11]) *).
 intros h0.
 assert (h1 := l44 h0).
 apply t136. exact h1.
Qed.
Lemma t137 : p8 -> p45 -> p7.
 intros h0 h1.
 refine (add r48 r49 i4 i26 i3 h0 h1 _) ; finalize.
Qed.
Lemma l6 : s1 -> p7 (* BND(r2 - (float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3)) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - x2) + (float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(2 * x1) * x2) * x3) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - float<53,-1074,ne>(float<53,-1074,ne>(float<53,-1074,ne>(x2 * x1) * x2) * x3)) + float<53,-1074,ne>(float<53,-1074,ne>(3 * x3) * x3)) - x2 - Mr2), [-3.60663e-11, 3.60663e-11]) *).
 intros h0.
 assert (h1 := l7 h0).
 assert (h2 := l43 h0).
 apply t137. exact h1. exact h2.
Qed.
Lemma t138 : p7 -> p6.
 intros h0.
 refine (sub_xals _ _ _ i3 h0) ; finalize.
Qed.
Lemma l5 : s1 -> p6 (* BND(r2 - Mr2, [-3.60663e-11, 3.60663e-11]) *).
 intros h0.
 assert (h1 := l6 h0).
 apply t138. exact h1.
Qed.
Lemma t139 : p6 -> p5.
 intros h0.
 refine (abs_of_bnd_o r5 i3 i2 h0 _) ; finalize.
Qed.
Lemma l4 : s1 -> p5 (* ABS(r2 - Mr2, [0, 3.60663e-11]) *).
 intros h0.
 assert (h1 := l5 h0).
 apply t139. exact h1.
Qed.
Lemma t140 : p5 -> p4.
 intros h0.
 refine (uabs_of_abs r5 i2 h0) ; finalize.
Qed.
Lemma l3 : s1 -> p4 (* BND(|r2 - Mr2|, [0, 3.60663e-11]) *).
 intros h0.
 assert (h1 := l4 h0).
 apply t140. exact h1.
Qed.
Lemma l1 : s1 -> False.
 intros h0.
 assert (h1 := l2 h0).
 assert (h2 := l3 h0).
 refine (simplify (Tatom false (Abnd 0%nat i2)) Tfalse (Abnd 0%nat i2) (List.cons r4 List.nil) h2 h1 _) ; finalize.
Qed.
End Generated_by_Gappa.
Require Import Flocq.Core.Fcore.
Require Import Gappa.Gappa_library.
Section Generated_by_Gappa.
Variable _Mu : R.
Definition f1 := Float2 (-25) (2).
Definition f2 := Float2 (25) (2).
Definition i1 := makepairF f1 f2.
Notation p1 := (BND _Mu i1). (* BND(Mu, [-100, 100]) *)
Variable _Mv : R.
Definition f3 := Float2 (5) (2).
Definition f4 := Float2 (625) (5).
Definition i2 := makepairF f3 f4.
Notation p2 := (BND _Mv i2). (* BND(Mv, [20, 20000]) *)
Definition s3 := (p1 /\ p2).
Variable _MT : R.
Definition f5 := Float2 (-15) (1).
Definition f6 := Float2 (25) (1).
Definition i3 := makepairF f5 f6.
Notation p3 := (BND _MT i3). (* BND(MT, [-30, 50]) *)
Definition s2 := (s3 /\ p3).
Notation _Mc1 := (float10R (Float10 (3314) (-1))).
Notation _c1 := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  _Mc1).
Notation _Mc2 := (float10R (Float10 (6) (-1))).
Notation _c2 := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  _Mc2).
Notation _T := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  _MT).
Notation r16 := ((_c2 * _T)%R).
Notation r15 := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  r16).
Notation r12 := ((_c1 + r15)%R).
Notation _t1 := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  r12).
Notation r10 := ((- _t1)%R).
Notation _v := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  _Mv).
Notation r9 := ((r10 * _v)%R).
Notation r8 := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  r9).
Notation _u := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  _Mu).
Notation r24 := ((_t1 + _u)%R).
Notation r23 := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  r24).
Notation r22 := ((r23 * r23)%R).
Notation r21 := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  r22).
Notation r7 := ((r8 / r21)%R).
Notation _r := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  r7).
Notation r30 := ((_Mc2 * _MT)%R).
Notation _Mt1 := ((_Mc1 + r30)%R).
Notation r28 := ((- _Mt1)%R).
Notation r27 := ((r28 * _Mv)%R).
Notation r32 := ((_Mt1 + _Mu)%R).
Notation r31 := ((r32 * r32)%R).
Notation _Mr := ((r27 / r31)%R).
Notation r5 := ((_r - _Mr)%R).
Notation r4 := ((Rabs r5)%R).
Definition f7 := Float2 (0) (0).
Definition f8 := Float2 (1025540925133263559) (-102).
Definition i4 := makepairF f7 f8.
Notation p4 := (BND r4 i4). (* BND(|r - Mr|, [0, 2.02252e-13]) *)
Definition s4 := (not p4).
Definition s1 := (s2 /\ s4).
Lemma l2 : s1 -> s4.
 intros h0.
 assert (h1 := h0).
 exact (proj2 h1).
Qed.
Notation p5 := (ABS r5 i4). (* ABS(r - Mr, [0, 2.02252e-13]) *)
Definition f9 := Float2 (-1025540925133263559) (-102).
Definition f10 := Float2 (3) (-44).
Definition i5 := makepairF f9 f10.
Notation p6 := (BND r5 i5). (* BND(r - Mr, [-2.02252e-13, 1.7053e-13]) *)
Notation r34 := ((_r - r7)%R).
Notation r35 := ((r7 - _Mr)%R).
Notation r33 := ((r34 + r35)%R).
Notation p7 := (BND r33 i5). (* BND(r - float<53,-1074,ne>(-t1 * v) / float<53,-1074,ne>(float<53,-1074,ne>(t1 + u) * float<53,-1074,ne>(t1 + u)) + (float<53,-1074,ne>(-t1 * v) / float<53,-1074,ne>(float<53,-1074,ne>(t1 + u) * float<53,-1074,ne>(t1 + u)) - Mr), [-2.02252e-13, 1.7053e-13]) *)
Definition f11 := Float2 (-1) (-46).
Definition f12 := Float2 (1) (-46).
Definition i6 := makepairF f11 f12.
Notation p8 := (BND r34 i6). (* BND(r - float<53,-1074,ne>(-t1 * v) / float<53,-1074,ne>(float<53,-1074,ne>(t1 + u) * float<53,-1074,ne>(t1 + u)), [-1.42109e-14, 1.42109e-14]) *)
Definition f13 := Float2 (1) (-6).
Definition f14 := Float2 (1) (8).
Definition i7 := makepairF f13 f14.
Notation p9 := (ABS r7 i7). (* ABS(float<53,-1074,ne>(-t1 * v) / float<53,-1074,ne>(float<53,-1074,ne>(t1 + u) * float<53,-1074,ne>(t1 + u)), [0.015625, 256]) *)
Definition f15 := Float2 (1) (12).
Definition f16 := Float2 (1) (23).
Definition i8 := makepairF f15 f16.
Notation p10 := (ABS r8 i8). (* ABS(float<53,-1074,ne>(-t1 * v), [4096, 8.38861e+06]) *)
Definition f17 := Float2 (-1) (23).
Definition f18 := Float2 (-1) (12).
Definition i9 := makepairF f17 f18.
Notation p11 := (BND r8 i9). (* BND(float<53,-1074,ne>(-t1 * v), [-8.38861e+06, -4096]) *)
Notation p12 := (BND r9 i9). (* BND(-t1 * v, [-8.38861e+06, -4096]) *)
Definition f19 := Float2 (-3) (7).
Definition f20 := Float2 (-1) (8).
Definition i10 := makepairF f19 f20.
Notation p13 := (BND r10 i10). (* BND(-t1, [-384, -256]) *)
Definition f21 := Float2 (19) (4).
Definition f22 := Float2 (3) (7).
Definition i11 := makepairF f21 f22.
Notation p14 := (BND _t1 i11). (* BND(t1, [304, 384]) *)
Definition f23 := Float2 (2756695553159987) (-43).
Definition i12 := makepairF f23 f22.
Notation p15 := (BND r12 i12). (* BND(c1 + float<53,-1074,ne>(c2 * T), [313.4, 384]) *)
Definition f24 := Float2 (2915025227559731) (-43).
Definition i13 := makepairF f24 f24.
Notation p16 := (BND _c1 i13). (* BND(c1, [331.4, 331.4]) *)
Definition f25 := Float2 (746246458255291187) (-51).
Definition f26 := Float2 (186561614563822797) (-49).
Definition i14 := makepairF f25 f26.
Notation p17 := (BND _Mc1 i14). (* BND(Mc1, [331.4, 331.4]) *)
Lemma t1 : p17.
 refine (constant10 _ i14 _) ; finalize.
Qed.
Lemma l16 : s1 -> p17 (* BND(Mc1, [331.4, 331.4]) *).
 intros h0.
 apply t1.
Qed.
Definition f27 := Float2 (11660100910238925) (-45).
Definition i15 := makepairF f24 f27.
Notation p18 := (BND _Mc1 i15). (* BND(Mc1, [331.4, 331.4]) *)
Lemma t2 : p18 -> p16.
 intros h0.
 refine (float_round_ne _ _ _Mc1 i15 i13 h0 _) ; finalize.
Qed.
Lemma l15 : s1 -> p16 (* BND(c1, [331.4, 331.4]) *).
 intros h0.
 assert (h1 := l16 h0).
 apply t2. refine (subset _Mc1 i14 i15 h1 _) ; finalize.
Qed.
Definition f28 := Float2 (-9) (1).
Definition f29 := Float2 (1) (5).
Definition i16 := makepairF f28 f29.
Notation p19 := (BND r15 i16). (* BND(float<53,-1074,ne>(c2 * T), [-18, 32]) *)
Notation p20 := (BND r16 i16). (* BND(c2 * T, [-18, 32]) *)
Definition f30 := Float2 (5404319552844595) (-53).
Definition i17 := makepairF f30 f30.
Notation p21 := (BND _c2 i17). (* BND(c2, [0.6, 0.6]) *)
Definition f31 := Float2 (43234556422756761) (-56).
Definition f32 := Float2 (345876451382054093) (-59).
Definition i18 := makepairF f31 f32.
Notation p22 := (BND _Mc2 i18). (* BND(Mc2, [0.6, 0.6]) *)
Lemma t3 : p22.
 refine (constant10 _ i18 _) ; finalize.
Qed.
Lemma l20 : s1 -> p22 (* BND(Mc2, [0.6, 0.6]) *).
 intros h0.
 apply t3.
Qed.
Definition f33 := Float2 (21617278211378381) (-55).
Definition i19 := makepairF f30 f33.
Notation p23 := (BND _Mc2 i19). (* BND(Mc2, [0.6, 0.6]) *)
Lemma t4 : p23 -> p21.
 intros h0.
 refine (float_round_ne _ _ _Mc2 i19 i17 h0 _) ; finalize.
Qed.
Lemma l19 : s1 -> p21 (* BND(c2, [0.6, 0.6]) *).
 intros h0.
 assert (h1 := l20 h0).
 apply t4. refine (subset _Mc2 i18 i19 h1 _) ; finalize.
Qed.
Definition f34 := Float2 (13) (2).
Definition i20 := makepairF f5 f34.
Notation p24 := (BND _T i20). (* BND(T, [-30, 52]) *)
Lemma l23 : s1 -> s2.
 intros h0.
 assert (h1 := h0).
 exact (proj1 h1).
Qed.
Lemma l22 : s1 -> p3 (* BND(MT, [-30, 50]) *).
 intros h0.
 assert (h1 := l23 h0).
 exact (proj2 h1).
Qed.
Notation p25 := (BND _MT i20). (* BND(MT, [-30, 52]) *)
Lemma t5 : p25 -> p24.
 intros h0.
 refine (float_round_ne _ _ _MT i20 i20 h0 _) ; finalize.
Qed.
Lemma l21 : s1 -> p24 (* BND(T, [-30, 52]) *).
 intros h0.
 assert (h1 := l22 h0).
 apply t5. refine (subset _MT i3 i20 h1 _) ; finalize.
Qed.
Definition f35 := Float2 (1) (-1).
Definition i21 := makepairF f35 f30.
Notation p26 := (BND _c2 i21). (* BND(c2, [0.5, 0.6]) *)
Lemma t6 : p26 -> p24 -> p20.
 intros h0 h1.
 refine (mul_po _c2 _T i21 i20 i16 h0 h1 _) ; finalize.
Qed.
Lemma l18 : s1 -> p20 (* BND(c2 * T, [-18, 32]) *).
 intros h0.
 assert (h1 := l19 h0).
 assert (h2 := l21 h0).
 apply t6. refine (subset _c2 i17 i21 h1 _) ; finalize. exact h2.
Qed.
Lemma t7 : p20 -> p19.
 intros h0.
 refine (float_round_ne _ _ r16 i16 i16 h0 _) ; finalize.
Qed.
Lemma l17 : s1 -> p19 (* BND(float<53,-1074,ne>(c2 * T), [-18, 32]) *).
 intros h0.
 assert (h1 := l18 h0).
 apply t7. exact h1.
Qed.
Definition f36 := Float2 (11) (5).
Definition i22 := makepairF f24 f36.
Notation p27 := (BND _c1 i22). (* BND(c1, [331.4, 352]) *)
Lemma t8 : p27 -> p19 -> p15.
 intros h0 h1.
 refine (add _c1 r15 i22 i16 i12 h0 h1 _) ; finalize.
Qed.
Lemma l14 : s1 -> p15 (* BND(c1 + float<53,-1074,ne>(c2 * T), [313.4, 384]) *).
 intros h0.
 assert (h1 := l15 h0).
 assert (h2 := l17 h0).
 apply t8. refine (subset _c1 i13 i22 h1 _) ; finalize. exact h2.
Qed.
Notation p28 := (BND r12 i11). (* BND(c1 + float<53,-1074,ne>(c2 * T), [304, 384]) *)
Lemma t9 : p28 -> p14.
 intros h0.
 refine (float_round_ne _ _ r12 i11 i11 h0 _) ; finalize.
Qed.
Lemma l13 : s1 -> p14 (* BND(t1, [304, 384]) *).
 intros h0.
 assert (h1 := l14 h0).
 apply t9. refine (subset r12 i12 i11 h1 _) ; finalize.
Qed.
Definition i23 := makepairF f14 f22.
Notation p29 := (BND _t1 i23). (* BND(t1, [256, 384]) *)
Lemma t10 : p29 -> p13.
 intros h0.
 refine (neg _t1 i23 i10 h0 _) ; finalize.
Qed.
Lemma l12 : s1 -> p13 (* BND(-t1, [-384, -256]) *).
 intros h0.
 assert (h1 := l13 h0).
 apply t10. refine (subset _t1 i11 i23 h1 _) ; finalize.
Qed.
Definition f37 := Float2 (1) (4).
Definition f38 := Float2 (5) (12).
Definition i24 := makepairF f37 f38.
Notation p30 := (BND _v i24). (* BND(v, [16, 20480]) *)
Lemma l26 : s1 -> s3.
 intros h0.
 assert (h1 := l23 h0).
 exact (proj1 h1).
Qed.
Lemma l25 : s1 -> p2 (* BND(Mv, [20, 20000]) *).
 intros h0.
 assert (h1 := l26 h0).
 exact (proj2 h1).
Qed.
Notation p31 := (BND _Mv i24). (* BND(Mv, [16, 20480]) *)
Lemma t11 : p31 -> p30.
 intros h0.
 refine (float_round_ne _ _ _Mv i24 i24 h0 _) ; finalize.
Qed.
Lemma l24 : s1 -> p30 (* BND(v, [16, 20480]) *).
 intros h0.
 assert (h1 := l25 h0).
 apply t11. refine (subset _Mv i2 i24 h1 _) ; finalize.
Qed.
Lemma t12 : p13 -> p30 -> p12.
 intros h0 h1.
 refine (mul_np r10 _v i10 i24 i9 h0 h1 _) ; finalize.
Qed.
Lemma l11 : s1 -> p12 (* BND(-t1 * v, [-8.38861e+06, -4096]) *).
 intros h0.
 assert (h1 := l12 h0).
 assert (h2 := l24 h0).
 apply t12. exact h1. exact h2.
Qed.
Lemma t13 : p12 -> p11.
 intros h0.
 refine (float_round_ne _ _ r9 i9 i9 h0 _) ; finalize.
Qed.
Lemma l10 : s1 -> p11 (* BND(float<53,-1074,ne>(-t1 * v), [-8.38861e+06, -4096]) *).
 intros h0.
 assert (h1 := l11 h0).
 apply t13. exact h1.
Qed.
Lemma t14 : p11 -> p10.
 intros h0.
 refine (abs_of_bnd_n r8 i9 i8 h0 _) ; finalize.
Qed.
Lemma l9 : s1 -> p10 (* ABS(float<53,-1074,ne>(-t1 * v), [4096, 8.38861e+06]) *).
 intros h0.
 assert (h1 := l10 h0).
 apply t14. exact h1.
Qed.
Definition f39 := Float2 (1) (15).
Definition f40 := Float2 (1) (18).
Definition i25 := makepairF f39 f40.
Notation p32 := (ABS r21 i25). (* ABS(float<53,-1074,ne>(float<53,-1074,ne>(t1 + u) * float<53,-1074,ne>(t1 + u)), [32768, 262144]) *)
Notation p33 := (BND r21 i25). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(t1 + u) * float<53,-1074,ne>(t1 + u)), [32768, 262144]) *)
Notation p34 := (BND r22 i25). (* BND(float<53,-1074,ne>(t1 + u) * float<53,-1074,ne>(t1 + u), [32768, 262144]) *)
Definition f41 := Float2 (3) (6).
Definition f42 := Float2 (1) (9).
Definition i26 := makepairF f41 f42.
Notation p35 := (ABS r23 i26). (* ABS(float<53,-1074,ne>(t1 + u), [192, 512]) *)
Notation p36 := (BND r23 i26). (* BND(float<53,-1074,ne>(t1 + u), [192, 512]) *)
Notation p37 := (BND r24 i26). (* BND(t1 + u, [192, 512]) *)
Definition f43 := Float2 (-7) (4).
Definition f44 := Float2 (1) (7).
Definition i27 := makepairF f43 f44.
Notation p38 := (BND _u i27). (* BND(u, [-112, 128]) *)
Lemma l34 : s1 -> p1 (* BND(Mu, [-100, 100]) *).
 intros h0.
 assert (h1 := l26 h0).
 exact (proj1 h1).
Qed.
Notation p39 := (BND _Mu i27). (* BND(Mu, [-112, 128]) *)
Lemma t15 : p39 -> p38.
 intros h0.
 refine (float_round_ne _ _ _Mu i27 i27 h0 _) ; finalize.
Qed.
Lemma l33 : s1 -> p38 (* BND(u, [-112, 128]) *).
 intros h0.
 assert (h1 := l34 h0).
 apply t15. refine (subset _Mu i1 i27 h1 _) ; finalize.
Qed.
Lemma t16 : p14 -> p38 -> p37.
 intros h0 h1.
 refine (add _t1 _u i11 i27 i26 h0 h1 _) ; finalize.
Qed.
Lemma l32 : s1 -> p37 (* BND(t1 + u, [192, 512]) *).
 intros h0.
 assert (h1 := l13 h0).
 assert (h2 := l33 h0).
 apply t16. exact h1. exact h2.
Qed.
Lemma t17 : p37 -> p36.
 intros h0.
 refine (float_round_ne _ _ r24 i26 i26 h0 _) ; finalize.
Qed.
Lemma l31 : s1 -> p36 (* BND(float<53,-1074,ne>(t1 + u), [192, 512]) *).
 intros h0.
 assert (h1 := l32 h0).
 apply t17. exact h1.
Qed.
Lemma t18 : p36 -> p35.
 intros h0.
 refine (abs_of_bnd_p r23 i26 i26 h0 _) ; finalize.
Qed.
Lemma l30 : s1 -> p35 (* ABS(float<53,-1074,ne>(t1 + u), [192, 512]) *).
 intros h0.
 assert (h1 := l31 h0).
 apply t18. exact h1.
Qed.
Lemma t19 : p35 -> p34.
 intros h0.
 refine (square r23 i26 i25 h0 _) ; finalize.
Qed.
Lemma l29 : s1 -> p34 (* BND(float<53,-1074,ne>(t1 + u) * float<53,-1074,ne>(t1 + u), [32768, 262144]) *).
 intros h0.
 assert (h1 := l30 h0).
 apply t19. exact h1.
Qed.
Lemma t20 : p34 -> p33.
 intros h0.
 refine (float_round_ne _ _ r22 i25 i25 h0 _) ; finalize.
Qed.
Lemma l28 : s1 -> p33 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(t1 + u) * float<53,-1074,ne>(t1 + u)), [32768, 262144]) *).
 intros h0.
 assert (h1 := l29 h0).
 apply t20. exact h1.
Qed.
Lemma t21 : p33 -> p32.
 intros h0.
 refine (abs_of_bnd_p r21 i25 i25 h0 _) ; finalize.
Qed.
Lemma l27 : s1 -> p32 (* ABS(float<53,-1074,ne>(float<53,-1074,ne>(t1 + u) * float<53,-1074,ne>(t1 + u)), [32768, 262144]) *).
 intros h0.
 assert (h1 := l28 h0).
 apply t21. exact h1.
Qed.
Lemma t22 : p10 -> p32 -> p9.
 intros h0 h1.
 refine (div_aa r8 r21 i8 i25 i7 h0 h1 _) ; finalize.
Qed.
Lemma l8 : s1 -> p9 (* ABS(float<53,-1074,ne>(-t1 * v) / float<53,-1074,ne>(float<53,-1074,ne>(t1 + u) * float<53,-1074,ne>(t1 + u)), [0.015625, 256]) *).
 intros h0.
 assert (h1 := l9 h0).
 assert (h2 := l27 h0).
 apply t22. exact h1. exact h2.
Qed.
Lemma t23 : p9 -> p8.
 intros h0.
 refine (float_absolute_wide_ne _ _ r7 i7 i6 h0 _) ; finalize.
Qed.
Lemma l7 : s1 -> p8 (* BND(r - float<53,-1074,ne>(-t1 * v) / float<53,-1074,ne>(float<53,-1074,ne>(t1 + u) * float<53,-1074,ne>(t1 + u)), [-1.42109e-14, 1.42109e-14]) *).
 intros h0.
 assert (h1 := l8 h0).
 apply t23. exact h1.
Qed.
Definition f45 := Float2 (-953483331095335623) (-102).
Definition f46 := Float2 (11) (-46).
Definition i28 := makepairF f45 f46.
Notation p40 := (BND r35 i28). (* BND(float<53,-1074,ne>(-t1 * v) / float<53,-1074,ne>(float<53,-1074,ne>(t1 + u) * float<53,-1074,ne>(t1 + u)) - Mr, [-1.88041e-13, 1.56319e-13]) *)
Definition f47 := Float2 (-17) (-54).
Definition f48 := Float2 (768942315270231799) (-109).
Definition i29 := makepairF f47 f48.
Notation p41 := (REL r7 _Mr i29). (* REL(float<53,-1074,ne>(-t1 * v) / float<53,-1074,ne>(float<53,-1074,ne>(t1 + u) * float<53,-1074,ne>(t1 + u)), Mr, [-9.4369e-16, 1.18474e-15]) *)
Definition f49 := Float2 (-1) (-51).
Definition f50 := Float2 (20695685667975899) (-106).
Definition i30 := makepairF f49 f50.
Notation p42 := (REL r8 r27 i30). (* REL(float<53,-1074,ne>(-t1 * v), -Mt1 * Mv, [-4.44089e-16, 2.55094e-16]) *)
Definition f51 := Float2 (-1) (-53).
Definition f52 := Float2 (1) (-53).
Definition i31 := makepairF f51 f52.
Notation p43 := (REL r8 r9 i31). (* REL(float<53,-1074,ne>(-t1 * v), -t1 * v, [-1.11022e-16, 1.11022e-16]) *)
Notation p44 := (FIX r9 (-92)). (* FIX(-t1 * v, -92) *)
Notation p45 := (FIX r10 (-44)). (* FIX(-t1, -44) *)
Notation p46 := (FIX _t1 (-44)). (* FIX(t1, -44) *)
Notation p47 := (FLT _t1 (53)). (* FLT(t1, 53) *)
Lemma t24 : p47.
 refine (flt_of_float _ _ _ (53) _ _) ; finalize.
Qed.
Lemma l42 : s1 -> p47 (* FLT(t1, 53) *).
 intros h0.
 apply t24.
Qed.
Definition i32 := makepairF f14 f42.
Notation p48 := (ABS _t1 i32). (* ABS(t1, [256, 512]) *)
Notation p49 := (BND _t1 i32). (* BND(t1, [256, 512]) *)
Lemma t25 : p49 -> p48.
 intros h0.
 refine (abs_of_bnd_p _t1 i32 i32 h0 _) ; finalize.
Qed.
Lemma l43 : s1 -> p48 (* ABS(t1, [256, 512]) *).
 intros h0.
 assert (h1 := l13 h0).
 apply t25. refine (subset _t1 i11 i32 h1 _) ; finalize.
Qed.
Lemma t26 : p47 -> p48 -> p46.
 intros h0 h1.
 refine (fix_of_flt_bnd _t1 i32 (-44) (53) h0 h1 _) ; finalize.
Qed.
Lemma l41 : s1 -> p46 (* FIX(t1, -44) *).
 intros h0.
 assert (h1 := l42 h0).
 assert (h2 := l43 h0).
 apply t26. exact h1. exact h2.
Qed.
Lemma t27 : p46 -> p45.
 intros h0.
 refine (neg_fix _t1 (-44) (-44) h0 _) ; finalize.
Qed.
Lemma l40 : s1 -> p45 (* FIX(-t1, -44) *).
 intros h0.
 assert (h1 := l41 h0).
 apply t27. exact h1.
Qed.
Notation p50 := (FIX _v (-48)). (* FIX(v, -48) *)
Notation p51 := (FLT _v (53)). (* FLT(v, 53) *)
Lemma t28 : p51.
 refine (flt_of_float _ _ _ (53) _ _) ; finalize.
Qed.
Lemma l45 : s1 -> p51 (* FLT(v, 53) *).
 intros h0.
 apply t28.
Qed.
Definition i33 := makepairF f37 f39.
Notation p52 := (ABS _v i33). (* ABS(v, [16, 32768]) *)
Notation p53 := (BND _v i33). (* BND(v, [16, 32768]) *)
Lemma t29 : p53 -> p52.
 intros h0.
 refine (abs_of_bnd_p _v i33 i33 h0 _) ; finalize.
Qed.
Lemma l46 : s1 -> p52 (* ABS(v, [16, 32768]) *).
 intros h0.
 assert (h1 := l24 h0).
 apply t29. refine (subset _v i24 i33 h1 _) ; finalize.
Qed.
Lemma t30 : p51 -> p52 -> p50.
 intros h0 h1.
 refine (fix_of_flt_bnd _v i33 (-48) (53) h0 h1 _) ; finalize.
Qed.
Lemma l44 : s1 -> p50 (* FIX(v, -48) *).
 intros h0.
 assert (h1 := l45 h0).
 assert (h2 := l46 h0).
 apply t30. exact h1. exact h2.
Qed.
Lemma t31 : p45 -> p50 -> p44.
 intros h0 h1.
 refine (mul_fix r10 _v (-44) (-48) (-92) h0 h1 _) ; finalize.
Qed.
Lemma l39 : s1 -> p44 (* FIX(-t1 * v, -92) *).
 intros h0.
 assert (h1 := l40 h0).
 assert (h2 := l44 h0).
 apply t31. exact h1. exact h2.
Qed.
Lemma t32 : p44 -> p43.
 intros h0.
 refine (rel_of_fix_float_ne _ _ (-92) r9 i31 h0 _) ; finalize.
Qed.
Lemma l38 : s1 -> p43 (* REL(float<53,-1074,ne>(-t1 * v), -t1 * v, [-1.11022e-16, 1.11022e-16]) *).
 intros h0.
 assert (h1 := l39 h0).
 apply t32. exact h1.
Qed.
Definition f53 := Float2 (-3) (-53).
Definition f54 := Float2 (93507891305879245) (-109).
Definition i34 := makepairF f53 f54.
Notation p54 := (REL r9 r27 i34). (* REL(-t1 * v, -Mt1 * Mv, [-3.33067e-16, 1.44072e-16]) *)
Definition f55 := Float2 (-1) (-52).
Definition f56 := Float2 (42900594535902613) (-110).
Definition i35 := makepairF f55 f56.
Notation p55 := (REL r10 r28 i35). (* REL(-t1, -Mt1, [-2.22045e-16, 3.30494e-17]) *)
Definition f57 := Float2 (171602378143610449) (-112).
Definition i36 := makepairF f55 f57.
Notation p56 := (REL _t1 _Mt1 i36). (* REL(t1, Mt1, [-2.22045e-16, 3.30494e-17]) *)
Notation p57 := (NZR _Mt1). (* NZR(Mt1) *)
Definition f58 := Float2 (352857030804478361) (-50).
Definition i37 := makepairF f58 f22.
Notation p58 := (ABS _Mt1 i37). (* ABS(Mt1, [313.4, 384]) *)
Definition f59 := Float2 (813800452665848629) (-51).
Definition i38 := makepairF f58 f59.
Notation p59 := (BND _Mt1 i38). (* BND(Mt1, [313.4, 361.4]) *)
Definition f60 := Float2 (-40532396646334465) (-51).
Definition f61 := Float2 (67553994410557441) (-51).
Definition i39 := makepairF f60 f61.
Notation p60 := (BND r30 i39). (* BND(Mc2 * MT, [-18, 30]) *)
Definition i40 := makepairF f35 f33.
Notation p61 := (BND _Mc2 i40). (* BND(Mc2, [0.5, 0.6]) *)
Lemma t33 : p61 -> p3 -> p60.
 intros h0 h1.
 refine (mul_po _Mc2 _MT i40 i3 i39 h0 h1 _) ; finalize.
Qed.
Lemma l53 : s1 -> p60 (* BND(Mc2 * MT, [-18, 30]) *).
 intros h0.
 assert (h1 := l20 h0).
 assert (h2 := l22 h0).
 apply t33. refine (subset _Mc2 i18 i40 h1 _) ; finalize. exact h2.
Qed.
Lemma t34 : p17 -> p60 -> p59.
 intros h0 h1.
 refine (add _Mc1 r30 i14 i39 i38 h0 h1 _) ; finalize.
Qed.
Lemma l52 : s1 -> p59 (* BND(Mt1, [313.4, 361.4]) *).
 intros h0.
 assert (h1 := l16 h0).
 assert (h2 := l53 h0).
 apply t34. exact h1. exact h2.
Qed.
Notation p62 := (BND _Mt1 i37). (* BND(Mt1, [313.4, 384]) *)
Lemma t35 : p62 -> p58.
 intros h0.
 refine (abs_of_bnd_p _Mt1 i37 i37 h0 _) ; finalize.
Qed.
Lemma l51 : s1 -> p58 (* ABS(Mt1, [313.4, 384]) *).
 intros h0.
 assert (h1 := l52 h0).
 apply t35. refine (subset _Mt1 i38 i37 h1 _) ; finalize.
Qed.
Definition f62 := Float2 (1) (0).
Definition i41 := makepairF f62 f42.
Notation p63 := (ABS _Mt1 i41). (* ABS(Mt1, [1, 512]) *)
Lemma t36 : p63 -> p57.
 intros h0.
 refine (nzr_of_abs _Mt1 i41 h0 _) ; finalize.
Qed.
Lemma l50 : s1 -> p57 (* NZR(Mt1) *).
 intros h0.
 assert (h1 := l51 h0).
 apply t36. refine (abs_subset _Mt1 i37 i41 h1 _) ; finalize.
Qed.
Notation r37 := ((_t1 - _Mt1)%R).
Notation r36 := ((r37 / _Mt1)%R).
Notation p64 := (BND r36 i36). (* BND((t1 - Mt1) / Mt1, [-2.22045e-16, 3.30494e-17]) *)
Definition f63 := Float2 (-143371038606177075) (-101).
Definition f64 := Float2 (26259856108499763) (-101).
Definition i42 := makepairF f63 f64.
Notation p65 := (BND r37 i42). (* BND(t1 - Mt1, [-5.65499e-14, 1.03577e-14]) *)
Notation r39 := ((_t1 - r12)%R).
Notation r40 := ((r12 - _Mt1)%R).
Notation r38 := ((r39 + r40)%R).
Notation p66 := (BND r38 i42). (* BND(t1 - (c1 + float<53,-1074,ne>(c2 * T)) + (c1 + float<53,-1074,ne>(c2 * T) - Mt1), [-5.65499e-14, 1.03577e-14]) *)
Definition f65 := Float2 (-1) (-45).
Definition f66 := Float2 (1) (-45).
Definition i43 := makepairF f65 f66.
Notation p67 := (BND r39 i43). (* BND(t1 - (c1 + float<53,-1074,ne>(c2 * T)), [-2.84217e-14, 2.84217e-14]) *)
Notation p68 := (ABS r12 i41). (* ABS(c1 + float<53,-1074,ne>(c2 * T), [1, 512]) *)
Notation p69 := (BND r12 i41). (* BND(c1 + float<53,-1074,ne>(c2 * T), [1, 512]) *)
Lemma t37 : p69 -> p68.
 intros h0.
 refine (abs_of_bnd_p r12 i41 i41 h0 _) ; finalize.
Qed.
Lemma l58 : s1 -> p68 (* ABS(c1 + float<53,-1074,ne>(c2 * T), [1, 512]) *).
 intros h0.
 assert (h1 := l14 h0).
 apply t37. refine (subset r12 i12 i41 h1 _) ; finalize.
Qed.
Lemma t38 : p68 -> p67.
 intros h0.
 refine (float_absolute_wide_ne _ _ r12 i41 i43 h0 _) ; finalize.
Qed.
Lemma l57 : s1 -> p67 (* BND(t1 - (c1 + float<53,-1074,ne>(c2 * T)), [-2.84217e-14, 2.84217e-14]) *).
 intros h0.
 assert (h1 := l58 h0).
 apply t38. exact h1.
Qed.
Definition f67 := Float2 (-71313444568249139) (-101).
Definition f68 := Float2 (-45797737929428173) (-101).
Definition i44 := makepairF f67 f68.
Notation p70 := (BND r40 i44). (* BND(c1 + float<53,-1074,ne>(c2 * T) - Mt1, [-2.81282e-14, -1.8064e-14]) *)
Notation r42 := ((_c1 - _Mc1)%R).
Notation r43 := ((r15 - r30)%R).
Notation r41 := ((r42 + r43)%R).
Notation p71 := (BND r41 i44). (* BND(c1 - Mc1 + (float<53,-1074,ne>(c2 * T) - Mc2 * MT), [-2.81282e-14, -1.8064e-14]) *)
Definition f69 := Float2 (-13) (-49).
Definition f70 := Float2 (-51) (-51).
Definition i45 := makepairF f69 f70.
Notation p72 := (BND r42 i45). (* BND(c1 - Mc1, [-2.30926e-14, -2.26485e-14]) *)
Lemma t39 : p16 -> p17 -> p72.
 intros h0 h1.
 refine (sub _c1 _Mc1 i13 i14 i45 h0 h1 _) ; finalize.
Qed.
Lemma l61 : s1 -> p72 (* BND(c1 - Mc1, [-2.30926e-14, -2.26485e-14]) *).
 intros h0.
 assert (h1 := l15 h0).
 assert (h2 := l16 h0).
 apply t39. exact h1. exact h2.
Qed.
Definition f71 := Float2 (-12766649412432691) (-101).
Definition f72 := Float2 (11623157319545651) (-101).
Definition i46 := makepairF f71 f72.
Notation p73 := (BND r43 i46). (* BND(float<53,-1074,ne>(c2 * T) - Mc2 * MT, [-5.03556e-15, 4.58453e-15]) *)
Notation r45 := ((r15 - r16)%R).
Notation r46 := ((r16 - r30)%R).
Notation r44 := ((r45 + r46)%R).
Notation p74 := (BND r44 i46). (* BND(float<53,-1074,ne>(c2 * T) - c2 * T + (c2 * T - Mc2 * MT), [-5.03556e-15, 4.58453e-15]) *)
Definition f73 := Float2 (-1) (-49).
Definition f74 := Float2 (1) (-49).
Definition i47 := makepairF f73 f74.
Notation p75 := (BND r45 i47). (* BND(float<53,-1074,ne>(c2 * T) - c2 * T, [-1.77636e-15, 1.77636e-15]) *)
Definition i48 := makepairF f7 f29.
Notation p76 := (ABS r16 i48). (* ABS(c2 * T, [0, 32]) *)
Definition f75 := Float2 (39) (-6).
Definition i49 := makepairF f35 f75.
Notation p77 := (ABS _c2 i49). (* ABS(c2, [0.5, 0.609375]) *)
Notation p78 := (BND _c2 i49). (* BND(c2, [0.5, 0.609375]) *)
Lemma t40 : p78 -> p77.
 intros h0.
 refine (abs_of_bnd_p _c2 i49 i49 h0 _) ; finalize.
Qed.
Lemma l66 : s1 -> p77 (* ABS(c2, [0.5, 0.609375]) *).
 intros h0.
 assert (h1 := l19 h0).
 apply t40. refine (subset _c2 i17 i49 h1 _) ; finalize.
Qed.
Definition i50 := makepairF f7 f34.
Notation p79 := (ABS _T i50). (* ABS(T, [0, 52]) *)
Definition f76 := Float2 (-1) (5).
Definition i51 := makepairF f76 f34.
Notation p80 := (BND _T i51). (* BND(T, [-32, 52]) *)
Lemma t41 : p80 -> p79.
 intros h0.
 refine (abs_of_bnd_o _T i51 i50 h0 _) ; finalize.
Qed.
Lemma l67 : s1 -> p79 (* ABS(T, [0, 52]) *).
 intros h0.
 assert (h1 := l21 h0).
 apply t41. refine (subset _T i20 i51 h1 _) ; finalize.
Qed.
Lemma t42 : p77 -> p79 -> p76.
 intros h0 h1.
 refine (mul_aa _c2 _T i49 i50 i48 h0 h1 _) ; finalize.
Qed.
Lemma l65 : s1 -> p76 (* ABS(c2 * T, [0, 32]) *).
 intros h0.
 assert (h1 := l66 h0).
 assert (h2 := l67 h0).
 apply t42. exact h1. exact h2.
Qed.
Lemma t43 : p76 -> p75.
 intros h0.
 refine (float_absolute_wide_ne _ _ r16 i48 i47 h0 _) ; finalize.
Qed.
Lemma l64 : s1 -> p75 (* BND(float<53,-1074,ne>(c2 * T) - c2 * T, [-1.77636e-15, 1.77636e-15]) *).
 intros h0.
 assert (h1 := l65 h0).
 apply t43. exact h1.
Qed.
Definition f77 := Float2 (-8263049785062195) (-101).
Definition f78 := Float2 (7119557692175155) (-101).
Definition i52 := makepairF f77 f78.
Notation p81 := (BND r46 i52). (* BND(c2 * T - Mc2 * MT, [-3.2592e-15, 2.80817e-15]) *)
Notation r49 := ((_T - _MT)%R).
Notation r48 := ((_c2 * r49)%R).
Notation r51 := ((_c2 - _Mc2)%R).
Notation r50 := ((r51 * _MT)%R).
Notation r47 := ((r48 + r50)%R).
Notation p82 := (BND r47 i52). (* BND(c2 * (T - MT) + (c2 - Mc2) * MT, [-3.2592e-15, 2.80817e-15]) *)
Definition f79 := Float2 (-5404319552844595) (-101).
Definition f80 := Float2 (5404319552844595) (-101).
Definition i53 := makepairF f79 f80.
Notation p83 := (BND r48 i53). (* BND(c2 * (T - MT), [-2.13163e-15, 2.13163e-15]) *)
Definition f81 := Float2 (-1) (-48).
Definition f82 := Float2 (1) (-48).
Definition i54 := makepairF f81 f82.
Notation p84 := (BND r49 i54). (* BND(T - MT, [-3.55271e-15, 3.55271e-15]) *)
Definition f83 := Float2 (1) (6).
Definition i55 := makepairF f7 f83.
Notation p85 := (ABS _MT i55). (* ABS(MT, [0, 64]) *)
Definition i56 := makepairF f76 f83.
Notation p86 := (BND _MT i56). (* BND(MT, [-32, 64]) *)
Lemma t44 : p86 -> p85.
 intros h0.
 refine (abs_of_bnd_o _MT i56 i55 h0 _) ; finalize.
Qed.
Lemma l72 : s1 -> p85 (* ABS(MT, [0, 64]) *).
 intros h0.
 assert (h1 := l22 h0).
 apply t44. refine (subset _MT i3 i56 h1 _) ; finalize.
Qed.
Lemma t45 : p85 -> p84.
 intros h0.
 refine (float_absolute_wide_ne _ _ _MT i55 i54 h0 _) ; finalize.
Qed.
Lemma l71 : s1 -> p84 (* BND(T - MT, [-3.55271e-15, 3.55271e-15]) *).
 intros h0.
 assert (h1 := l72 h0).
 apply t45. exact h1.
Qed.
Lemma t46 : p26 -> p84 -> p83.
 intros h0 h1.
 refine (mul_po _c2 r49 i21 i54 i53 h0 h1 _) ; finalize.
Qed.
Lemma l70 : s1 -> p83 (* BND(c2 * (T - MT), [-2.13163e-15, 2.13163e-15]) *).
 intros h0.
 assert (h1 := l19 h0).
 assert (h2 := l71 h0).
 apply t46. refine (subset _c2 i17 i21 h1 _) ; finalize. exact h2.
Qed.
Definition f84 := Float2 (-325) (-58).
Definition f85 := Float2 (195) (-58).
Definition i57 := makepairF f84 f85.
Notation p87 := (BND r50 i57). (* BND((c2 - Mc2) * MT, [-1.12757e-15, 6.76542e-16]) *)
Definition f86 := Float2 (-13) (-59).
Definition f87 := Float2 (-1) (-56).
Definition i58 := makepairF f86 f87.
Notation p88 := (BND r51 i58). (* BND(c2 - Mc2, [-2.25514e-17, -1.38778e-17]) *)
Lemma t47 : p21 -> p22 -> p88.
 intros h0 h1.
 refine (sub _c2 _Mc2 i17 i18 i58 h0 h1 _) ; finalize.
Qed.
Lemma l74 : s1 -> p88 (* BND(c2 - Mc2, [-2.25514e-17, -1.38778e-17]) *).
 intros h0.
 assert (h1 := l19 h0).
 assert (h2 := l20 h0).
 apply t47. exact h1. exact h2.
Qed.
Lemma t48 : p88 -> p3 -> p87.
 intros h0 h1.
 refine (mul_no r51 _MT i58 i3 i57 h0 h1 _) ; finalize.
Qed.
Lemma l73 : s1 -> p87 (* BND((c2 - Mc2) * MT, [-1.12757e-15, 6.76542e-16]) *).
 intros h0.
 assert (h1 := l74 h0).
 assert (h2 := l22 h0).
 apply t48. exact h1. exact h2.
Qed.
Lemma t49 : p83 -> p87 -> p82.
 intros h0 h1.
 refine (add r48 r50 i53 i57 i52 h0 h1 _) ; finalize.
Qed.
Lemma l69 : s1 -> p82 (* BND(c2 * (T - MT) + (c2 - Mc2) * MT, [-3.2592e-15, 2.80817e-15]) *).
 intros h0.
 assert (h1 := l70 h0).
 assert (h2 := l73 h0).
 apply t49. exact h1. exact h2.
Qed.
Lemma t50 : p82 -> p81.
 intros h0.
 refine (mul_mars _ _ _ _ i52 h0) ; finalize.
Qed.
Lemma l68 : s1 -> p81 (* BND(c2 * T - Mc2 * MT, [-3.2592e-15, 2.80817e-15]) *).
 intros h0.
 assert (h1 := l69 h0).
 apply t50. exact h1.
Qed.
Lemma t51 : p75 -> p81 -> p74.
 intros h0 h1.
 refine (add r45 r46 i47 i52 i46 h0 h1 _) ; finalize.
Qed.
Lemma l63 : s1 -> p74 (* BND(float<53,-1074,ne>(c2 * T) - c2 * T + (c2 * T - Mc2 * MT), [-5.03556e-15, 4.58453e-15]) *).
 intros h0.
 assert (h1 := l64 h0).
 assert (h2 := l68 h0).
 apply t51. exact h1. exact h2.
Qed.
Lemma t52 : p74 -> p73.
 intros h0.
 refine (sub_xals _ _ _ i46 h0) ; finalize.
Qed.
Lemma l62 : s1 -> p73 (* BND(float<53,-1074,ne>(c2 * T) - Mc2 * MT, [-5.03556e-15, 4.58453e-15]) *).
 intros h0.
 assert (h1 := l63 h0).
 apply t52. exact h1.
Qed.
Lemma t53 : p72 -> p73 -> p71.
 intros h0 h1.
 refine (add r42 r43 i45 i46 i44 h0 h1 _) ; finalize.
Qed.
Lemma l60 : s1 -> p71 (* BND(c1 - Mc1 + (float<53,-1074,ne>(c2 * T) - Mc2 * MT), [-2.81282e-14, -1.8064e-14]) *).
 intros h0.
 assert (h1 := l61 h0).
 assert (h2 := l62 h0).
 apply t53. exact h1. exact h2.
Qed.
Lemma t54 : p71 -> p70.
 intros h0.
 refine (add_mibs _ _ _ _ i44 h0) ; finalize.
Qed.
Lemma l59 : s1 -> p70 (* BND(c1 + float<53,-1074,ne>(c2 * T) - Mt1, [-2.81282e-14, -1.8064e-14]) *).
 intros h0.
 assert (h1 := l60 h0).
 apply t54. exact h1.
Qed.
Lemma t55 : p67 -> p70 -> p66.
 intros h0 h1.
 refine (add r39 r40 i43 i44 i42 h0 h1 _) ; finalize.
Qed.
Lemma l56 : s1 -> p66 (* BND(t1 - (c1 + float<53,-1074,ne>(c2 * T)) + (c1 + float<53,-1074,ne>(c2 * T) - Mt1), [-5.65499e-14, 1.03577e-14]) *).
 intros h0.
 assert (h1 := l57 h0).
 assert (h2 := l59 h0).
 apply t55. exact h1. exact h2.
Qed.
Lemma t56 : p66 -> p65.
 intros h0.
 refine (sub_xals _ _ _ i42 h0) ; finalize.
Qed.
Lemma l55 : s1 -> p65 (* BND(t1 - Mt1, [-5.65499e-14, 1.03577e-14]) *).
 intros h0.
 assert (h1 := l56 h0).
 apply t56. exact h1.
Qed.
Definition f88 := Float2 (-1) (-44).
Definition i59 := makepairF f88 f64.
Notation p89 := (BND r37 i59). (* BND(t1 - Mt1, [-5.68434e-14, 1.03577e-14]) *)
Definition i60 := makepairF f58 f42.
Notation p90 := (BND _Mt1 i60). (* BND(Mt1, [313.4, 512]) *)
Lemma t57 : p89 -> p90 -> p64.
 intros h0 h1.
 refine (div_op r37 _Mt1 i59 i60 i36 h0 h1 _) ; finalize.
Qed.
Lemma l54 : s1 -> p64 (* BND((t1 - Mt1) / Mt1, [-2.22045e-16, 3.30494e-17]) *).
 intros h0.
 assert (h1 := l55 h0).
 assert (h2 := l52 h0).
 apply t57. refine (subset r37 i42 i59 h1 _) ; finalize. refine (subset _Mt1 i38 i60 h2 _) ; finalize.
Qed.
Lemma t58 : p57 -> p64 -> p56.
 intros h0 h1.
 refine (rel_of_nzr_bnd _t1 _Mt1 i36 h0 h1) ; finalize.
Qed.
Lemma l49 : s1 -> p56 (* REL(t1, Mt1, [-2.22045e-16, 3.30494e-17]) *).
 intros h0.
 assert (h1 := l50 h0).
 assert (h2 := l54 h0).
 apply t58. exact h1. exact h2.
Qed.
Notation p91 := (REL _t1 _Mt1 i35). (* REL(t1, Mt1, [-2.22045e-16, 3.30494e-17]) *)
Lemma t59 : p91 -> p55.
 intros h0.
 refine (opp_fibq _t1 _Mt1 i35 h0) ; finalize.
Qed.
Lemma l48 : s1 -> p55 (* REL(-t1, -Mt1, [-2.22045e-16, 3.30494e-17]) *).
 intros h0.
 assert (h1 := l49 h0).
 apply t59. refine (rel_subset _t1 _Mt1 i36 i35 h1 _) ; finalize.
Qed.
Notation p92 := (REL _v _Mv i31). (* REL(v, Mv, [-1.11022e-16, 1.11022e-16]) *)
Definition i61 := makepairF f62 f39.
Notation p93 := (ABS _Mv i61). (* ABS(Mv, [1, 32768]) *)
Notation p94 := (BND _Mv i61). (* BND(Mv, [1, 32768]) *)
Lemma t60 : p94 -> p93.
 intros h0.
 refine (abs_of_bnd_p _Mv i61 i61 h0 _) ; finalize.
Qed.
Lemma l76 : s1 -> p93 (* ABS(Mv, [1, 32768]) *).
 intros h0.
 assert (h1 := l25 h0).
 apply t60. refine (subset _Mv i2 i61 h1 _) ; finalize.
Qed.
Lemma t61 : p93 -> p92.
 intros h0.
 refine (float_relative_ne _ _ _Mv i61 i31 h0 _) ; finalize.
Qed.
Lemma l75 : s1 -> p92 (* REL(v, Mv, [-1.11022e-16, 1.11022e-16]) *).
 intros h0.
 assert (h1 := l76 h0).
 apply t61. exact h1.
Qed.
Lemma t62 : p55 -> p92 -> p54.
 intros h0 h1.
 refine (mul_rr r10 r28 _v _Mv i35 i31 i34 h0 h1 _) ; finalize.
Qed.
Lemma l47 : s1 -> p54 (* REL(-t1 * v, -Mt1 * Mv, [-3.33067e-16, 1.44072e-16]) *).
 intros h0.
 assert (h1 := l48 h0).
 assert (h2 := l75 h0).
 apply t62. exact h1. exact h2.
Qed.
Lemma t63 : p43 -> p54 -> p42.
 intros h0 h1.
 refine (compose r8 r9 r27 i31 i34 i30 h0 h1 _) ; finalize.
Qed.
Lemma l37 : s1 -> p42 (* REL(float<53,-1074,ne>(-t1 * v), -Mt1 * Mv, [-4.44089e-16, 2.55094e-16]) *).
 intros h0.
 assert (h1 := l38 h0).
 assert (h2 := l47 h0).
 apply t63. exact h1. exact h2.
Qed.
Definition f89 := Float2 (-150844207481605973) (-107).
Definition f90 := Float2 (9) (-54).
Definition i62 := makepairF f89 f90.
Notation p95 := (REL r21 r31 i62). (* REL(float<53,-1074,ne>(float<53,-1074,ne>(t1 + u) * float<53,-1074,ne>(t1 + u)), (Mt1 + Mu) * (Mt1 + Mu), [-9.29649e-16, 4.996e-16]) *)
Notation p96 := (REL r21 r22 i31). (* REL(float<53,-1074,ne>(float<53,-1074,ne>(t1 + u) * float<53,-1074,ne>(t1 + u)), float<53,-1074,ne>(t1 + u) * float<53,-1074,ne>(t1 + u), [-1.11022e-16, 1.11022e-16]) *)
Definition i63 := makepairF f62 f40.
Notation p97 := (ABS r22 i63). (* ABS(float<53,-1074,ne>(t1 + u) * float<53,-1074,ne>(t1 + u), [1, 262144]) *)
Notation p98 := (ABS r23 i41). (* ABS(float<53,-1074,ne>(t1 + u), [1, 512]) *)
Lemma t64 : p98 -> p98 -> p97.
 intros h0 h1.
 refine (mul_aa r23 r23 i41 i41 i63 h0 h1 _) ; finalize.
Qed.
Lemma l79 : s1 -> p97 (* ABS(float<53,-1074,ne>(t1 + u) * float<53,-1074,ne>(t1 + u), [1, 262144]) *).
 intros h0.
 assert (h1 := l30 h0).
 apply t64. refine (abs_subset r23 i26 i41 h1 _) ; finalize. refine (abs_subset r23 i26 i41 h1 _) ; finalize.
Qed.
Lemma t65 : p97 -> p96.
 intros h0.
 refine (float_relative_ne _ _ r22 i63 i31 h0 _) ; finalize.
Qed.
Lemma l78 : s1 -> p96 (* REL(float<53,-1074,ne>(float<53,-1074,ne>(t1 + u) * float<53,-1074,ne>(t1 + u)), float<53,-1074,ne>(t1 + u) * float<53,-1074,ne>(t1 + u), [-1.11022e-16, 1.11022e-16]) *).
 intros h0.
 assert (h1 := l79 h0).
 apply t65. exact h1.
Qed.
Definition f91 := Float2 (-265659617944248007) (-108).
Definition f92 := Float2 (223) (-59).
Definition i64 := makepairF f91 f92.
Notation p99 := (REL r22 r31 i64). (* REL(float<53,-1074,ne>(t1 + u) * float<53,-1074,ne>(t1 + u), (Mt1 + Mu) * (Mt1 + Mu), [-8.18627e-16, 3.86843e-16]) *)
Definition f93 := Float2 (-265659617944248061) (-109).
Definition f94 := Float2 (445) (-61).
Definition i65 := makepairF f93 f94.
Notation p100 := (REL r23 r32 i65). (* REL(float<53,-1074,ne>(t1 + u), Mt1 + Mu, [-4.09313e-16, 1.92988e-16]) *)
Notation p101 := (REL r23 r24 i31). (* REL(float<53,-1074,ne>(t1 + u), t1 + u, [-1.11022e-16, 1.11022e-16]) *)
Notation p102 := (FIX r24 (-1074)). (* FIX(t1 + u, -1074) *)
Notation p103 := (FIX _t1 (-1074)). (* FIX(t1, -1074) *)
Lemma t66 : p103.
 refine (fix_of_float _ _ _ _ (-1074) _) ; finalize.
Qed.
Lemma l84 : s1 -> p103 (* FIX(t1, -1074) *).
 intros h0.
 apply t66.
Qed.
Notation p104 := (FIX _u (-1074)). (* FIX(u, -1074) *)
Lemma t67 : p104.
 refine (fix_of_float _ _ _ _ (-1074) _) ; finalize.
Qed.
Lemma l85 : s1 -> p104 (* FIX(u, -1074) *).
 intros h0.
 apply t67.
Qed.
Lemma t68 : p103 -> p104 -> p102.
 intros h0 h1.
 refine (add_fix _t1 _u (-1074) (-1074) (-1074) h0 h1 _) ; finalize.
Qed.
Lemma l83 : s1 -> p102 (* FIX(t1 + u, -1074) *).
 intros h0.
 assert (h1 := l84 h0).
 assert (h2 := l85 h0).
 apply t68. exact h1. exact h2.
Qed.
Lemma t69 : p102 -> p101.
 intros h0.
 refine (rel_of_fix_float_ne _ _ (-1074) r24 i31 h0 _) ; finalize.
Qed.
Lemma l82 : s1 -> p101 (* REL(float<53,-1074,ne>(t1 + u), t1 + u, [-1.11022e-16, 1.11022e-16]) *).
 intros h0.
 assert (h1 := l83 h0).
 apply t69. exact h1.
Qed.
Definition f95 := Float2 (-774408095625280585) (-111).
Definition f96 := Float2 (755) (-63).
Definition i66 := makepairF f95 f96.
Notation p105 := (REL r24 r32 i66). (* REL(t1 + u, Mt1 + Mu, [-2.98291e-16, 8.18573e-17]) *)
Notation p106 := (NZR r32). (* NZR(Mt1 + Mu) *)
Definition f97 := Float2 (240267040120215961) (-50).
Definition i67 := makepairF f97 f42.
Notation p107 := (ABS r32 i67). (* ABS(Mt1 + Mu, [213.4, 512]) *)
Definition i68 := makepairF f7 f2.
Notation p108 := (ABS _Mu i68). (* ABS(Mu, [0, 100]) *)
Lemma t70 : p1 -> p108.
 intros h0.
 refine (abs_of_bnd_o _Mu i1 i68 h0 _) ; finalize.
Qed.
Lemma l89 : s1 -> p108 (* ABS(Mu, [0, 100]) *).
 intros h0.
 assert (h1 := l34 h0).
 apply t70. exact h1.
Qed.
Lemma t71 : p58 -> p108 -> p107.
 intros h0 h1.
 refine (add_aa_p _Mt1 _Mu i37 i68 i67 h0 h1 _) ; finalize.
Qed.
Lemma l88 : s1 -> p107 (* ABS(Mt1 + Mu, [213.4, 512]) *).
 intros h0.
 assert (h1 := l51 h0).
 assert (h2 := l89 h0).
 apply t71. exact h1. exact h2.
Qed.
Notation p109 := (ABS r32 i41). (* ABS(Mt1 + Mu, [1, 512]) *)
Lemma t72 : p109 -> p106.
 intros h0.
 refine (nzr_of_abs r32 i41 h0 _) ; finalize.
Qed.
Lemma l87 : s1 -> p106 (* NZR(Mt1 + Mu) *).
 intros h0.
 assert (h1 := l88 h0).
 apply t72. refine (abs_subset r32 i67 i41 h1 _) ; finalize.
Qed.
Notation r53 := ((r24 - r32)%R).
Notation r52 := ((r53 / r32)%R).
Notation p110 := (BND r52 i66). (* BND((t1 + u - (Mt1 + Mu)) / (Mt1 + Mu), [-2.98291e-16, 8.18573e-17]) *)
Definition f98 := Float2 (-161385437115659059) (-101).
Definition f99 := Float2 (2517) (-57).
Definition i69 := makepairF f98 f99.
Notation p111 := (BND r53 i69). (* BND(t1 + u - (Mt1 + Mu), [-6.36553e-14, 1.74652e-14]) *)
Notation r55 := ((_u - _Mu)%R).
Notation r54 := ((r37 + r55)%R).
Notation p112 := (BND r54 i69). (* BND(t1 - Mt1 + (u - Mu), [-6.36553e-14, 1.74652e-14]) *)
Definition f100 := Float2 (-1) (-47).
Definition f101 := Float2 (1) (-47).
Definition i70 := makepairF f100 f101.
Notation p113 := (BND r55 i70). (* BND(u - Mu, [-7.10543e-15, 7.10543e-15]) *)
Definition i71 := makepairF f7 f44.
Notation p114 := (ABS _Mu i71). (* ABS(Mu, [0, 128]) *)
Lemma t73 : p114 -> p113.
 intros h0.
 refine (float_absolute_wide_ne _ _ _Mu i71 i70 h0 _) ; finalize.
Qed.
Lemma l93 : s1 -> p113 (* BND(u - Mu, [-7.10543e-15, 7.10543e-15]) *).
 intros h0.
 assert (h1 := l89 h0).
 apply t73. refine (abs_subset _Mu i68 i71 h1 _) ; finalize.
Qed.
Definition f102 := Float2 (1493) (-57).
Definition i72 := makepairF f63 f102.
Notation p115 := (BND r37 i72). (* BND(t1 - Mt1, [-5.65499e-14, 1.03598e-14]) *)
Lemma t74 : p115 -> p113 -> p112.
 intros h0 h1.
 refine (add r37 r55 i72 i70 i69 h0 h1 _) ; finalize.
Qed.
Lemma l92 : s1 -> p112 (* BND(t1 - Mt1 + (u - Mu), [-6.36553e-14, 1.74652e-14]) *).
 intros h0.
 assert (h1 := l55 h0).
 assert (h2 := l93 h0).
 apply t74. refine (subset r37 i42 i72 h1 _) ; finalize. exact h2.
Qed.
Lemma t75 : p112 -> p111.
 intros h0.
 refine (add_mibs _ _ _ _ i69 h0) ; finalize.
Qed.
Lemma l91 : s1 -> p111 (* BND(t1 + u - (Mt1 + Mu), [-6.36553e-14, 1.74652e-14]) *).
 intros h0.
 assert (h1 := l92 h0).
 apply t75. exact h1.
Qed.
Notation p116 := (BND r32 i67). (* BND(Mt1 + Mu, [213.4, 512]) *)
Definition i73 := makepairF f1 f44.
Notation p117 := (BND _Mu i73). (* BND(Mu, [-100, 128]) *)
Lemma t76 : p62 -> p117 -> p116.
 intros h0 h1.
 refine (add _Mt1 _Mu i37 i73 i67 h0 h1 _) ; finalize.
Qed.
Lemma l94 : s1 -> p116 (* BND(Mt1 + Mu, [213.4, 512]) *).
 intros h0.
 assert (h1 := l52 h0).
 assert (h2 := l34 h0).
 apply t76. refine (subset _Mt1 i38 i37 h1 _) ; finalize. refine (subset _Mu i1 i73 h2 _) ; finalize.
Qed.
Lemma t77 : p111 -> p116 -> p110.
 intros h0 h1.
 refine (div_op r53 r32 i69 i67 i66 h0 h1 _) ; finalize.
Qed.
Lemma l90 : s1 -> p110 (* BND((t1 + u - (Mt1 + Mu)) / (Mt1 + Mu), [-2.98291e-16, 8.18573e-17]) *).
 intros h0.
 assert (h1 := l91 h0).
 assert (h2 := l94 h0).
 apply t77. exact h1. exact h2.
Qed.
Lemma t78 : p106 -> p110 -> p105.
 intros h0 h1.
 refine (rel_of_nzr_bnd r24 r32 i66 h0 h1) ; finalize.
Qed.
Lemma l86 : s1 -> p105 (* REL(t1 + u, Mt1 + Mu, [-2.98291e-16, 8.18573e-17]) *).
 intros h0.
 assert (h1 := l87 h0).
 assert (h2 := l90 h0).
 apply t78. exact h1. exact h2.
Qed.
Lemma t79 : p101 -> p105 -> p100.
 intros h0 h1.
 refine (compose r23 r24 r32 i31 i66 i65 h0 h1 _) ; finalize.
Qed.
Lemma l81 : s1 -> p100 (* REL(float<53,-1074,ne>(t1 + u), Mt1 + Mu, [-4.09313e-16, 1.92988e-16]) *).
 intros h0.
 assert (h1 := l82 h0).
 assert (h2 := l86 h0).
 apply t79. exact h1. exact h2.
Qed.
Definition f103 := Float2 (223) (-60).
Definition i74 := makepairF f93 f103.
Notation p118 := (REL r23 r32 i74). (* REL(float<53,-1074,ne>(t1 + u), Mt1 + Mu, [-4.09313e-16, 1.93422e-16]) *)
Lemma t80 : p118 -> p100 -> p99.
 intros h0 h1.
 refine (mul_rr r23 r32 r23 r32 i74 i65 i64 h0 h1 _) ; finalize.
Qed.
Lemma l80 : s1 -> p99 (* REL(float<53,-1074,ne>(t1 + u) * float<53,-1074,ne>(t1 + u), (Mt1 + Mu) * (Mt1 + Mu), [-8.18627e-16, 3.86843e-16]) *).
 intros h0.
 assert (h1 := l81 h0).
 apply t80. refine (rel_subset r23 r32 i65 i74 h1 _) ; finalize. exact h1.
Qed.
Lemma t81 : p96 -> p99 -> p95.
 intros h0 h1.
 refine (compose r21 r22 r31 i31 i64 i62 h0 h1 _) ; finalize.
Qed.
Lemma l77 : s1 -> p95 (* REL(float<53,-1074,ne>(float<53,-1074,ne>(t1 + u) * float<53,-1074,ne>(t1 + u)), (Mt1 + Mu) * (Mt1 + Mu), [-9.29649e-16, 4.996e-16]) *).
 intros h0.
 assert (h1 := l78 h0).
 assert (h2 := l80 h0).
 apply t81. exact h1. exact h2.
Qed.
Notation p119 := (NZR r31). (* NZR((Mt1 + Mu) * (Mt1 + Mu)) *)
Notation p120 := (ABS r31 i63). (* ABS((Mt1 + Mu) * (Mt1 + Mu), [1, 262144]) *)
Lemma t82 : p109 -> p109 -> p120.
 intros h0 h1.
 refine (mul_aa r32 r32 i41 i41 i63 h0 h1 _) ; finalize.
Qed.
Lemma l96 : s1 -> p120 (* ABS((Mt1 + Mu) * (Mt1 + Mu), [1, 262144]) *).
 intros h0.
 assert (h1 := l88 h0).
 apply t82. refine (abs_subset r32 i67 i41 h1 _) ; finalize. refine (abs_subset r32 i67 i41 h1 _) ; finalize.
Qed.
Lemma t83 : p120 -> p119.
 intros h0.
 refine (nzr_of_abs r31 i63 h0 _) ; finalize.
Qed.
Lemma l95 : s1 -> p119 (* NZR((Mt1 + Mu) * (Mt1 + Mu)) *).
 intros h0.
 assert (h1 := l96 h0).
 apply t83. exact h1.
Qed.
Lemma t84 : p42 -> p95 -> p119 -> p41.
 intros h0 h1 h2.
 refine (div_rr r8 r27 r21 r31 i30 i62 i29 h0 h1 h2 _) ; finalize.
Qed.
Lemma l36 : s1 -> p41 (* REL(float<53,-1074,ne>(-t1 * v) / float<53,-1074,ne>(float<53,-1074,ne>(t1 + u) * float<53,-1074,ne>(t1 + u)), Mr, [-9.4369e-16, 1.18474e-15]) *).
 intros h0.
 assert (h1 := l37 h0).
 assert (h2 := l77 h0).
 assert (h3 := l95 h0).
 apply t84. exact h1. exact h2. exact h3.
Qed.
Definition f104 := Float2 (-714807479620662681) (-52).
Definition f105 := Float2 (-1) (-6).
Definition i75 := makepairF f104 f105.
Notation p121 := (BND _Mr i75). (* BND(Mr, [-158.719, -0.015625]) *)
Definition f106 := Float2 (-993408755695616003) (-37).
Definition i76 := makepairF f106 f18.
Notation p122 := (BND r27 i76). (* BND(-Mt1 * Mv, [-7.228e+06, -4096]) *)
Definition f107 := Float2 (-813800452665848629) (-51).
Definition i77 := makepairF f107 f20.
Notation p123 := (BND r28 i77). (* BND(-Mt1, [-361.4, -256]) *)
Definition i78 := makepairF f14 f59.
Notation p124 := (BND _Mt1 i78). (* BND(Mt1, [256, 361.4]) *)
Lemma t85 : p124 -> p123.
 intros h0.
 refine (neg _Mt1 i78 i77 h0 _) ; finalize.
Qed.
Lemma l99 : s1 -> p123 (* BND(-Mt1, [-361.4, -256]) *).
 intros h0.
 assert (h1 := l52 h0).
 apply t85. refine (subset _Mt1 i38 i78 h1 _) ; finalize.
Qed.
Definition i79 := makepairF f37 f4.
Notation p125 := (BND _Mv i79). (* BND(Mv, [16, 20000]) *)
Lemma t86 : p123 -> p125 -> p122.
 intros h0 h1.
 refine (mul_np r28 _Mv i77 i79 i76 h0 h1 _) ; finalize.
Qed.
Lemma l98 : s1 -> p122 (* BND(-Mt1 * Mv, [-7.228e+06, -4096]) *).
 intros h0.
 assert (h1 := l99 h0).
 assert (h2 := l25 h0).
 apply t86. exact h1. refine (subset _Mv i2 i79 h2 _) ; finalize.
Qed.
Definition f108 := Float2 (200285102975211273) (-42).
Definition i80 := makepairF f108 f40.
Notation p126 := (BND r31 i80). (* BND((Mt1 + Mu) * (Mt1 + Mu), [45539.6, 262144]) *)
Lemma t87 : p107 -> p126.
 intros h0.
 refine (square r32 i67 i80 h0 _) ; finalize.
Qed.
Lemma l100 : s1 -> p126 (* BND((Mt1 + Mu) * (Mt1 + Mu), [45539.6, 262144]) *).
 intros h0.
 assert (h1 := l88 h0).
 apply t87. exact h1.
Qed.
Lemma t88 : p122 -> p126 -> p121.
 intros h0 h1.
 refine (div_np r27 r31 i76 i80 i75 h0 h1 _) ; finalize.
Qed.
Lemma l97 : s1 -> p121 (* BND(Mr, [-158.719, -0.015625]) *).
 intros h0.
 assert (h1 := l98 h0).
 assert (h2 := l100 h0).
 apply t88. exact h1. exact h2.
Qed.
Lemma t89 : p41 -> p121 -> p40.
 intros h0 h1.
 refine (error_of_rel_on r7 _Mr i29 i75 i28 h0 h1 _) ; finalize.
Qed.
Lemma l35 : s1 -> p40 (* BND(float<53,-1074,ne>(-t1 * v) / float<53,-1074,ne>(float<53,-1074,ne>(t1 + u) * float<53,-1074,ne>(t1 + u)) - Mr, [-1.88041e-13, 1.56319e-13]) *).
 intros h0.
 assert (h1 := l36 h0).
 assert (h2 := l97 h0).
 apply t89. exact h1. exact h2.
Qed.
Lemma t90 : p8 -> p40 -> p7.
 intros h0 h1.
 refine (add r34 r35 i6 i28 i5 h0 h1 _) ; finalize.
Qed.
Lemma l6 : s1 -> p7 (* BND(r - float<53,-1074,ne>(-t1 * v) / float<53,-1074,ne>(float<53,-1074,ne>(t1 + u) * float<53,-1074,ne>(t1 + u)) + (float<53,-1074,ne>(-t1 * v) / float<53,-1074,ne>(float<53,-1074,ne>(t1 + u) * float<53,-1074,ne>(t1 + u)) - Mr), [-2.02252e-13, 1.7053e-13]) *).
 intros h0.
 assert (h1 := l7 h0).
 assert (h2 := l35 h0).
 apply t90. exact h1. exact h2.
Qed.
Lemma t91 : p7 -> p6.
 intros h0.
 refine (sub_xals _ _ _ i5 h0) ; finalize.
Qed.
Lemma l5 : s1 -> p6 (* BND(r - Mr, [-2.02252e-13, 1.7053e-13]) *).
 intros h0.
 assert (h1 := l6 h0).
 apply t91. exact h1.
Qed.
Lemma t92 : p6 -> p5.
 intros h0.
 refine (abs_of_bnd_o r5 i5 i4 h0 _) ; finalize.
Qed.
Lemma l4 : s1 -> p5 (* ABS(r - Mr, [0, 2.02252e-13]) *).
 intros h0.
 assert (h1 := l5 h0).
 apply t92. exact h1.
Qed.
Lemma t93 : p5 -> p4.
 intros h0.
 refine (uabs_of_abs r5 i4 h0) ; finalize.
Qed.
Lemma l3 : s1 -> p4 (* BND(|r - Mr|, [0, 2.02252e-13]) *).
 intros h0.
 assert (h1 := l4 h0).
 apply t93. exact h1.
Qed.
Lemma l1 : s1 -> False.
 intros h0.
 assert (h1 := l2 h0).
 assert (h2 := l3 h0).
 refine (simplify (Tatom false (Abnd 0%nat i4)) Tfalse (Abnd 0%nat i4) (List.cons r4 List.nil) h2 h1 _) ; finalize.
Qed.
End Generated_by_Gappa.
