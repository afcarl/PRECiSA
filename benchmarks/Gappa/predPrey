Require Import Flocq.Core.Fcore.
Require Import Gappa.Gappa_library.
Section Generated_by_Gappa.
Variable _Mr : R.
Definition f1 := Float2 (1) (2).
Definition i1 := makepairF f1 f1.
Notation p1 := (BND _Mr i1). (* BND(Mr, [4, 4]) *)
Variable _MK : R.
Definition f2 := Float2 (639871435056800071) (-59).
Definition f3 := Float2 (79983929382100009) (-56).
Definition i2 := makepairF f2 f3.
Notation p2 := (BND _MK i2). (* BND(MK, [1.11, 1.11]) *)
Definition s3 := (p1 /\ p2).
Variable _Mx : R.
Definition f4 := Float2 (230584300921369395) (-61).
Definition f5 := Float2 (345876451382054093) (-60).
Definition i3 := makepairF f4 f5.
Notation p3 := (BND _Mx i3). (* BND(Mx, [0.1, 0.3]) *)
Definition s2 := (s3 /\ p3).
Notation _r := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  _Mr).
Notation _x := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  _Mx).
Notation r11 := ((_r * _x)%R).
Notation r10 := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  r11).
Notation r9 := ((r10 * _x)%R).
Notation r8 := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  r9).
Notation r16 := (Float1 (1)).
Notation _K := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  _MK).
Notation r20 := ((_x / _K)%R).
Notation r19 := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  r20).
Notation r18 := ((r19 * r19)%R).
Notation r17 := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  r18).
Notation r15 := ((r16 + r17)%R).
Notation r14 := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  r15).
Notation r7 := ((r8 / r14)%R).
Notation _res := ((round radix2 (FLT_exp (-1074) (53)) rndNE)  r7).
Notation r24 := ((_Mr * _Mx)%R).
Notation r23 := ((r24 * _Mx)%R).
Notation r27 := ((_Mx / _MK)%R).
Notation r26 := ((r27 * r27)%R).
Notation r25 := ((r16 + r26)%R).
Notation _Mres := ((r23 / r25)%R).
Notation r5 := ((_res - _Mres)%R).
Notation r4 := ((Rabs r5)%R).
Definition f6 := Float2 (0) (0).
Definition f7 := Float2 (530044771607084455) (-111).
Definition i4 := makepairF f6 f7.
Notation p4 := (BND r4 i4). (* BND(|res - Mres|, [0, 2.04166e-16]) *)
Definition s4 := (not p4).
Definition s1 := (s2 /\ s4).
Lemma l2 : s1 -> s4.
 intros h0.
 assert (h1 := h0).
 exact (proj2 h1).
Qed.
Notation p5 := (ABS r5 i4). (* ABS(res - Mres, [0, 2.04166e-16]) *)
Definition f8 := Float2 (-29) (-57).
Definition i5 := makepairF f8 f7.
Notation p6 := (BND r5 i5). (* BND(res - Mres, [-2.01228e-16, 2.04166e-16]) *)
Notation r29 := ((_res - r7)%R).
Notation r30 := ((r7 - _Mres)%R).
Notation r28 := ((r29 + r30)%R).
Notation p7 := (BND r28 i5). (* BND(res - float<53,-1074,ne>(float<53,-1074,ne>(r * x) * x) / float<53,-1074,ne>(1 + float<53,-1074,ne>(float<53,-1074,ne>(x / K) * float<53,-1074,ne>(x / K))) + (float<53,-1074,ne>(float<53,-1074,ne>(r * x) * x) / float<53,-1074,ne>(1 + float<53,-1074,ne>(float<53,-1074,ne>(x / K) * float<53,-1074,ne>(x / K))) - Mres), [-2.01228e-16, 2.04166e-16]) *)
Definition f9 := Float2 (-1) (-55).
Definition f10 := Float2 (1) (-55).
Definition i6 := makepairF f9 f10.
Notation p8 := (BND r29 i6). (* BND(res - float<53,-1074,ne>(float<53,-1074,ne>(r * x) * x) / float<53,-1074,ne>(1 + float<53,-1074,ne>(float<53,-1074,ne>(x / K) * float<53,-1074,ne>(x / K))), [-2.77556e-17, 2.77556e-17]) *)
Definition f11 := Float2 (1) (-5).
Definition f12 := Float2 (1) (-1).
Definition i7 := makepairF f11 f12.
Notation p9 := (ABS r7 i7). (* ABS(float<53,-1074,ne>(float<53,-1074,ne>(r * x) * x) / float<53,-1074,ne>(1 + float<53,-1074,ne>(float<53,-1074,ne>(x / K) * float<53,-1074,ne>(x / K))), [0.03125, 0.5]) *)
Definition f13 := Float2 (5) (-7).
Definition i8 := makepairF f13 f12.
Notation p10 := (ABS r8 i8). (* ABS(float<53,-1074,ne>(float<53,-1074,ne>(r * x) * x), [0.0390625, 0.5]) *)
Notation p11 := (BND r8 i8). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(r * x) * x), [0.0390625, 0.5]) *)
Notation p12 := (BND r9 i8). (* BND(float<53,-1074,ne>(r * x) * x, [0.0390625, 0.5]) *)
Definition f14 := Float2 (51) (-7).
Definition f15 := Float2 (3) (-1).
Definition i9 := makepairF f14 f15.
Notation p13 := (BND r10 i9). (* BND(float<53,-1074,ne>(r * x), [0.398438, 1.5]) *)
Notation p14 := (BND r11 i9). (* BND(r * x, [0.398438, 1.5]) *)
Notation p15 := (BND _r i1). (* BND(r, [4, 4]) *)
Lemma l17 : s1 -> s2.
 intros h0.
 assert (h1 := h0).
 exact (proj1 h1).
Qed.
Lemma l16 : s1 -> s3.
 intros h0.
 assert (h1 := l17 h0).
 exact (proj1 h1).
Qed.
Lemma l15 : s1 -> p1 (* BND(Mr, [4, 4]) *).
 intros h0.
 assert (h1 := l16 h0).
 exact (proj1 h1).
Qed.
Lemma t1 : p1 -> p15.
 intros h0.
 refine (float_round_ne _ _ _Mr i1 i1 h0 _) ; finalize.
Qed.
Lemma l14 : s1 -> p15 (* BND(r, [4, 4]) *).
 intros h0.
 assert (h1 := l15 h0).
 apply t1. exact h1.
Qed.
Definition f16 := Float2 (409) (-12).
Definition f17 := Float2 (5) (-4).
Definition i10 := makepairF f16 f17.
Notation p16 := (BND _x i10). (* BND(x, [0.0998535, 0.3125]) *)
Lemma l19 : s1 -> p3 (* BND(Mx, [0.1, 0.3]) *).
 intros h0.
 assert (h1 := l17 h0).
 exact (proj2 h1).
Qed.
Notation p17 := (BND _Mx i10). (* BND(Mx, [0.0998535, 0.3125]) *)
Lemma t2 : p17 -> p16.
 intros h0.
 refine (float_round_ne _ _ _Mx i10 i10 h0 _) ; finalize.
Qed.
Lemma l18 : s1 -> p16 (* BND(x, [0.0998535, 0.3125]) *).
 intros h0.
 assert (h1 := l19 h0).
 apply t2. refine (subset _Mx i3 i10 h1 _) ; finalize.
Qed.
Definition f18 := Float2 (51) (-9).
Definition f19 := Float2 (3) (-3).
Definition i11 := makepairF f18 f19.
Notation p18 := (BND _x i11). (* BND(x, [0.0996094, 0.375]) *)
Lemma t3 : p15 -> p18 -> p14.
 intros h0 h1.
 refine (mul_pp _r _x i1 i11 i9 h0 h1 _) ; finalize.
Qed.
Lemma l13 : s1 -> p14 (* BND(r * x, [0.398438, 1.5]) *).
 intros h0.
 assert (h1 := l14 h0).
 assert (h2 := l18 h0).
 apply t3. exact h1. refine (subset _x i10 i11 h2 _) ; finalize.
Qed.
Lemma t4 : p14 -> p13.
 intros h0.
 refine (float_round_ne _ _ r11 i9 i9 h0 _) ; finalize.
Qed.
Lemma l12 : s1 -> p13 (* BND(float<53,-1074,ne>(r * x), [0.398438, 1.5]) *).
 intros h0.
 assert (h1 := l13 h0).
 apply t4. exact h1.
Qed.
Definition i12 := makepairF f18 f17.
Notation p19 := (BND _x i12). (* BND(x, [0.0996094, 0.3125]) *)
Lemma t5 : p13 -> p19 -> p12.
 intros h0 h1.
 refine (mul_pp r10 _x i9 i12 i8 h0 h1 _) ; finalize.
Qed.
Lemma l11 : s1 -> p12 (* BND(float<53,-1074,ne>(r * x) * x, [0.0390625, 0.5]) *).
 intros h0.
 assert (h1 := l12 h0).
 assert (h2 := l18 h0).
 apply t5. exact h1. refine (subset _x i10 i12 h2 _) ; finalize.
Qed.
Lemma t6 : p12 -> p11.
 intros h0.
 refine (float_round_ne _ _ r9 i8 i8 h0 _) ; finalize.
Qed.
Lemma l10 : s1 -> p11 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(r * x) * x), [0.0390625, 0.5]) *).
 intros h0.
 assert (h1 := l11 h0).
 apply t6. exact h1.
Qed.
Lemma t7 : p11 -> p10.
 intros h0.
 refine (abs_of_bnd_p r8 i8 i8 h0 _) ; finalize.
Qed.
Lemma l9 : s1 -> p10 (* ABS(float<53,-1074,ne>(float<53,-1074,ne>(r * x) * x), [0.0390625, 0.5]) *).
 intros h0.
 assert (h1 := l10 h0).
 apply t7. exact h1.
Qed.
Definition f20 := Float2 (1) (0).
Definition f21 := Float2 (5) (-2).
Definition i13 := makepairF f20 f21.
Notation p20 := (ABS r14 i13). (* ABS(float<53,-1074,ne>(1 + float<53,-1074,ne>(float<53,-1074,ne>(x / K) * float<53,-1074,ne>(x / K))), [1, 1.25]) *)
Notation p21 := (BND r14 i13). (* BND(float<53,-1074,ne>(1 + float<53,-1074,ne>(float<53,-1074,ne>(x / K) * float<53,-1074,ne>(x / K))), [1, 1.25]) *)
Notation p22 := (BND r15 i13). (* BND(1 + float<53,-1074,ne>(float<53,-1074,ne>(x / K) * float<53,-1074,ne>(x / K)), [1, 1.25]) *)
Definition i14 := makepairF f20 f20.
Notation p23 := (BND r16 i14). (* BND(1, [1, 1]) *)
Lemma t8 : p23.
 refine (constant1 _ i14 _) ; finalize.
Qed.
Lemma l23 : s1 -> p23 (* BND(1, [1, 1]) *).
 intros h0.
 apply t8.
Qed.
Definition f22 := Float2 (1) (-7).
Definition f23 := Float2 (1) (-2).
Definition i15 := makepairF f22 f23.
Notation p24 := (BND r17 i15). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(x / K) * float<53,-1074,ne>(x / K)), [0.0078125, 0.25]) *)
Notation p25 := (BND r18 i15). (* BND(float<53,-1074,ne>(x / K) * float<53,-1074,ne>(x / K), [0.0078125, 0.25]) *)
Definition f24 := Float2 (23) (-8).
Definition i16 := makepairF f24 f12.
Notation p26 := (ABS r19 i16). (* ABS(float<53,-1074,ne>(x / K), [0.0898438, 0.5]) *)
Notation p27 := (BND r19 i16). (* BND(float<53,-1074,ne>(x / K), [0.0898438, 0.5]) *)
Notation p28 := (BND r20 i16). (* BND(x / K, [0.0898438, 0.5]) *)
Definition f25 := Float2 (4998995586381251) (-52).
Definition i17 := makepairF f25 f25.
Notation p29 := (BND _K i17). (* BND(K, [1.11, 1.11]) *)
Lemma l30 : s1 -> p2 (* BND(MK, [1.11, 1.11]) *).
 intros h0.
 assert (h1 := l16 h0).
 exact (proj2 h1).
Qed.
Definition f26 := Float2 (159967858764200017) (-57).
Definition i18 := makepairF f26 f25.
Notation p30 := (BND _MK i18). (* BND(MK, [1.11, 1.11]) *)
Lemma t9 : p30 -> p29.
 intros h0.
 refine (float_round_ne _ _ _MK i18 i17 h0 _) ; finalize.
Qed.
Lemma l29 : s1 -> p29 (* BND(K, [1.11, 1.11]) *).
 intros h0.
 assert (h1 := l30 h0).
 apply t9. refine (subset _MK i2 i18 h1 _) ; finalize.
Qed.
Definition i19 := makepairF f16 f12.
Notation p31 := (BND _x i19). (* BND(x, [0.0998535, 0.5]) *)
Definition f27 := Float2 (569) (-9).
Definition i20 := makepairF f20 f27.
Notation p32 := (BND _K i20). (* BND(K, [1, 1.11133]) *)
Lemma t10 : p31 -> p32 -> p28.
 intros h0 h1.
 refine (div_pp _x _K i19 i20 i16 h0 h1 _) ; finalize.
Qed.
Lemma l28 : s1 -> p28 (* BND(x / K, [0.0898438, 0.5]) *).
 intros h0.
 assert (h1 := l18 h0).
 assert (h2 := l29 h0).
 apply t10. refine (subset _x i10 i19 h1 _) ; finalize. refine (subset _K i17 i20 h2 _) ; finalize.
Qed.
Lemma t11 : p28 -> p27.
 intros h0.
 refine (float_round_ne _ _ r20 i16 i16 h0 _) ; finalize.
Qed.
Lemma l27 : s1 -> p27 (* BND(float<53,-1074,ne>(x / K), [0.0898438, 0.5]) *).
 intros h0.
 assert (h1 := l28 h0).
 apply t11. exact h1.
Qed.
Lemma t12 : p27 -> p26.
 intros h0.
 refine (abs_of_bnd_p r19 i16 i16 h0 _) ; finalize.
Qed.
Lemma l26 : s1 -> p26 (* ABS(float<53,-1074,ne>(x / K), [0.0898438, 0.5]) *).
 intros h0.
 assert (h1 := l27 h0).
 apply t12. exact h1.
Qed.
Lemma t13 : p26 -> p25.
 intros h0.
 refine (square r19 i16 i15 h0 _) ; finalize.
Qed.
Lemma l25 : s1 -> p25 (* BND(float<53,-1074,ne>(x / K) * float<53,-1074,ne>(x / K), [0.0078125, 0.25]) *).
 intros h0.
 assert (h1 := l26 h0).
 apply t13. exact h1.
Qed.
Lemma t14 : p25 -> p24.
 intros h0.
 refine (float_round_ne _ _ r18 i15 i15 h0 _) ; finalize.
Qed.
Lemma l24 : s1 -> p24 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(x / K) * float<53,-1074,ne>(x / K)), [0.0078125, 0.25]) *).
 intros h0.
 assert (h1 := l25 h0).
 apply t14. exact h1.
Qed.
Lemma t15 : p23 -> p24 -> p22.
 intros h0 h1.
 refine (add r16 r17 i14 i15 i13 h0 h1 _) ; finalize.
Qed.
Lemma l22 : s1 -> p22 (* BND(1 + float<53,-1074,ne>(float<53,-1074,ne>(x / K) * float<53,-1074,ne>(x / K)), [1, 1.25]) *).
 intros h0.
 assert (h1 := l23 h0).
 assert (h2 := l24 h0).
 apply t15. exact h1. exact h2.
Qed.
Lemma t16 : p22 -> p21.
 intros h0.
 refine (float_round_ne _ _ r15 i13 i13 h0 _) ; finalize.
Qed.
Lemma l21 : s1 -> p21 (* BND(float<53,-1074,ne>(1 + float<53,-1074,ne>(float<53,-1074,ne>(x / K) * float<53,-1074,ne>(x / K))), [1, 1.25]) *).
 intros h0.
 assert (h1 := l22 h0).
 apply t16. exact h1.
Qed.
Lemma t17 : p21 -> p20.
 intros h0.
 refine (abs_of_bnd_p r14 i13 i13 h0 _) ; finalize.
Qed.
Lemma l20 : s1 -> p20 (* ABS(float<53,-1074,ne>(1 + float<53,-1074,ne>(float<53,-1074,ne>(x / K) * float<53,-1074,ne>(x / K))), [1, 1.25]) *).
 intros h0.
 assert (h1 := l21 h0).
 apply t17. exact h1.
Qed.
Lemma t18 : p10 -> p20 -> p9.
 intros h0 h1.
 refine (div_aa r8 r14 i8 i13 i7 h0 h1 _) ; finalize.
Qed.
Lemma l8 : s1 -> p9 (* ABS(float<53,-1074,ne>(float<53,-1074,ne>(r * x) * x) / float<53,-1074,ne>(1 + float<53,-1074,ne>(float<53,-1074,ne>(x / K) * float<53,-1074,ne>(x / K))), [0.03125, 0.5]) *).
 intros h0.
 assert (h1 := l9 h0).
 assert (h2 := l20 h0).
 apply t18. exact h1. exact h2.
Qed.
Lemma t19 : p9 -> p8.
 intros h0.
 refine (float_absolute_wide_ne _ _ r7 i7 i6 h0 _) ; finalize.
Qed.
Lemma l7 : s1 -> p8 (* BND(res - float<53,-1074,ne>(float<53,-1074,ne>(r * x) * x) / float<53,-1074,ne>(1 + float<53,-1074,ne>(float<53,-1074,ne>(x / K) * float<53,-1074,ne>(x / K))), [-2.77556e-17, 2.77556e-17]) *).
 intros h0.
 assert (h1 := l8 h0).
 apply t19. exact h1.
Qed.
Definition f28 := Float2 (-25) (-57).
Definition f29 := Float2 (457987177569156519) (-111).
Definition i21 := makepairF f28 f29.
Notation p33 := (BND r30 i21). (* BND(float<53,-1074,ne>(float<53,-1074,ne>(r * x) * x) / float<53,-1074,ne>(1 + float<53,-1074,ne>(float<53,-1074,ne>(x / K) * float<53,-1074,ne>(x / K))) - Mres, [-1.73472e-16, 1.7641e-16]) *)
Definition f30 := Float2 (-17) (-55).
Definition f31 := Float2 (641255978116234827) (-110).
Definition i22 := makepairF f30 f31.
Notation p34 := (REL r7 _Mres i22). (* REL(float<53,-1074,ne>(float<53,-1074,ne>(r * x) * x) / float<53,-1074,ne>(1 + float<53,-1074,ne>(float<53,-1074,ne>(x / K) * float<53,-1074,ne>(x / K))), Mres, [-4.71845e-16, 4.94006e-16]) *)
Definition f32 := Float2 (-3) (-53).
Definition f33 := Float2 (864691128455135329) (-111).
Definition i23 := makepairF f32 f33.
Notation p35 := (REL r8 r23 i23). (* REL(float<53,-1074,ne>(float<53,-1074,ne>(r * x) * x), Mr * Mx * Mx, [-3.33067e-16, 3.33067e-16]) *)
Definition f34 := Float2 (-1) (-53).
Definition f35 := Float2 (1) (-53).
Definition i24 := makepairF f34 f35.
Notation p36 := (REL r8 r9 i24). (* REL(float<53,-1074,ne>(float<53,-1074,ne>(r * x) * x), float<53,-1074,ne>(r * x) * x, [-1.11022e-16, 1.11022e-16]) *)
Notation p37 := (FIX r9 (-110)). (* FIX(float<53,-1074,ne>(r * x) * x, -110) *)
Notation p38 := (FIX r10 (-54)). (* FIX(float<53,-1074,ne>(r * x), -54) *)
Notation p39 := (FIX r11 (-54)). (* FIX(r * x, -54) *)
Notation p40 := (FIX _r (2)). (* FIX(r, 2) *)
Notation p41 := (FIX _Mr (2)). (* FIX(Mr, 2) *)
Notation p42 := (ABS _Mr i1). (* ABS(Mr, [4, 4]) *)
Lemma t20 : p1 -> p42.
 intros h0.
 refine (abs_of_bnd_p _Mr i1 i1 h0 _) ; finalize.
Qed.
Lemma l40 : s1 -> p42 (* ABS(Mr, [4, 4]) *).
 intros h0.
 assert (h1 := l15 h0).
 apply t20. exact h1.
Qed.
Lemma t21 : p42 -> p41.
 intros h0.
 refine (fix_of_singleton_bnd _Mr i1 (2) h0 _) ; finalize.
Qed.
Lemma l39 : s1 -> p41 (* FIX(Mr, 2) *).
 intros h0.
 assert (h1 := l40 h0).
 apply t21. exact h1.
Qed.
Lemma t22 : p41 -> p40.
 intros h0.
 refine (fix_float_of_fix _ _ _ (2) (2) _Mr h0 _) ; finalize.
Qed.
Lemma l38 : s1 -> p40 (* FIX(r, 2) *).
 intros h0.
 assert (h1 := l39 h0).
 apply t22. exact h1.
Qed.
Notation p43 := (FIX _x (-56)). (* FIX(x, -56) *)
Notation p44 := (FLT _x (53)). (* FLT(x, 53) *)
Lemma t23 : p44.
 refine (flt_of_float _ _ _ (53) _ _) ; finalize.
Qed.
Lemma l42 : s1 -> p44 (* FLT(x, 53) *).
 intros h0.
 apply t23.
Qed.
Definition f36 := Float2 (3) (-5).
Definition i25 := makepairF f36 f20.
Notation p45 := (ABS _x i25). (* ABS(x, [0.09375, 1]) *)
Notation p46 := (BND _x i25). (* BND(x, [0.09375, 1]) *)
Lemma t24 : p46 -> p45.
 intros h0.
 refine (abs_of_bnd_p _x i25 i25 h0 _) ; finalize.
Qed.
Lemma l43 : s1 -> p45 (* ABS(x, [0.09375, 1]) *).
 intros h0.
 assert (h1 := l18 h0).
 apply t24. refine (subset _x i10 i25 h1 _) ; finalize.
Qed.
Definition f37 := Float2 (1) (-4).
Definition i26 := makepairF f37 f20.
Notation p47 := (ABS _x i26). (* ABS(x, [0.0625, 1]) *)
Lemma t25 : p44 -> p47 -> p43.
 intros h0 h1.
 refine (fix_of_flt_bnd _x i26 (-56) (53) h0 h1 _) ; finalize.
Qed.
Lemma l41 : s1 -> p43 (* FIX(x, -56) *).
 intros h0.
 assert (h1 := l42 h0).
 assert (h2 := l43 h0).
 apply t25. exact h1. refine (abs_subset _x i25 i26 h2 _) ; finalize.
Qed.
Lemma t26 : p40 -> p43 -> p39.
 intros h0 h1.
 refine (mul_fix _r _x (2) (-56) (-54) h0 h1 _) ; finalize.
Qed.
Lemma l37 : s1 -> p39 (* FIX(r * x, -54) *).
 intros h0.
 assert (h1 := l38 h0).
 assert (h2 := l41 h0).
 apply t26. exact h1. exact h2.
Qed.
Lemma t27 : p39 -> p38.
 intros h0.
 refine (fix_float_of_fix _ _ _ (-54) (-54) r11 h0 _) ; finalize.
Qed.
Lemma l36 : s1 -> p38 (* FIX(float<53,-1074,ne>(r * x), -54) *).
 intros h0.
 assert (h1 := l37 h0).
 apply t27. exact h1.
Qed.
Lemma t28 : p38 -> p43 -> p37.
 intros h0 h1.
 refine (mul_fix r10 _x (-54) (-56) (-110) h0 h1 _) ; finalize.
Qed.
Lemma l35 : s1 -> p37 (* FIX(float<53,-1074,ne>(r * x) * x, -110) *).
 intros h0.
 assert (h1 := l36 h0).
 assert (h2 := l41 h0).
 apply t28. exact h1. exact h2.
Qed.
Lemma t29 : p37 -> p36.
 intros h0.
 refine (rel_of_fix_float_ne _ _ (-110) r9 i24 h0 _) ; finalize.
Qed.
Lemma l34 : s1 -> p36 (* REL(float<53,-1074,ne>(float<53,-1074,ne>(r * x) * x), float<53,-1074,ne>(r * x) * x, [-1.11022e-16, 1.11022e-16]) *).
 intros h0.
 assert (h1 := l35 h0).
 apply t29. exact h1.
Qed.
Definition f38 := Float2 (-1) (-52).
Definition f39 := Float2 (18014398509481985) (-106).
Definition i27 := makepairF f38 f39.
Notation p48 := (REL r9 r23 i27). (* REL(float<53,-1074,ne>(r * x) * x, Mr * Mx * Mx, [-2.22045e-16, 2.22045e-16]) *)
Notation p49 := (REL r10 r24 i24). (* REL(float<53,-1074,ne>(r * x), Mr * Mx, [-1.11022e-16, 1.11022e-16]) *)
Notation p50 := (r10 = r11). (* EQL(float<53,-1074,ne>(r * x), r * x) *)
Notation p51 := (FLT r11 (53)). (* FLT(r * x, 53) *)
Notation p52 := (FLT _r (1)). (* FLT(r, 1) *)
Notation p53 := (FLT _Mr (1)). (* FLT(Mr, 1) *)
Lemma t30 : p42 -> p53.
 intros h0.
 refine (flt_of_singleton_bnd _Mr i1 (1) h0 _) ; finalize.
Qed.
Lemma l49 : s1 -> p53 (* FLT(Mr, 1) *).
 intros h0.
 assert (h1 := l40 h0).
 apply t30. exact h1.
Qed.
Lemma t31 : p53 -> p52.
 intros h0.
 refine (flt_float_of_flt _ _ _ (1) (1) _Mr h0 _) ; finalize.
Qed.
Lemma l48 : s1 -> p52 (* FLT(r, 1) *).
 intros h0.
 assert (h1 := l49 h0).
 apply t31. exact h1.
Qed.
Lemma t32 : p52 -> p44 -> p51.
 intros h0 h1.
 refine (mul_flt _r _x (1) (53) (53) h0 h1 _) ; finalize.
Qed.
Lemma l47 : s1 -> p51 (* FLT(r * x, 53) *).
 intros h0.
 assert (h1 := l48 h0).
 assert (h2 := l42 h0).
 apply t32. exact h1. exact h2.
Qed.
Lemma t33 : p39 -> p51 -> p50.
 intros h0 h1.
 refine (float_of_fix_flt _ r11 (-54) _ (53) _ h0 h1 _) ; finalize.
Qed.
Lemma l46 : s1 -> p50 (* EQL(float<53,-1074,ne>(r * x), r * x) *).
 intros h0.
 assert (h1 := l37 h0).
 assert (h2 := l47 h0).
 apply t33. exact h1. exact h2.
Qed.
Notation p54 := (REL r11 r24 i24). (* REL(r * x, Mr * Mx, [-1.11022e-16, 1.11022e-16]) *)
Definition i28 := makepairF f6 f6.
Notation p55 := (REL _r _Mr i28). (* REL(r, Mr, [0, 0]) *)
Notation p56 := (_r = _Mr). (* EQL(r, Mr) *)
Lemma t34 : p41 -> p53 -> p56.
 intros h0 h1.
 refine (float_of_fix_flt _ _Mr (2) _ (1) _ h0 h1 _) ; finalize.
Qed.
Lemma l52 : s1 -> p56 (* EQL(r, Mr) *).
 intros h0.
 assert (h1 := l39 h0).
 assert (h2 := l49 h0).
 apply t34. exact h1. exact h2.
Qed.
Notation p57 := (REL _Mr _Mr i28). (* REL(Mr, Mr, [0, 0]) *)
Lemma t35 : p57.
 refine (rel_refl _Mr i28 _) ; finalize.
Qed.
Lemma l53 : s1 -> p57 (* REL(Mr, Mr, [0, 0]) *).
 intros h0.
 apply t35.
Qed.
Lemma t36 : p56 -> p57 -> p55.
 intros h0 h1.
 refine (rel_rewrite_1 _r _Mr _Mr i28 h0 h1) ; finalize.
Qed.
Lemma l51 : s1 -> p55 (* REL(r, Mr, [0, 0]) *).
 intros h0.
 assert (h1 := l52 h0).
 assert (h2 := l53 h0).
 apply t36. exact h1. exact h2.
Qed.
Notation p58 := (REL _x _Mx i24). (* REL(x, Mx, [-1.11022e-16, 1.11022e-16]) *)
Definition f40 := Float2 (14411518807585587) (-57).
Definition i29 := makepairF f40 f5.
Notation p59 := (ABS _Mx i29). (* ABS(Mx, [0.1, 0.3]) *)
Notation p60 := (BND _Mx i29). (* BND(Mx, [0.1, 0.3]) *)
Lemma t37 : p60 -> p59.
 intros h0.
 refine (abs_of_bnd_p _Mx i29 i29 h0 _) ; finalize.
Qed.
Lemma l55 : s1 -> p59 (* ABS(Mx, [0.1, 0.3]) *).
 intros h0.
 assert (h1 := l19 h0).
 apply t37. refine (subset _Mx i3 i29 h1 _) ; finalize.
Qed.
Notation p61 := (ABS _Mx i26). (* ABS(Mx, [0.0625, 1]) *)
Lemma t38 : p61 -> p58.
 intros h0.
 refine (float_relative_ne _ _ _Mx i26 i24 h0 _) ; finalize.
Qed.
Lemma l54 : s1 -> p58 (* REL(x, Mx, [-1.11022e-16, 1.11022e-16]) *).
 intros h0.
 assert (h1 := l55 h0).
 apply t38. refine (abs_subset _Mx i29 i26 h1 _) ; finalize.
Qed.
Lemma t39 : p55 -> p58 -> p54.
 intros h0 h1.
 refine (mul_rr _r _Mr _x _Mx i28 i24 i24 h0 h1 _) ; finalize.
Qed.
Lemma l50 : s1 -> p54 (* REL(r * x, Mr * Mx, [-1.11022e-16, 1.11022e-16]) *).
 intros h0.
 assert (h1 := l51 h0).
 assert (h2 := l54 h0).
 apply t39. exact h1. exact h2.
Qed.
Lemma t40 : p50 -> p54 -> p49.
 intros h0 h1.
 refine (rel_rewrite_1 r10 r11 r24 i24 h0 h1) ; finalize.
Qed.
Lemma l45 : s1 -> p49 (* REL(float<53,-1074,ne>(r * x), Mr * Mx, [-1.11022e-16, 1.11022e-16]) *).
 intros h0.
 assert (h1 := l46 h0).
 assert (h2 := l50 h0).
 apply t40. exact h1. exact h2.
Qed.
Lemma t41 : p49 -> p58 -> p48.
 intros h0 h1.
 refine (mul_rr r10 r24 _x _Mx i24 i24 i27 h0 h1 _) ; finalize.
Qed.
Lemma l44 : s1 -> p48 (* REL(float<53,-1074,ne>(r * x) * x, Mr * Mx * Mx, [-2.22045e-16, 2.22045e-16]) *).
 intros h0.
 assert (h1 := l45 h0).
 assert (h2 := l54 h0).
 apply t41. exact h1. exact h2.
Qed.
Lemma t42 : p36 -> p48 -> p35.
 intros h0 h1.
 refine (compose r8 r9 r23 i24 i27 i23 h0 h1 _) ; finalize.
Qed.
Lemma l33 : s1 -> p35 (* REL(float<53,-1074,ne>(float<53,-1074,ne>(r * x) * x), Mr * Mx * Mx, [-3.33067e-16, 3.33067e-16]) *).
 intros h0.
 assert (h1 := l34 h0).
 assert (h2 := l44 h0).
 apply t42. exact h1. exact h2.
Qed.
Definition f41 := Float2 (-417820827777334117) (-111).
Definition f42 := Float2 (5) (-55).
Definition i30 := makepairF f41 f42.
Notation p62 := (REL r14 r25 i30). (* REL(float<53,-1074,ne>(1 + float<53,-1074,ne>(float<53,-1074,ne>(x / K) * float<53,-1074,ne>(x / K))), 1 + Mx / MK * (Mx / MK), [-1.60939e-16, 1.38778e-16]) *)
Notation p63 := (REL r14 r15 i24). (* REL(float<53,-1074,ne>(1 + float<53,-1074,ne>(float<53,-1074,ne>(x / K) * float<53,-1074,ne>(x / K))), 1 + float<53,-1074,ne>(float<53,-1074,ne>(x / K) * float<53,-1074,ne>(x / K)), [-1.11022e-16, 1.11022e-16]) *)
Notation p64 := (FIX r15 (-1074)). (* FIX(1 + float<53,-1074,ne>(float<53,-1074,ne>(x / K) * float<53,-1074,ne>(x / K)), -1074) *)
Notation p65 := (FIX r16 (0)). (* FIX(1, 0) *)
Notation p66 := (ABS r16 i14). (* ABS(1, [1, 1]) *)
Lemma t43 : p23 -> p66.
 intros h0.
 refine (abs_of_bnd_p r16 i14 i14 h0 _) ; finalize.
Qed.
Lemma l60 : s1 -> p66 (* ABS(1, [1, 1]) *).
 intros h0.
 assert (h1 := l23 h0).
 apply t43. exact h1.
Qed.
Lemma t44 : p66 -> p65.
 intros h0.
 refine (fix_of_singleton_bnd r16 i14 (0) h0 _) ; finalize.
Qed.
Lemma l59 : s1 -> p65 (* FIX(1, 0) *).
 intros h0.
 assert (h1 := l60 h0).
 apply t44. exact h1.
Qed.
Notation p67 := (FIX r17 (-1074)). (* FIX(float<53,-1074,ne>(float<53,-1074,ne>(x / K) * float<53,-1074,ne>(x / K)), -1074) *)
Lemma t45 : p67.
 refine (fix_of_float _ _ _ _ (-1074) _) ; finalize.
Qed.
Lemma l61 : s1 -> p67 (* FIX(float<53,-1074,ne>(float<53,-1074,ne>(x / K) * float<53,-1074,ne>(x / K)), -1074) *).
 intros h0.
 apply t45.
Qed.
Lemma t46 : p65 -> p67 -> p64.
 intros h0 h1.
 refine (add_fix r16 r17 (0) (-1074) (-1074) h0 h1 _) ; finalize.
Qed.
Lemma l58 : s1 -> p64 (* FIX(1 + float<53,-1074,ne>(float<53,-1074,ne>(x / K) * float<53,-1074,ne>(x / K)), -1074) *).
 intros h0.
 assert (h1 := l59 h0).
 assert (h2 := l61 h0).
 apply t46. exact h1. exact h2.
Qed.
Lemma t47 : p64 -> p63.
 intros h0.
 refine (rel_of_fix_float_ne _ _ (-1074) r15 i24 h0 _) ; finalize.
Qed.
Lemma l57 : s1 -> p63 (* REL(float<53,-1074,ne>(1 + float<53,-1074,ne>(float<53,-1074,ne>(x / K) * float<53,-1074,ne>(x / K))), 1 + float<53,-1074,ne>(float<53,-1074,ne>(x / K) * float<53,-1074,ne>(x / K)), [-1.11022e-16, 1.11022e-16]) *).
 intros h0.
 assert (h1 := l58 h0).
 apply t47. exact h1.
Qed.
Definition f43 := Float2 (-129590451625622387) (-111).
Definition f44 := Float2 (15) (-59).
Definition i31 := makepairF f43 f44.
Notation p68 := (REL r15 r25 i31). (* REL(1 + float<53,-1074,ne>(float<53,-1074,ne>(x / K) * float<53,-1074,ne>(x / K)), 1 + Mx / MK * (Mx / MK), [-4.99164e-17, 2.60209e-17]) *)
Notation p69 := (REL r16 r16 i28). (* REL(1, 1, [0, 0]) *)
Lemma t48 : p69.
 refine (rel_refl r16 i28 _) ; finalize.
Qed.
Lemma l63 : s1 -> p69 (* REL(1, 1, [0, 0]) *).
 intros h0.
 apply t48.
Qed.
Definition f45 := Float2 (-475920933595098203) (-109).
Definition f46 := Float2 (55) (-57).
Definition i32 := makepairF f45 f46.
Notation p70 := (REL r17 r26 i32). (* REL(float<53,-1074,ne>(float<53,-1074,ne>(x / K) * float<53,-1074,ne>(x / K)), Mx / MK * (Mx / MK), [-7.33272e-16, 3.81639e-16]) *)
Notation p71 := (REL r17 r18 i24). (* REL(float<53,-1074,ne>(float<53,-1074,ne>(x / K) * float<53,-1074,ne>(x / K)), float<53,-1074,ne>(x / K) * float<53,-1074,ne>(x / K), [-1.11022e-16, 1.11022e-16]) *)
Definition i33 := makepairF f22 f20.
Notation p72 := (ABS r18 i33). (* ABS(float<53,-1074,ne>(x / K) * float<53,-1074,ne>(x / K), [0.0078125, 1]) *)
Definition i34 := makepairF f24 f20.
Notation p73 := (ABS r19 i34). (* ABS(float<53,-1074,ne>(x / K), [0.0898438, 1]) *)
Lemma t49 : p73 -> p73 -> p72.
 intros h0 h1.
 refine (mul_aa r19 r19 i34 i34 i33 h0 h1 _) ; finalize.
Qed.
Lemma l66 : s1 -> p72 (* ABS(float<53,-1074,ne>(x / K) * float<53,-1074,ne>(x / K), [0.0078125, 1]) *).
 intros h0.
 assert (h1 := l26 h0).
 apply t49. refine (abs_subset r19 i16 i34 h1 _) ; finalize. refine (abs_subset r19 i16 i34 h1 _) ; finalize.
Qed.
Lemma t50 : p72 -> p71.
 intros h0.
 refine (float_relative_ne _ _ r18 i33 i24 h0 _) ; finalize.
Qed.
Lemma l65 : s1 -> p71 (* REL(float<53,-1074,ne>(float<53,-1074,ne>(x / K) * float<53,-1074,ne>(x / K)), float<53,-1074,ne>(x / K) * float<53,-1074,ne>(x / K), [-1.11022e-16, 1.11022e-16]) *).
 intros h0.
 assert (h1 := l66 h0).
 apply t50. exact h1.
Qed.
Definition f47 := Float2 (-807726679114340623) (-110).
Definition f48 := Float2 (311) (-60).
Definition i35 := makepairF f47 f48.
Notation p74 := (REL r18 r26 i35). (* REL(float<53,-1074,ne>(x / K) * float<53,-1074,ne>(x / K), Mx / MK * (Mx / MK), [-6.2225e-16, 2.6975e-16]) *)
Definition f49 := Float2 (-201931669778585187) (-109).
Definition f50 := Float2 (621) (-62).
Definition i36 := makepairF f49 f50.
Notation p75 := (REL r19 r27 i36). (* REL(float<53,-1074,ne>(x / K), Mx / MK, [-3.11125e-16, 1.34658e-16]) *)
Notation p76 := (REL r19 r20 i24). (* REL(float<53,-1074,ne>(x / K), x / K, [-1.11022e-16, 1.11022e-16]) *)
Notation p77 := (ABS r20 i26). (* ABS(x / K, [0.0625, 1]) *)
Definition i37 := makepairF f20 f15.
Notation p78 := (ABS _K i37). (* ABS(K, [1, 1.5]) *)
Notation p79 := (BND _K i37). (* BND(K, [1, 1.5]) *)
Lemma t51 : p79 -> p78.
 intros h0.
 refine (abs_of_bnd_p _K i37 i37 h0 _) ; finalize.
Qed.
Lemma l71 : s1 -> p78 (* ABS(K, [1, 1.5]) *).
 intros h0.
 assert (h1 := l29 h0).
 apply t51. refine (subset _K i17 i37 h1 _) ; finalize.
Qed.
Lemma t52 : p45 -> p78 -> p77.
 intros h0 h1.
 refine (div_aa _x _K i25 i37 i26 h0 h1 _) ; finalize.
Qed.
Lemma l70 : s1 -> p77 (* ABS(x / K, [0.0625, 1]) *).
 intros h0.
 assert (h1 := l43 h0).
 assert (h2 := l71 h0).
 apply t52. exact h1. exact h2.
Qed.
Lemma t53 : p77 -> p76.
 intros h0.
 refine (float_relative_ne _ _ r20 i26 i24 h0 _) ; finalize.
Qed.
Lemma l69 : s1 -> p76 (* REL(float<53,-1074,ne>(x / K), x / K, [-1.11022e-16, 1.11022e-16]) *).
 intros h0.
 assert (h1 := l70 h0).
 apply t53. exact h1.
Qed.
Definition f51 := Float2 (-519496302962629061) (-111).
Definition f52 := Float2 (217) (-63).
Definition i38 := makepairF f51 f52.
Notation p80 := (REL r20 r27 i38). (* REL(x / K, Mx / MK, [-2.00103e-16, 2.35272e-17]) *)
Definition f53 := Float2 (807) (-63).
Definition f54 := Float2 (462531853621834725) (-112).
Definition i39 := makepairF f53 f54.
Notation p81 := (REL _K _MK i39). (* REL(K, MK, [8.74951e-17, 8.90804e-17]) *)
Notation p82 := (NZR _MK). (* NZR(MK) *)
Definition f55 := Float2 (319935717528400035) (-58).
Definition f56 := Float2 (39991964691050005) (-55).
Definition i40 := makepairF f55 f56.
Notation p83 := (ABS _MK i40). (* ABS(MK, [1.11, 1.11]) *)
Notation p84 := (BND _MK i40). (* BND(MK, [1.11, 1.11]) *)
Lemma t54 : p84 -> p83.
 intros h0.
 refine (abs_of_bnd_p _MK i40 i40 h0 _) ; finalize.
Qed.
Lemma l75 : s1 -> p83 (* ABS(MK, [1.11, 1.11]) *).
 intros h0.
 assert (h1 := l30 h0).
 apply t54. refine (subset _MK i2 i40 h1 _) ; finalize.
Qed.
Definition f57 := Float2 (1) (1).
Definition i41 := makepairF f20 f57.
Notation p85 := (ABS _MK i41). (* ABS(MK, [1, 2]) *)
Lemma t55 : p85 -> p82.
 intros h0.
 refine (nzr_of_abs _MK i41 h0 _) ; finalize.
Qed.
Lemma l74 : s1 -> p82 (* NZR(MK) *).
 intros h0.
 assert (h1 := l75 h0).
 apply t55. refine (abs_subset _MK i40 i41 h1 _) ; finalize.
Qed.
Notation r32 := ((_K - _MK)%R).
Notation r31 := ((r32 / _MK)%R).
Notation p86 := (BND r31 i39). (* BND((K - MK) / MK, [8.74951e-17, 8.90804e-17]) *)
Definition f58 := Float2 (7) (-56).
Definition f59 := Float2 (57) (-59).
Definition i42 := makepairF f58 f59.
Notation p87 := (BND r32 i42). (* BND(K - MK, [9.71445e-17, 9.88792e-17]) *)
Lemma t56 : p29 -> p2 -> p87.
 intros h0 h1.
 refine (sub _K _MK i17 i2 i42 h0 h1 _) ; finalize.
Qed.
Lemma l77 : s1 -> p87 (* BND(K - MK, [9.71445e-17, 9.88792e-17]) *).
 intros h0.
 assert (h1 := l29 h0).
 assert (h2 := l30 h0).
 apply t56. exact h1. exact h2.
Qed.
Definition f60 := Float2 (4547) (-12).
Definition i43 := makepairF f2 f60.
Notation p88 := (BND _MK i43). (* BND(MK, [1.11, 1.11011]) *)
Lemma t57 : p87 -> p88 -> p86.
 intros h0 h1.
 refine (div_pp r32 _MK i42 i43 i39 h0 h1 _) ; finalize.
Qed.
Lemma l76 : s1 -> p86 (* BND((K - MK) / MK, [8.74951e-17, 8.90804e-17]) *).
 intros h0.
 assert (h1 := l77 h0).
 assert (h2 := l30 h0).
 apply t57. exact h1. refine (subset _MK i2 i43 h2 _) ; finalize.
Qed.
Lemma t58 : p82 -> p86 -> p81.
 intros h0 h1.
 refine (rel_of_nzr_bnd _K _MK i39 h0 h1) ; finalize.
Qed.
Lemma l73 : s1 -> p81 (* REL(K, MK, [8.74951e-17, 8.90804e-17]) *).
 intros h0.
 assert (h1 := l74 h0).
 assert (h2 := l76 h0).
 apply t58. exact h1. exact h2.
Qed.
Lemma t59 : p58 -> p81 -> p82 -> p80.
 intros h0 h1 h2.
 refine (div_rr _x _Mx _K _MK i24 i39 i38 h0 h1 h2 _) ; finalize.
Qed.
Lemma l72 : s1 -> p80 (* REL(x / K, Mx / MK, [-2.00103e-16, 2.35272e-17]) *).
 intros h0.
 assert (h1 := l54 h0).
 assert (h2 := l73 h0).
 assert (h3 := l74 h0).
 apply t59. exact h1. exact h2. exact h3.
Qed.
Lemma t60 : p76 -> p80 -> p75.
 intros h0 h1.
 refine (compose r19 r20 r27 i24 i38 i36 h0 h1 _) ; finalize.
Qed.
Lemma l68 : s1 -> p75 (* REL(float<53,-1074,ne>(x / K), Mx / MK, [-3.11125e-16, 1.34658e-16]) *).
 intros h0.
 assert (h1 := l69 h0).
 assert (h2 := l72 h0).
 apply t60. exact h1. exact h2.
Qed.
Definition f61 := Float2 (311) (-61).
Definition i44 := makepairF f49 f61.
Notation p89 := (REL r19 r27 i44). (* REL(float<53,-1074,ne>(x / K), Mx / MK, [-3.11125e-16, 1.34875e-16]) *)
Lemma t61 : p89 -> p75 -> p74.
 intros h0 h1.
 refine (mul_rr r19 r27 r19 r27 i44 i36 i35 h0 h1 _) ; finalize.
Qed.
Lemma l67 : s1 -> p74 (* REL(float<53,-1074,ne>(x / K) * float<53,-1074,ne>(x / K), Mx / MK * (Mx / MK), [-6.2225e-16, 2.6975e-16]) *).
 intros h0.
 assert (h1 := l68 h0).
 apply t61. refine (rel_subset r19 r27 i36 i44 h1 _) ; finalize. exact h1.
Qed.
Lemma t62 : p71 -> p74 -> p70.
 intros h0 h1.
 refine (compose r17 r18 r26 i24 i35 i32 h0 h1 _) ; finalize.
Qed.
Lemma l64 : s1 -> p70 (* REL(float<53,-1074,ne>(float<53,-1074,ne>(x / K) * float<53,-1074,ne>(x / K)), Mx / MK * (Mx / MK), [-7.33272e-16, 3.81639e-16]) *).
 intros h0.
 assert (h1 := l65 h0).
 assert (h2 := l67 h0).
 apply t62. exact h1. exact h2.
Qed.
Notation r33 := ((r16 / r25)%R).
Definition f62 := Float2 (1074438080195216819) (-60).
Definition i45 := makepairF f62 f20.
Notation p90 := (BND r33 i45). (* BND(1 / (1 + Mx / MK * (Mx / MK)), [0.931926, 1]) *)
Definition f63 := Float2 (581139437087965517) (-59).
Definition f64 := Float2 (618568915364301757) (-59).
Definition i46 := makepairF f63 f64.
Notation p91 := (BND r25 i46). (* BND(1 + Mx / MK * (Mx / MK), [1.00812, 1.07305]) *)
Definition f65 := Float2 (4678684784542029) (-59).
Definition f66 := Float2 (42108163060878269) (-59).
Definition i47 := makepairF f65 f66.
Notation p92 := (BND r26 i47). (* BND(Mx / MK * (Mx / MK), [0.00811622, 0.073046]) *)
Definition f67 := Float2 (3245837569276033) (-55).
Definition f68 := Float2 (19475025415656199) (-56).
Definition i48 := makepairF f67 f68.
Notation p93 := (ABS r27 i48). (* ABS(Mx / MK, [0.0900901, 0.27027]) *)
Lemma t63 : p59 -> p83 -> p93.
 intros h0 h1.
 refine (div_aa _Mx _MK i29 i40 i48 h0 h1 _) ; finalize.
Qed.
Lemma l81 : s1 -> p93 (* ABS(Mx / MK, [0.0900901, 0.27027]) *).
 intros h0.
 assert (h1 := l55 h0).
 assert (h2 := l75 h0).
 apply t63. exact h1. exact h2.
Qed.
Lemma t64 : p93 -> p92.
 intros h0.
 refine (square r27 i48 i47 h0 _) ; finalize.
Qed.
Lemma l80 : s1 -> p92 (* BND(Mx / MK * (Mx / MK), [0.00811622, 0.073046]) *).
 intros h0.
 assert (h1 := l81 h0).
 apply t64. exact h1.
Qed.
Lemma t65 : p23 -> p92 -> p91.
 intros h0 h1.
 refine (add r16 r26 i14 i47 i46 h0 h1 _) ; finalize.
Qed.
Lemma l79 : s1 -> p91 (* BND(1 + Mx / MK * (Mx / MK), [1.00812, 1.07305]) *).
 intros h0.
 assert (h1 := l23 h0).
 assert (h2 := l80 h0).
 apply t65. exact h1. exact h2.
Qed.
Definition i49 := makepairF f20 f64.
Notation p94 := (BND r25 i49). (* BND(1 + Mx / MK * (Mx / MK), [1, 1.07305]) *)
Lemma t66 : p23 -> p94 -> p90.
 intros h0 h1.
 refine (div_pp r16 r25 i14 i49 i45 h0 h1 _) ; finalize.
Qed.
Lemma l78 : s1 -> p90 (* BND(1 / (1 + Mx / MK * (Mx / MK)), [0.931926, 1]) *).
 intros h0.
 assert (h1 := l23 h0).
 assert (h2 := l79 h0).
 apply t66. exact h1. refine (subset r25 i46 i49 h2 _) ; finalize.
Qed.
Notation p95 := (NZR r25). (* NZR(1 + Mx / MK * (Mx / MK)) *)
Definition i50 := makepairF f12 f57.
Notation p96 := (ABS r25 i50). (* ABS(1 + Mx / MK * (Mx / MK), [0.5, 2]) *)
Definition i51 := makepairF f22 f12.
Notation p97 := (ABS r26 i51). (* ABS(Mx / MK * (Mx / MK), [0.0078125, 0.5]) *)
Notation p98 := (ABS r27 i34). (* ABS(Mx / MK, [0.0898438, 1]) *)
Notation p99 := (ABS r27 i16). (* ABS(Mx / MK, [0.0898438, 0.5]) *)
Lemma t67 : p98 -> p99 -> p97.
 intros h0 h1.
 refine (mul_aa r27 r27 i34 i16 i51 h0 h1 _) ; finalize.
Qed.
Lemma l84 : s1 -> p97 (* ABS(Mx / MK * (Mx / MK), [0.0078125, 0.5]) *).
 intros h0.
 assert (h1 := l81 h0).
 apply t67. refine (abs_subset r27 i48 i34 h1 _) ; finalize. refine (abs_subset r27 i48 i16 h1 _) ; finalize.
Qed.
Lemma t68 : p66 -> p97 -> p96.
 intros h0 h1.
 refine (add_aa_p r16 r26 i14 i51 i50 h0 h1 _) ; finalize.
Qed.
Lemma l83 : s1 -> p96 (* ABS(1 + Mx / MK * (Mx / MK), [0.5, 2]) *).
 intros h0.
 assert (h1 := l60 h0).
 assert (h2 := l84 h0).
 apply t68. exact h1. exact h2.
Qed.
Lemma t69 : p96 -> p95.
 intros h0.
 refine (nzr_of_abs r25 i50 h0 _) ; finalize.
Qed.
Lemma l82 : s1 -> p95 (* NZR(1 + Mx / MK * (Mx / MK)) *).
 intros h0.
 assert (h1 := l83 h0).
 apply t69. exact h1.
Qed.
Lemma t70 : p69 -> p70 -> p90 -> p95 -> p68.
 intros h0 h1 h2 h3.
 refine (add_rr r16 r16 r17 r26 i28 i32 i45 i31 h0 h1 h2 h3 _) ; finalize.
Qed.
Lemma l62 : s1 -> p68 (* REL(1 + float<53,-1074,ne>(float<53,-1074,ne>(x / K) * float<53,-1074,ne>(x / K)), 1 + Mx / MK * (Mx / MK), [-4.99164e-17, 2.60209e-17]) *).
 intros h0.
 assert (h1 := l63 h0).
 assert (h2 := l64 h0).
 assert (h3 := l78 h0).
 assert (h4 := l82 h0).
 apply t70. exact h1. exact h2. exact h3. exact h4.
Qed.
Lemma t71 : p63 -> p68 -> p62.
 intros h0 h1.
 refine (compose r14 r15 r25 i24 i31 i30 h0 h1 _) ; finalize.
Qed.
Lemma l56 : s1 -> p62 (* REL(float<53,-1074,ne>(1 + float<53,-1074,ne>(float<53,-1074,ne>(x / K) * float<53,-1074,ne>(x / K))), 1 + Mx / MK * (Mx / MK), [-1.60939e-16, 1.38778e-16]) *).
 intros h0.
 assert (h1 := l57 h0).
 assert (h2 := l62 h0).
 apply t71. exact h1. exact h2.
Qed.
Lemma t72 : p35 -> p62 -> p95 -> p34.
 intros h0 h1 h2.
 refine (div_rr r8 r23 r14 r25 i23 i30 i22 h0 h1 h2 _) ; finalize.
Qed.
Lemma l32 : s1 -> p34 (* REL(float<53,-1074,ne>(float<53,-1074,ne>(r * x) * x) / float<53,-1074,ne>(1 + float<53,-1074,ne>(float<53,-1074,ne>(x / K) * float<53,-1074,ne>(x / K))), Mres, [-4.71845e-16, 4.94006e-16]) *).
 intros h0.
 assert (h1 := l33 h0).
 assert (h2 := l56 h0).
 assert (h3 := l82 h0).
 apply t72. exact h1. exact h2. exact h3.
Qed.
Definition f69 := Float2 (411710209240314483) (-60).
Definition i52 := makepairF f11 f69.
Notation p100 := (BND _Mres i52). (* BND(Mres, [0.03125, 0.357102]) *)
Definition f70 := Float2 (25940733853654057) (-56).
Definition i53 := makepairF f13 f70.
Notation p101 := (BND r23 i53). (* BND(Mr * Mx * Mx, [0.0390625, 0.36]) *)
Definition f71 := Float2 (345876451382054093) (-58).
Definition i54 := makepairF f14 f71.
Notation p102 := (BND r24 i54). (* BND(Mr * Mx, [0.398438, 1.2]) *)
Definition i55 := makepairF f18 f5.
Notation p103 := (BND _Mx i55). (* BND(Mx, [0.0996094, 0.3]) *)
Lemma t73 : p1 -> p103 -> p102.
 intros h0 h1.
 refine (mul_pp _Mr _Mx i1 i55 i54 h0 h1 _) ; finalize.
Qed.
Lemma l87 : s1 -> p102 (* BND(Mr * Mx, [0.398438, 1.2]) *).
 intros h0.
 assert (h1 := l15 h0).
 assert (h2 := l19 h0).
 apply t73. exact h1. refine (subset _Mx i3 i55 h2 _) ; finalize.
Qed.
Lemma t74 : p102 -> p103 -> p101.
 intros h0 h1.
 refine (mul_pp r24 _Mx i54 i55 i53 h0 h1 _) ; finalize.
Qed.
Lemma l86 : s1 -> p101 (* BND(Mr * Mx * Mx, [0.0390625, 0.36]) *).
 intros h0.
 assert (h1 := l87 h0).
 assert (h2 := l19 h0).
 apply t74. exact h1. refine (subset _Mx i3 i55 h2 _) ; finalize.
Qed.
Definition i56 := makepairF f63 f21.
Notation p104 := (BND r25 i56). (* BND(1 + Mx / MK * (Mx / MK), [1.00812, 1.25]) *)
Lemma t75 : p101 -> p104 -> p100.
 intros h0 h1.
 refine (div_pp r23 r25 i53 i56 i52 h0 h1 _) ; finalize.
Qed.
Lemma l85 : s1 -> p100 (* BND(Mres, [0.03125, 0.357102]) *).
 intros h0.
 assert (h1 := l86 h0).
 assert (h2 := l79 h0).
 apply t75. exact h1. refine (subset r25 i46 i56 h2 _) ; finalize.
Qed.
Lemma t76 : p34 -> p100 -> p33.
 intros h0 h1.
 refine (error_of_rel_op r7 _Mres i22 i52 i21 h0 h1 _) ; finalize.
Qed.
Lemma l31 : s1 -> p33 (* BND(float<53,-1074,ne>(float<53,-1074,ne>(r * x) * x) / float<53,-1074,ne>(1 + float<53,-1074,ne>(float<53,-1074,ne>(x / K) * float<53,-1074,ne>(x / K))) - Mres, [-1.73472e-16, 1.7641e-16]) *).
 intros h0.
 assert (h1 := l32 h0).
 assert (h2 := l85 h0).
 apply t76. exact h1. exact h2.
Qed.
Lemma t77 : p8 -> p33 -> p7.
 intros h0 h1.
 refine (add r29 r30 i6 i21 i5 h0 h1 _) ; finalize.
Qed.
Lemma l6 : s1 -> p7 (* BND(res - float<53,-1074,ne>(float<53,-1074,ne>(r * x) * x) / float<53,-1074,ne>(1 + float<53,-1074,ne>(float<53,-1074,ne>(x / K) * float<53,-1074,ne>(x / K))) + (float<53,-1074,ne>(float<53,-1074,ne>(r * x) * x) / float<53,-1074,ne>(1 + float<53,-1074,ne>(float<53,-1074,ne>(x / K) * float<53,-1074,ne>(x / K))) - Mres), [-2.01228e-16, 2.04166e-16]) *).
 intros h0.
 assert (h1 := l7 h0).
 assert (h2 := l31 h0).
 apply t77. exact h1. exact h2.
Qed.
Lemma t78 : p7 -> p6.
 intros h0.
 refine (sub_xals _ _ _ i5 h0) ; finalize.
Qed.
Lemma l5 : s1 -> p6 (* BND(res - Mres, [-2.01228e-16, 2.04166e-16]) *).
 intros h0.
 assert (h1 := l6 h0).
 apply t78. exact h1.
Qed.
Lemma t79 : p6 -> p5.
 intros h0.
 refine (abs_of_bnd_o r5 i5 i4 h0 _) ; finalize.
Qed.
Lemma l4 : s1 -> p5 (* ABS(res - Mres, [0, 2.04166e-16]) *).
 intros h0.
 assert (h1 := l5 h0).
 apply t79. exact h1.
Qed.
Lemma t80 : p5 -> p4.
 intros h0.
 refine (uabs_of_abs r5 i4 h0) ; finalize.
Qed.
Lemma l3 : s1 -> p4 (* BND(|res - Mres|, [0, 2.04166e-16]) *).
 intros h0.
 assert (h1 := l4 h0).
 apply t80. exact h1.
Qed.
Lemma l1 : s1 -> False.
 intros h0.
 assert (h1 := l2 h0).
 assert (h2 := l3 h0).
 refine (simplify (Tatom false (Abnd 0%nat i4)) Tfalse (Abnd 0%nat i4) (List.cons r4 List.nil) h2 h1 _) ; finalize.
Qed.
End Generated_by_Gappa.
