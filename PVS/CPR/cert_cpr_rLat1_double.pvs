% This file is automatically generated by PRECiSA 
% 2016-11-25 19:13:53.566831 UTC

cert_cpr_rLat1_double: THEORY
BEGIN
IMPORTING PRECiSA@strategies, cpr_rLat1_double

%|- *_TCC* : PROOF
%|- (try (then (grind-reals) (fail)) (skip) (subtype-tcc))
%|- QED

rLat1_0 : LEMMA
FORALL(e_YZ, e_Lat: nonneg_real, r_YZ, r_Lat: real, YZ, Lat: unb_double):
abs(DtoR(YZ) - r_YZ)<=e_YZ AND abs(DtoR(Lat) - r_Lat)<=e_Lat
AND ((((59 + aebounddp_sub(60, 0, 1, 0)) < 0) OR ((59 - aebounddp_sub(60, 0, 1, 0)) > 0)) AND ((((131072 + 0) < 0) OR ((131072 - 0) > 0)) AND ((((59 + aebounddp_sub(60, 0, 1, 0)) < 0) OR ((59 - aebounddp_sub(60, 0, 1, 0)) > 0)) AND ((((360 / 59) + aebounddp_div(360, 0, (60 - 1), aebounddp_sub(60, 0, 1, 0))) < 0) OR (((360 / 59) - aebounddp_div(360, 0, (60 - 1), aebounddp_sub(60, 0, 1, 0))) > 0)))))
AND TRUE
IMPLIES
abs(DtoR(rLat1(YZ, Lat)) - ((360 / (60 - 1)) * ((r_YZ / 131072) + floor((r_Lat / (360 / (60 - 1)))))))<=aebounddp_mul((360 / (60 - 1)), aebounddp_div(360, 0, (60 - 1), aebounddp_sub(60, 0, 1, 0)), ((r_YZ / 131072) + floor((r_Lat / (360 / (60 - 1))))), aebounddp_add((r_YZ / 131072), aebounddp_div(r_YZ, e_YZ, 131072, 0), floor((r_Lat / (360 / (60 - 1)))), aebounddp_flr((r_Lat / (360 / (60 - 1))), aebounddp_div(r_Lat, e_Lat, (360 / (60 - 1)), aebounddp_div(360, 0, (60 - 1), aebounddp_sub(60, 0, 1, 0))))))

%|- rLat1_0: PROOF
%|- (then
%|- (skeep)
%|- (expand "rLat1" :assert? none)
%|- (try-simp-ite)
%|- (then
%|- (lemma "Dmul_aerr")
%|- (let ((new-label (freshname "l")))
%|-    (then (label new-label -1)
%|- (branch (with-tccs (inst new-label
%|-    "aebounddp_div(360, 0, (60 - 1), aebounddp_sub(60, 0, 1, 0))"
%|-    "aebounddp_add((r_YZ / 131072), aebounddp_div(r_YZ, e_YZ, 131072, 0), floor((r_Lat / (360 / (60 - 1)))), aebounddp_flr((r_Lat / (360 / (60 - 1))), aebounddp_div(r_Lat, e_Lat, (360 / (60 - 1)), aebounddp_div(360, 0, (60 - 1), aebounddp_sub(60, 0, 1, 0)))))"
%|-    "(360 / (60 - 1))"
%|-    "((r_YZ / 131072) + floor((r_Lat / (360 / (60 - 1)))))"
%|-    "Ddiv(RtoD(360), Dsub(RtoD(60), RtoD(1)))"
%|-    "Dadd(Ddiv(YZ, RtoD(131072)), Dfloor(Ddiv(Lat, Ddiv(RtoD(360), Dsub(RtoD(60), RtoD(1))))))"
%|- ))
%|- ((branch
%|- (split -1)
%|- (
%|- (then (aerr-assert) (fail))
%|- (then
%|- (lemma "Ddiv_aerr")
%|- (let ((new-label (freshname "l")))
%|-    (then (label new-label -1)
%|- (branch (with-tccs (inst new-label
%|-    "0"
%|-    "aebounddp_sub(60, 0, 1, 0)"
%|-    "360"
%|-    "(60 - 1)"
%|-    "RtoD(360)"
%|-    "Dsub(RtoD(60), RtoD(1))"
%|- ))
%|- ((branch
%|- (split -1)
%|- (
%|- (then (aerr-assert) (fail))
%|- (eval-formulas +)
%|- (then
%|- (lemma "Dsub_aerr")
%|- (let ((new-label (freshname "l")))
%|-    (then (label new-label -1)
%|- (branch (with-tccs (inst new-label
%|-    "0"
%|-    "0"
%|-    "60"
%|-    "1"
%|-    "RtoD(60)"
%|-    "RtoD(1)"
%|- ))
%|- ((branch
%|- (split -1)
%|- (
%|- (then (aerr-assert) (fail))
%|- (eval-formulas +)
%|- (eval-formulas +)
%|- (assert-condition)
%|- ))
%|- (assert-condition))))))
%|- (assert-condition)
%|- ))
%|- (assert-condition))))))
%|- (then
%|- (lemma "Dadd_aerr")
%|- (let ((new-label (freshname "l")))
%|-    (then (label new-label -1)
%|- (branch (with-tccs (inst new-label
%|-    "aebounddp_div(r_YZ, e_YZ, 131072, 0)"
%|-    "aebounddp_flr((r_Lat / (360 / (60 - 1))), aebounddp_div(r_Lat, e_Lat, (360 / (60 - 1)), aebounddp_div(360, 0, (60 - 1), aebounddp_sub(60, 0, 1, 0))))"
%|-    "(r_YZ / 131072)"
%|-    "floor((r_Lat / (360 / (60 - 1))))"
%|-    "Ddiv(YZ, RtoD(131072))"
%|-    "Dfloor(Ddiv(Lat, Ddiv(RtoD(360), Dsub(RtoD(60), RtoD(1)))))"
%|- ))
%|- ((branch
%|- (split -1)
%|- (
%|- (then (aerr-assert) (fail))
%|- (then
%|- (lemma "Ddiv_aerr")
%|- (let ((new-label (freshname "l")))
%|-    (then (label new-label -1)
%|- (branch (with-tccs (inst new-label
%|-    "e_YZ"
%|-    "0"
%|-    "r_YZ"
%|-    "131072"
%|-    "YZ"
%|-    "RtoD(131072)"
%|- ))
%|- ((branch
%|- (split -1)
%|- (
%|- (then (aerr-assert) (fail))
%|- (propax)
%|- (eval-formulas +)
%|- (assert-condition)
%|- ))
%|- (assert-condition))))))
%|- (then
%|- (lemma "Dfloor_aerr")
%|- (let ((new-label (freshname "l")))
%|-    (then (label new-label -1)
%|- (branch (with-tccs (inst new-label
%|-    "aebounddp_div(r_Lat, e_Lat, (360 / (60 - 1)), aebounddp_div(360, 0, (60 - 1), aebounddp_sub(60, 0, 1, 0)))"
%|-    "(r_Lat / (360 / (60 - 1)))"
%|-    "Ddiv(Lat, Ddiv(RtoD(360), Dsub(RtoD(60), RtoD(1))))"
%|- ))
%|- ((branch
%|- (split -1)
%|- (
%|- (then (aerr-assert) (fail))
%|- (then
%|- (lemma "Ddiv_aerr")
%|- (let ((new-label (freshname "l")))
%|-    (then (label new-label -1)
%|- (branch (with-tccs (inst new-label
%|-    "e_Lat"
%|-    "aebounddp_div(360, 0, (60 - 1), aebounddp_sub(60, 0, 1, 0))"
%|-    "r_Lat"
%|-    "(360 / (60 - 1))"
%|-    "Lat"
%|-    "Ddiv(RtoD(360), Dsub(RtoD(60), RtoD(1)))"
%|- ))
%|- ((branch
%|- (split -1)
%|- (
%|- (then (aerr-assert) (fail))
%|- (propax)
%|- (then
%|- (lemma "Ddiv_aerr")
%|- (let ((new-label (freshname "l")))
%|-    (then (label new-label -1)
%|- (branch (with-tccs (inst new-label
%|-    "0"
%|-    "aebounddp_sub(60, 0, 1, 0)"
%|-    "360"
%|-    "(60 - 1)"
%|-    "RtoD(360)"
%|-    "Dsub(RtoD(60), RtoD(1))"
%|- ))
%|- ((branch
%|- (split -1)
%|- (
%|- (then (aerr-assert) (fail))
%|- (eval-formulas +)
%|- (then
%|- (lemma "Dsub_aerr")
%|- (let ((new-label (freshname "l")))
%|-    (then (label new-label -1)
%|- (branch (with-tccs (inst new-label
%|-    "0"
%|-    "0"
%|-    "60"
%|-    "1"
%|-    "RtoD(60)"
%|-    "RtoD(1)"
%|- ))
%|- ((branch
%|- (split -1)
%|- (
%|- (then (aerr-assert) (fail))
%|- (eval-formulas +)
%|- (eval-formulas +)
%|- (assert-condition)
%|- ))
%|- (assert-condition))))))
%|- (assert-condition)
%|- ))
%|- (assert-condition))))))
%|- (assert-condition)
%|- ))
%|- (assert-condition))))))
%|- (assert-condition)
%|- ))
%|- (assert-condition))))))
%|- (assert-condition)
%|- ))
%|- (assert-condition))))))
%|- (assert-condition)
%|- ))
%|- (assert-condition))))))
%|- )
%|- QED


END cert_cpr_rLat1_double